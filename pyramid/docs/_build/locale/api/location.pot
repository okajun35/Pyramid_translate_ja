# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-28 18:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/location.rst:4
msgid ":mod:`pyramid.location`"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/location.py:docstring of pyramid.location.lineage:1
msgid "Return a generator representing the :term:`lineage` of the :term:`resource` object implied by the ``resource`` argument.  The generator first returns ``resource`` unconditionally.  Then, if ``resource`` supplies a ``__parent__`` attribute, return the resource represented by ``resource.__parent__``.  If *that* resource has a ``__parent__`` attribute, return that resource's parent, and so on, until the resource being inspected either has no ``__parent__`` attribute or which has a ``__parent__`` attribute of ``None``. For example, if the resource tree is::"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/location.py:docstring of pyramid.location.lineage:15
msgid "Calling ``lineage(thing2)`` will return a generator.  When we turn it into a list, we will get::"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/location.py:docstring of pyramid.location.inside:1
msgid "Is ``resource1`` 'inside' ``resource2``?  Return ``True`` if so, else ``False``."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/location.py:docstring of pyramid.location.inside:4
msgid "``resource1`` is 'inside' ``resource2`` if ``resource2`` is a :term:`lineage` ancestor of ``resource1``.  It is a lineage ancestor if its parent (or one of its parent's parents, etc.) is an ancestor."
msgstr ""

