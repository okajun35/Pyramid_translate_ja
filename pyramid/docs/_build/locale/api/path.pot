# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-28 18:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/path.rst:4
msgid ":mod:`pyramid.path`"
msgstr ""

#: ../../api/path.rst:10
msgid "A constant used by the constructor of :class:`pyramid.path.DottedNameResolver` and :class:`pyramid.path.AssetResolver`."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:1
msgid "A class used to resolve a :term:`dotted Python name` to a package or module object."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:6
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:6
msgid "The constructor accepts a single argument named ``package`` which may be any of:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:9
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:9
msgid "A fully qualified (not relative) dotted name to a module or package"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:11
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:11
msgid "a Python module or package object"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:13
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:13
msgid "The value ``None``"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:15
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:15
msgid "The constant value :attr:`pyramid.path.CALLER_PACKAGE`."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:17
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:17
msgid "The default value is :attr:`pyramid.path.CALLER_PACKAGE`."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:19
msgid "The ``package`` is used when a relative dotted name is supplied to the :meth:`~pyramid.path.DottedNameResolver.resolve` method.  A dotted name which has a ``.`` (dot) or ``:`` (colon) as its first character is treated as relative."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:24
msgid "If ``package`` is ``None``, the resolver will only be able to resolve fully qualified (not relative) names.  Any attempt to resolve a relative name will result in an :exc:`ValueError` exception."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:28
msgid "If ``package`` is :attr:`pyramid.path.CALLER_PACKAGE`, the resolver will treat relative dotted names as relative to the caller of the :meth:`~pyramid.path.DottedNameResolver.resolve` method."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:33
msgid "If ``package`` is a *module* or *module name* (as opposed to a package or package name), its containing package is computed and this package used to derive the package name (all names are resolved relative to packages, never to modules).  For example, if the ``package`` argument to this type was passed the string ``xml.dom.expatbuilder``, and ``.mindom`` is supplied to the :meth:`~pyramid.path.DottedNameResolver.resolve` method, the resulting import would be for ``xml.minidom``, because ``xml.dom.expatbuilder`` is a module object, not a package object."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver:43
msgid "If ``package`` is a *package* or *package name* (as opposed to a module or module name), this package will be used to relative compute dotted names.  For example, if the ``package`` argument to this type was passed the string ``xml.dom``, and ``.minidom`` is supplied to the :meth:`~pyramid.path.DottedNameResolver.resolve` method, the resulting import would be for ``xml.minidom``."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.maybe_resolve:1
msgid "This method behaves just like :meth:`~pyramid.path.DottedNameResolver.resolve`, except if the ``dotted`` value passed is not a string, it is simply returned.  For example:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.resolve:1
msgid "This method resolves a dotted name reference to a global Python object (an object which can be imported) to the object itself."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.resolve:4
msgid "Two dotted name styles are supported:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.resolve:6
msgid "``pkg_resources``-style dotted names where non-module attributes of a package are separated from the rest of the path using a ``:`` e.g. ``package.module:attr``."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.resolve:10
msgid "``zope.dottedname``-style dotted names where non-module attributes of a package are separated from the rest of the path using a ``.`` e.g. ``package.module.attr``."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.resolve:14
msgid "These styles can be used interchangeably.  If the supplied name contains a ``:`` (colon), the ``pkg_resources`` resolution mechanism will be chosen, otherwise the ``zope.dottedname`` resolution mechanism will be chosen."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.resolve:19
msgid "If the ``dotted`` argument passed to this method is not a string, a :exc:`ValueError` will be raised."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.resolve:22
msgid "When a dotted name cannot be resolved, a :exc:`ValueError` error is raised."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.DottedNameResolver.resolve:25
msgid "Example:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:1
msgid "A class used to resolve an :term:`asset specification` to an :term:`asset descriptor`."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:19
msgid "The ``package`` is used when a relative asset specification is supplied to the :meth:`~pyramid.path.AssetResolver.resolve` method.  An asset specification without a colon in it is treated as relative."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:23
msgid "If ``package`` is ``None``, the resolver will only be able to resolve fully qualified (not relative) asset specifications.  Any attempt to resolve a relative asset specification will result in an :exc:`ValueError` exception."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:28
msgid "If ``package`` is :attr:`pyramid.path.CALLER_PACKAGE`, the resolver will treat relative asset specifications as relative to the caller of the :meth:`~pyramid.path.AssetResolver.resolve` method."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:33
msgid "If ``package`` is a *module* or *module name* (as opposed to a package or package name), its containing package is computed and this package is used to derive the package name (all names are resolved relative to packages, never to modules).  For example, if the ``package`` argument to this type was passed the string ``xml.dom.expatbuilder``, and ``template.pt`` is supplied to the :meth:`~pyramid.path.AssetResolver.resolve` method, the resulting absolute asset spec would be ``xml.minidom:template.pt``, because ``xml.dom.expatbuilder`` is a module object, not a package object."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver:43
msgid "If ``package`` is a *package* or *package name* (as opposed to a module or module name), this package will be used to compute relative asset specifications.  For example, if the ``package`` argument to this type was passed the string ``xml.dom``, and ``template.pt`` is supplied to the :meth:`~pyramid.path.AssetResolver.resolve` method, the resulting absolute asset spec would be ``xml.minidom:template.pt``."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver.resolve:1
msgid "Resolve the asset spec named as ``spec`` to an object that has the attributes and methods described in :class:`pyramid.interfaces.IAssetDescriptor`."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver.resolve:5
msgid "If ``spec`` is an absolute filename (e.g. ``/path/to/myproject/templates/foo.pt``) or an absolute asset spec (e.g. ``myproject:templates.foo.pt``), an asset descriptor is returned without taking into account the ``package`` passed to this class' constructor."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver.resolve:11
msgid "If ``spec`` is a *relative* asset specification (an asset specification without a ``:`` in it, e.g. ``templates/foo.pt``), the ``package`` argument of the constructor is used as the package portion of the asset spec.  For example:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/path.py:docstring of pyramid.path.AssetResolver.resolve:23
msgid "If the AssetResolver is constructed without a ``package`` argument of ``None``, and a relative asset specification is passed to ``resolve``, an :exc:`ValueError` exception is raised."
msgstr ""

