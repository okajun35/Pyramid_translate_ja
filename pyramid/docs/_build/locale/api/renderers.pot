# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-28 18:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/renderers.rst:4
msgid ":mod:`pyramid.renderers`"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.get_renderer:1
msgid "Return the renderer object for the renderer ``renderer_name``."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.get_renderer:3
msgid "You may supply a relative asset spec as ``renderer_name``.  If the ``package`` argument is supplied, a relative renderer name will be converted to an absolute asset specification by combining the package ``package`` with the relative asset specification ``renderer_name``.  If ``package`` is ``None`` (the default), the package name of the *caller* of this function will be used as the package."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render:1
msgid "Using the renderer ``renderer_name`` (a template or a static renderer), render the value (or set of values) present in ``value``. Return the result of the renderer's ``__call__`` method (usually a string or Unicode)."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render:6
msgid "If the ``renderer_name`` refers to a file on disk, such as when the renderer is a template, it's usually best to supply the name as an :term:`asset specification` (e.g. ``packagename:path/to/template.pt``)."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render:11
msgid "You may supply a relative asset spec as ``renderer_name``.  If the ``package`` argument is supplied, a relative renderer path will be converted to an absolute asset specification by combining the package ``package`` with the relative asset specification ``renderer_name``.  If ``package`` is ``None`` (the default), the package name of the *caller* of this function will be used as the package."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render:19
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render_to_response:18
msgid "The ``value`` provided will be supplied as the input to the renderer.  Usually, for template renderings, this should be a dictionary.  For other renderers, this will need to be whatever sort of value the renderer expects."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render:24
msgid "The 'system' values supplied to the renderer will include a basic set of top-level system names, such as ``request``, ``context``, ``renderer_name``, and ``view``.  See :ref:`renderer_system_values` for the full list.  If :term:`renderer globals` have been specified, these will also be used to augment the value."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render:30
msgid "Supply a ``request`` parameter in order to provide the renderer with the most correct 'system' values (``request`` and ``context`` in particular)."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render_to_response:1
msgid "Using the renderer ``renderer_name`` (a template or a static renderer), render the value (or set of values) using the result of the renderer's ``__call__`` method (usually a string or Unicode) as the response body."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render_to_response:6
msgid "If the renderer name refers to a file on disk (such as when the renderer is a template), it's usually best to supply the name as a :term:`asset specification`."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render_to_response:10
msgid "You may supply a relative asset spec as ``renderer_name``.  If the ``package`` argument is supplied, a relative renderer name will be converted to an absolute asset specification by combining the package ``package`` with the relative asset specification ``renderer_name``.  If you do not supply a ``package`` (or ``package`` is ``None``) the package name of the *caller* of this function will be used as the package."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render_to_response:23
msgid "The 'system' values supplied to the renderer will include a basic set of top-level system names, such as ``request``, ``context``, ``renderer_name``, and ``view``.  See :ref:`renderer_system_values` for the full list.  If :term:`renderer globals` have been specified, these will also be used to argument the value."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render_to_response:29
msgid "Supply a ``request`` parameter in order to provide the renderer with the most correct 'system' values (``request`` and ``context`` in particular). Keep in mind that any changes made to ``request.response`` prior to calling this function will not be reflected in the resulting response object. A new response object will be created for each call unless one is passed as the ``response`` argument."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.render_to_response:36
msgid "In previous versions, any changes made to ``request.response`` outside of this function call would affect the returned response. This is no longer the case. If you wish to send in a pre-initialized response then you may pass one in the ``response`` argument."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSON:1
msgid "Renderer that returns a JSON-encoded string."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSON:3
msgid "Configure a custom JSON renderer using the :meth:`~pyramid.config.Configurator.add_renderer` API at application startup time:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSON:14
msgid "Once this renderer is registered as above, you can use ``myjson`` as the ``renderer=`` parameter to ``@view_config`` or :meth:`~pyramid.config.Configurator.add_view`:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSON:26
msgid "Custom objects can be serialized using the renderer by either implementing the ``__json__`` magic method, or by registering adapters with the renderer.  See :ref:`json_serializing_custom_objects` for more information."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSON:33
msgid "The default serializer uses ``json.JSONEncoder``. A different serializer can be specified via the ``serializer`` argument.  Custom serializers should accept the object, a callback ``default``, and any extra ``kw`` keyword arguments passed during renderer construction. This feature isn't widely used but it can be used to replace the stock JSON serializer with, say, simplejson.  If all you want to do, however, is serialize custom objects, you should use the method explained in :ref:`json_serializing_custom_objects` instead of replacing the serializer."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSON:43
msgid "Prior to this version, there was no public API for supplying options to the underlying serializer without defining a custom renderer."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSON.add_adapter:1
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP.add_adapter:1
msgid "When an object of the type (or interface) ``type_or_iface`` fails to automatically encode using the serializer, the renderer will use the adapter ``adapter`` to convert it into a JSON-serializable object.  The adapter must accept two arguments: the object and the currently active request."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSON.add_adapter:18
#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP.add_adapter:18
msgid "When you've done this, the JSON renderer will be able to serialize instances of the ``Foo`` class when they're encountered in your view results."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:1
msgid "`JSONP <https://en.wikipedia.org/wiki/JSONP>`_ renderer factory helper which implements a hybrid json/jsonp renderer.  JSONP is useful for making cross-domain AJAX requests."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:5
msgid "Configure a JSONP renderer using the :meth:`pyramid.config.Configurator.add_renderer` API at application startup time:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:16
msgid "The class' constructor also accepts arbitrary keyword arguments.  All keyword arguments except ``param_name`` are passed to the ``json.dumps`` function as its keyword arguments."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:27
msgid "The ability of this class to accept a ``**kw`` in its constructor."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:30
msgid "The arguments passed to this class' constructor mean the same thing as the arguments passed to :class:`pyramid.renderers.JSON` (including ``serializer`` and ``adapters``)."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:34
msgid "Once this renderer is registered via :meth:`~pyramid.config.Configurator.add_renderer` as above, you can use ``jsonp`` as the ``renderer=`` parameter to ``@view_config`` or :meth:`pyramid.config.Configurator.add_view``:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:47
msgid "When a view is called that uses the JSONP renderer:"
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:49
msgid "If there is a parameter in the request's HTTP query string that matches the ``param_name`` of the registered JSONP renderer (by default, ``callback``), the renderer will return a JSONP response."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:53
msgid "If there is no callback parameter in the request's query string, the renderer will return a 'plain' JSON response."
msgstr ""

#: ../../../../../../../../home/okazaki/.local/lib/python3.6/site-packages/pyramid/renderers.py:docstring of pyramid.renderers.JSONP:60
msgid "See also :ref:`jsonp_renderer`."
msgstr ""

#: ../../api/renderers.rst:24
msgid "An object that can be used in advanced integration cases as input to the view configuration ``renderer=`` argument.  When the null renderer is used as a view renderer argument, Pyramid avoids converting the view callable result into a Response object.  This is useful if you want to reuse the view configuration and lookup machinery outside the context of its use by the Pyramid router."
msgstr ""

