# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-28 18:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../quick_tutorial/jinja2.rst:5
msgid "12: Templating With ``jinja2``"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:7
msgid "We just said Pyramid doesn't prefer one templating language over another. Time to prove it. Jinja2 is a popular templating system, used in Flask and modeled after Django's templates. Let's add ``pyramid_jinja2``, a Pyramid :term:`add-on` which enables Jinja2 as a :term:`renderer` in our Pyramid applications."
msgstr ""

#: ../../quick_tutorial/jinja2.rst:15
msgid "Objectives"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:17
msgid "Show Pyramid's support for different templating systems."
msgstr ""

#: ../../quick_tutorial/jinja2.rst:19
msgid "Learn about installing Pyramid add-ons."
msgstr ""

#: ../../quick_tutorial/jinja2.rst:23
msgid "Steps"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:25
msgid "In this step let's start by copying the ``view_class`` step's  directory, and then installing the ``pyramid_jinja2`` add-on."
msgstr ""

#: ../../quick_tutorial/jinja2.rst:34
msgid "We need to include ``pyramid_jinja2`` in ``jinja2/tutorial/__init__.py``:"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:39
msgid "Our ``jinja2/tutorial/views.py`` simply changes its ``renderer``:"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:44
msgid "Add ``jinja2/tutorial/home.jinja2`` as a template:"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:49
msgid "Now run the tests:"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:57
msgid "Run your Pyramid application with:"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:63
msgid "Open http://localhost:6543/ in your browser."
msgstr ""

#: ../../quick_tutorial/jinja2.rst:67
msgid "Analysis"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:69
msgid "Getting a Pyramid add-on into Pyramid is simple. First you use normal Python package installation tools to install the add-on package into your Python virtual environment. You then tell Pyramid's configurator to run the setup code in the add-on. In this case the setup code told Pyramid to make a new \"renderer\" available that looked for ``.jinja2`` file extensions."
msgstr ""

#: ../../quick_tutorial/jinja2.rst:75
msgid "Our view code stayed largely the same. We simply changed the file extension on the renderer. For the template, the syntax for Chameleon and Jinja2's basic variable insertion is very similar."
msgstr ""

#: ../../quick_tutorial/jinja2.rst:81
msgid "Extra credit"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:83
msgid "Our project now depends on ``pyramid_jinja2``. We installed that dependency manually. What is another way we could have made the association?"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:86
msgid "We used ``config.include`` which is an imperative configuration to get the :term:`Configurator` to load ``pyramid_jinja2``'s configuration. What is another way we could include it into the config?"
msgstr ""

#: ../../quick_tutorial/jinja2.rst:90
msgid "`Jinja2 homepage <http://jinja.pocoo.org/>`_, and :ref:`pyramid_jinja2 Overview <jinja2:overview>`"
msgstr ""

