# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-28 18:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../tutorials/wiki/tests.rst:5
msgid "Adding Tests"
msgstr ""

#: ../../tutorials/wiki/tests.rst:7
msgid "We will now add tests for the models and the views and a few functional tests in ``tests.py``.  Tests ensure that an application works, and that it continues to work when changes are made in the future."
msgstr ""

#: ../../tutorials/wiki/tests.rst:12
msgid "Test the models"
msgstr ""

#: ../../tutorials/wiki/tests.rst:14
msgid "We write tests for the ``model`` classes and the ``appmaker``.  Changing ``tests.py``, we'll write a separate test class for each ``model`` class, and we'll write a test class for the ``appmaker``."
msgstr ""

#: ../../tutorials/wiki/tests.rst:18
msgid "To do so, we'll retain the ``tutorial.tests.ViewTests`` class that was generated as part of the ``zodb`` cookiecutter.  We'll add three test classes: one for the ``Page`` model named ``PageModelTests``, one for the ``Wiki`` model named ``WikiModelTests``, and one for the appmaker named ``AppmakerTests``."
msgstr ""

#: ../../tutorials/wiki/tests.rst:24
msgid "Test the views"
msgstr ""

#: ../../tutorials/wiki/tests.rst:26
msgid "We'll modify our ``tests.py`` file, adding tests for each view function we added previously.  As a result, we'll delete the ``ViewTests`` class that the ``zodb`` cookiecutter provided, and add four other test classes: ``ViewWikiTests``, ``ViewPageTests``, ``AddPageTests``, and ``EditPageTests``. These test the ``view_wiki``, ``view_page``, ``add_page``, and ``edit_page`` views."
msgstr ""

#: ../../tutorials/wiki/tests.rst:34
msgid "Functional tests"
msgstr ""

#: ../../tutorials/wiki/tests.rst:36
msgid "We'll test the whole application, covering security aspects that are not tested in the unit tests, like logging in, logging out, checking that the ``viewer`` user cannot add or edit pages, but the ``editor`` user can, and so on."
msgstr ""

#: ../../tutorials/wiki/tests.rst:42
msgid "View the results of all our edits to ``tests.py``"
msgstr ""

#: ../../tutorials/wiki/tests.rst:44
msgid "Open the ``tutorial/tests.py`` module, and edit it such that it appears as follows:"
msgstr ""

#: ../../tutorials/wiki/tests.rst:52
msgid "Running the tests"
msgstr ""

#: ../../tutorials/wiki/tests.rst:54
msgid "We can run these tests by using ``py.test`` similarly to how we did in :ref:`running_tests`. Courtesy of the cookiecutter, our testing dependencies have already been satisfied and ``py.test`` and coverage have already been configured, so we can jump right to running tests."
msgstr ""

#: ../../tutorials/wiki/tests.rst:59
msgid "On UNIX:"
msgstr ""

#: ../../tutorials/wiki/tests.rst:65
msgid "On Windows:"
msgstr ""

#: ../../tutorials/wiki/tests.rst:71
msgid "The expected result should look like the following:"
msgstr ""

