# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-02 00:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../quick_tutorial/package.rst:3
msgid "02: Python Packages for Pyramid Applications"
msgstr "02：Pyramidアプリケーション用のPythonパッケージ(02: Python Packages for Pyramid Applications)"

#: ../../quick_tutorial/package.rst:5
msgid ""
"Most modern Python development is done using Python packages, an approach"
" Pyramid puts to good use. In this step we redo \"Hello World\" as a "
"minimal Python package inside a minimal Python project."
msgstr ""
"最新のPython開発のほとんどは、Pythonパッケージを使用して行われています。"
"Pyramidでもこのアプローチは有効です。このステップでは、"
"最小限のPythonプロジェクトの中で最小のPythonパッケージとして 「Hello World」をやり直します。"

#: ../../quick_tutorial/package.rst:11
msgid "Background"
msgstr "背景(Background)"

#: ../../quick_tutorial/package.rst:13
msgid ""
"Python developers can organize a collection of modules and files into a "
"namespaced unit called a :ref:`package <python:tut-packages>`. If a "
"directory is on ``sys.path`` and has a special file named "
"``__init__.py``, it is treated as a Python package."
msgstr ""
"Python開発者は、モジュールとファイルのコレクションを "
":ref:`package <python:tut-packages>` と呼ばれる名前空間にまとめられます。"
"ディレクトリが「sys.path」上にあり、「__init__.py」いう特別なファイルを"
"もつとPythonパッケージとして扱われます。"

#: ../../quick_tutorial/package.rst:18
msgid ""
"Packages can be bundled up, made available for installation, and "
"installed through a toolchain oriented around a ``setup.py`` file. For "
"this tutorial, this is all you need to know:"
msgstr ""
"パッケージはバンドルアップしてインストールできるようになり、"
"「setup.py」ファイルを中心としたツールチェーンを通じてインストールできます。"
"このチュートリアルでは、以下の点を知っておく必要があります："

#: ../../quick_tutorial/package.rst:22
msgid "We will have a directory for each tutorial step as a *project*."
msgstr "各チュートリアルのステップごとのディレクトリが *プロジェクト* として用意されています。"

#: ../../quick_tutorial/package.rst:24
msgid ""
"This project will contain a ``setup.py`` which injects the features of "
"the project machinery into the directory."
msgstr ""
"このプロジェクトには「setup.py」、プロジェクトの機能をディレクトリに"
"注入するためのものが含まれます。"

#: ../../quick_tutorial/package.rst:27
msgid ""
"In this project we will make a ``tutorial`` subdirectory into a Python "
"*package* using an ``__init__.py`` Python module file."
msgstr ""
"このプロジェクトでは、_Pythonモジュールファイルの「__init__.py」を使用して"
"Python パッケージにtutorialサブディレクトリを作成します。"

#: ../../quick_tutorial/package.rst:30
msgid ""
"We will run ``pip install -e .`` to install our project in development "
"mode."
msgstr "プロジェクトを開発モードでインストールするために「pip install -e .」を実行します。"

#: ../../quick_tutorial/package.rst:32
msgid "In summary:"
msgstr "要約すると:"

#: ../../quick_tutorial/package.rst:34
msgid "You'll do your development in a Python *package*."
msgstr "開発はPythonパッケージで行います。"

#: ../../quick_tutorial/package.rst:36
msgid "That package will be part of a *project*."
msgstr "パッケージはプロジェクトの一部になります。"

#: ../../quick_tutorial/package.rst:40
msgid "Objectives"
msgstr "目標(Objectives)"

#: ../../quick_tutorial/package.rst:42
msgid "Make a Python \"package\" directory with an ``__init__.py``."
msgstr "「__init__.py」とPythonの "パッケージ"ディレクトリを作ります。"

#: ../../quick_tutorial/package.rst:44
msgid "Get a minimum Python \"project\" in place by making a ``setup.py``."
msgstr "「setup.py」を作成することで最小限のPython「プロジェクト」を入手してください。"

#: ../../quick_tutorial/package.rst:46
msgid "Install our ``tutorial`` project in development mode."
msgstr "開発者モードで「tutoria」プロジェクトをインストールします。"

#: ../../quick_tutorial/package.rst:50
msgid "Steps"
msgstr "手順(Steps)"

#: ../../quick_tutorial/package.rst:52
msgid "Make an area for this tutorial step:"
msgstr "チュートリアルの手順を実行するための領域を作成します:"

#: ../../quick_tutorial/package.rst:58
msgid "In ``package/setup.py``, enter the following:"
msgstr "「package/setup.py」の中で以下のように入力します:"

#: ../../quick_tutorial/package.rst:62
msgid ""
"Make the new project installed for development then make a directory for "
"the actual code:"
msgstr "開発のために新しいプロジェクトをインストールして、実行コード用のディレクトリを作成します:"

#: ../../quick_tutorial/package.rst:70
msgid "Enter the following into ``package/tutorial/__init__.py``:"
msgstr "「package/tutorial/__init__.py」内で以下のように入力します:"

#: ../../quick_tutorial/package.rst:74
msgid "Enter the following into ``package/tutorial/app.py``:"
msgstr "「package/tutorial/app.py」内で以下のように入力します:"

#: ../../quick_tutorial/package.rst:78
msgid "Run the WSGI application with:"
msgstr "WSGIアプリケーションを以下のように実行します:"

#: ../../quick_tutorial/package.rst:84
msgid "Open http://localhost:6543/ in your browser."
msgstr "ブラウザで http://localhost:6543/ を開きます。"

#: ../../quick_tutorial/package.rst:88
msgid "Analysis"
msgstr "分析(Analysis)"

#: ../../quick_tutorial/package.rst:90
msgid ""
"Python packages give us an organized unit of project development. Python "
"projects, via ``setup.py``, give us special features when our package is "
"installed (in this case, in local development mode, also called local "
"editable mode as indicated by ``-e .``)."
msgstr ""
"Pythonパッケージはプロジェクト開発のユニットを提供します。"
"Pythonプロジェクトは、「setup.py」経由で私たちのパッケージが"
"インストールされたときに特別な機能を提供します"
"（この場合、「-e」を含んでいてローカル開発モード、ローカル編集可能モードとも呼ばれます）。"

#: ../../quick_tutorial/package.rst:95
msgid ""
"In this step we have a Python package called ``tutorial``. We use the "
"same name in each step of the tutorial, to avoid unnecessary retyping."
msgstr ""
"このステップではPythonパッケージである「tutorial」が呼び出されます。"
"不要な再入力を避けるためチュートリアルの各ステップで同じ名前を使用します。"

#: ../../quick_tutorial/package.rst:98
msgid ""
"Above this ``tutorial`` directory we have the files that handle the "
"packaging of this project. At the moment, all we need is a bare-bones "
"``setup.py``."
msgstr ""
"「tutorial」ディレクトリ上にプロジェクトのパッケージを扱うファイルがあります。"
"現時点では、必要なのは骨子となる「setup.py」です。"

#: ../../quick_tutorial/package.rst:101
msgid ""
"Everything else is the same about our application. We simply made a "
"Python package with a ``setup.py`` and installed it in development mode."
msgstr ""
"他のアプリケーションのすべてが同じです。Pythonパッケージを「setup.py」"
"で作成して、開発モードでインストールしました。"

#: ../../quick_tutorial/package.rst:104
msgid ""
"Note that the way we're running the app (``python tutorial/app.py``) is a"
" bit of an odd duck.  We would never do this unless we were writing a "
"tutorial that tries to capture how this stuff works one step at a time. "
"It's generally a bad idea to run a Python module inside a package "
"directly as a script."
msgstr ""
"app（python tutorial/app.py）を実行する方法は少し変わっています。"
"一度に1つのステップを処理するチュートリアルを作成しない限りは行うことはありません。"
"Pythonモジュールをパッケージ内で直接スクリプトとして実行することは一般的には悪い方法です。"

#: ../../quick_tutorial/package.rst:109
msgid ""
":ref:`Python Packages <python:tut-packages>` and `Working in "
"\"Development Mode\" <https://packaging.python.org/tutorials"
"/distributing-packages/#working-in-development-mode>`_."
msgstr ""
":ref:`Python Packages <python:tut-packages>` と `Working in "
"\"Development Mode\" <https://packaging.python.org/tutorials"
"/distributing-packages/#working-in-development-mode>`_."

