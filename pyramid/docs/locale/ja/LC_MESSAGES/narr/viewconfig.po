# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../narr/viewconfig.rst:8
msgid "View Configuration"
msgstr "(機械翻訳) 設定を表示"

#: ../../narr/viewconfig.rst:13
msgid ""
":term:`View lookup` is the :app:`Pyramid` subsystem responsible for "
"finding and invoking a :term:`view callable`.  :term:`View configuration`"
" controls how :term:`view lookup` operates in your application.  During "
"any given request, view configuration information is compared against "
"request data by the view lookup subsystem in order to find the \"best\" "
"view callable for that request."
msgstr "：term： `View lookup`は：app：` Pyramid`サブシステムで、：term： `view callable`を見つけて呼び出します。 ：term： `View configuration`は、アプリケーションでどのようにterm：` view lookup`が動作するかを制御します。任意の所与の要求の間、ビュー構成情報は、ビュールックアップサブシステムによって要求データと比較され、その要求に対してコール可能な「最良の」ビューを見つける。"

#: ../../narr/viewconfig.rst:19
msgid ""
"In earlier chapters, you have been exposed to a few simple view "
"configuration declarations without much explanation. In this chapter we "
"will explore the subject in detail."
msgstr "これまでの章では、あまり説明のない簡単なビュー構成宣言に慣れてきました。この章では、主題について詳しく説明します。"

#: ../../narr/viewconfig.rst:28
msgid "Mapping a Resource or URL Pattern to a View Callable"
msgstr "リソースまたはURLパターンをビュー呼び出し可能にマッピングする"

#: ../../narr/viewconfig.rst:30
msgid ""
"A developer makes a :term:`view callable` available for use within a "
":app:`Pyramid` application via :term:`view configuration`.  A view "
"configuration associates a view callable with a set of statements that "
"determine the set of circumstances which must be true for the view "
"callable to be invoked."
msgstr "開発者は：term： `view callable`を：term：` view configuration`を介してa：app： `Pyramid`アプリケーション内で利用できるようにします。ビュー構成では、呼び出し可能なビューを呼び出すために真でなければならない状況のセットを決定する一連のステートメントと、呼び出し可能なビューを関連付けます。"

#: ../../narr/viewconfig.rst:36
msgid ""
"A view configuration statement is made about information present in the "
":term:`context` resource (or exception) and the :term:`request`."
msgstr "ビュー設定ステートメントは、：term： `context`リソース（または例外）と：term：` request`に存在する情報について行われます。"

#: ../../narr/viewconfig.rst:39
msgid "View configuration is performed in one of two ways:"
msgstr "ビュー構成は、次の2つの方法のいずれかで実行されます。"

#: ../../narr/viewconfig.rst:41
msgid ""
"By running a :term:`scan` against application source code which has a "
":class:`pyramid.view.view_config` decorator attached to a Python object "
"as per :ref:`mapping_views_using_a_decorator_section`."
msgstr "Pythonオブジェクトに：ref： `mapping_views_using_a_decorator_section`として添付された：class：` pyramid.view.view_config`デコレータを持つアプリケーションソースコードに対して：term： `scan`を実行します。"

#: ../../narr/viewconfig.rst:45
msgid ""
"By using the :meth:`pyramid.config.Configurator.add_view` method as per "
":ref:`mapping_views_using_imperative_config_section`."
msgstr "：meth： `pyramid.config.Configurator.add_view`メソッドを：ref：` mapping_views_using_imperative_config_section`として使用します。"

#: ../../narr/viewconfig.rst:54
msgid "View Configuration Parameters"
msgstr "設定パラメータの表示"

#: ../../narr/viewconfig.rst:56
msgid ""
"All forms of view configuration accept the same general types of "
"arguments."
msgstr "すべての形式のビュー構成は、同じ一般的な型の引数を受け入れます。"

#: ../../narr/viewconfig.rst:58
msgid ""
"Many arguments supplied during view configuration are :term:`view "
"predicate` arguments.  View predicate arguments used during view "
"configuration are used to narrow the set of circumstances in which "
":term:`view lookup` will find a particular view callable."
msgstr "ビュー設定中に提供される多くの引数は、term： `view述語`引数です。ビュー設定時に使用されるビュー述語引数は、term： `view lookup`が特定のビューを呼び出し可能にする状況のセットを絞り込むために使用されます。"

#: ../../narr/viewconfig.rst:63
msgid ""
":term:`View predicate` attributes are an important part of view "
"configuration that enables the :term:`view lookup` subsystem to find and "
"invoke the appropriate view.  The greater the number of predicate "
"attributes possessed by a view's configuration, the more specific the "
"circumstances need to be before the registered view callable will be "
"invoked.  The fewer the number of predicates which are supplied to a "
"particular view configuration, the more likely it is that the associated "
"view callable will be invoked.  A view with five predicates will always "
"be found and evaluated before a view with two, for example."
msgstr "：term： `View predicate`属性は：term：` view lookup`サブシステムが適切なビューを見つけて呼び出すことを可能にするビュー設定の重要な部分です。ビューの構成が保持する述部属性の数が多いほど、登録ビューの呼び出し可能性が呼び出される前に状況がより具体的になる必要があります。特定のビュー構成に供給される述部の数が少ないほど、関連するビュー呼び出し可能関数が呼び出される可能性が高くなります。 5つの述部を持つビューは、たとえば2つのビューの前に常に見つけられ、評価されます。"

#: ../../narr/viewconfig.rst:73
msgid ""
"This does not mean however, that :app:`Pyramid` \"stops looking\" when it"
" finds a view registration with predicates that don't match.  If one set "
"of view predicates does not match, the \"next most specific\" view (if "
"any) is consulted for predicates, and so on, until a view is found, or no"
" view can be matched up with the request.  The first view with a set of "
"predicates all of which match the request environment will be invoked."
msgstr "しかし、これは：app： `Pyramid`は、一致しない述語を持つビュー登録を見つけたときに\&quot;探していることを止める\ &quot;という意味ではありません。 1組のビュー述語が一致しない場合は、ビューが見つかるまで、またはビューと一致するビューが見つからなくなるまで、述語には\ &quot;次の最も特殊な\&quot;ビュー（存在する場合）が参照されます。要求環境にすべて一致する一連の述部を持つ最初のビューが呼び出されます。"

#: ../../narr/viewconfig.rst:80
msgid ""
"If no view can be found with predicates which allow it to be matched up "
"with the request, :app:`Pyramid` will return an error to the user's "
"browser, representing a \"not found\" (404) page.  See "
":ref:`changing_the_notfound_view` for more information about changing the"
" default :term:`Not Found View`."
msgstr "要求と一致させることができる述語を持つビューが見つからない場合、：app： `Pyramid`は、ユーザのブラウザに\&quot;見つからない\ &quot;（404）ページを表すエラーを返します。デフォルト：term： `Not Found View`の変更については、ref：` changing_the_notfound_view`を参照してください。"

#: ../../narr/viewconfig.rst:85
msgid ""
"Other view configuration arguments are non-predicate arguments.  These "
"tend to modify the response of the view callable or prevent the view "
"callable from being invoked due to an authorization policy.  The presence"
" of non-predicate arguments in a view configuration does not narrow the "
"circumstances in which the view callable will be invoked."
msgstr "他のビュー設定引数は、述語でない引数です。これらは、呼び出し可能なビューの応答を変更するか、または呼び出しポリシーが許可ポリシーのために呼び出されないようにします。ビュー構成内に述語でない引数が存在しても、ビュー呼び出し可能関数が呼び出される状況は限定されません。"

#: ../../narr/viewconfig.rst:94
msgid "Non-Predicate Arguments"
msgstr "非述語引数"

#: ../../narr/viewconfig.rst:102
msgid "``permission``"
msgstr "``許可 ``"

#: ../../narr/viewconfig.rst:97
msgid ""
"The name of a :term:`permission` that the user must possess in order to "
"invoke the :term:`view callable`.  See :ref:`view_security_section` for "
"more information about view security and permissions."
msgstr "：term： `view callable`を呼び出すためにユーザが所有しなければならないa：term：` permission`の名前。ビューのセキュリティと権限の詳細については、：ref： `view_security_section`を参照してください。"

#: ../../narr/viewconfig.rst:101
msgid ""
"If ``permission`` is not supplied, no permission is registered for this "
"view (it's accessible by any caller)."
msgstr "`` permission``が指定されていない場合、このビューにはアクセス権が登録されていません（呼び出し元からアクセス可能です）。"

#: ../../narr/viewconfig.rst:116
msgid "``attr``"
msgstr "`` attr``"

#: ../../narr/viewconfig.rst:105
msgid ""
"The view machinery defaults to using the ``__call__`` method of the "
":term:`view callable` (or the function itself, if the view callable is a "
"function) to obtain a response.  The ``attr`` value allows you to vary "
"the method attribute used to obtain the response.  For example, if your "
"view was a class, and the class has a method named ``index`` and you "
"wanted to use this method instead of the class's ``__call__`` method to "
"return the response, you'd say ``attr=\"index\"`` in the view "
"configuration for the view. This is most useful when the view definition "
"is a class."
msgstr "ビュー機構は、デフォルトで：term： `view callable`（ビュー呼び出し可能関数が関数の場合は関数自体）の` `__call__``メソッドを使用して応答を取得します。 `` attr``値は、レスポンスを取得するために使用されるメソッド属性を変更することを可能にします。たとえば、ビューがクラスで、クラスに `` index``という名前のメソッドがあり、クラスの `` __call__``メソッドの代わりにこのメソッドを使用してレスポンスを返す場合は、 ``ビューのビュー構成では、attr = \ &quot;index \&quot; ``これは、ビュー定義がクラスである場合に最も便利です。"

#: ../../narr/viewconfig.rst:114
msgid ""
"If ``attr`` is not supplied, ``None`` is used (implying the function "
"itself if the view is a function, or the ``__call__`` callable attribute "
"if the view is a class)."
msgstr "`` attr``が与えられていなければ `` None``が使われます（ビューが関数の場合は関数そのものを意味し、ビューがクラスの場合は `` __call__``の呼び出し可能な属性を意味します）。"

#: ../../narr/viewconfig.rst:146
msgid "``renderer``"
msgstr "レンダラー"

#: ../../narr/viewconfig.rst:119
msgid ""
"Denotes the :term:`renderer` implementation which will be used to "
"construct a :term:`response` from the associated view callable's return "
"value."
msgstr "関連するビュー呼び出し可能戻り値から：term： `response`を構築するために使用される：term：` renderer`実装を示します。"

#: ../../narr/viewconfig.rst:122
msgid "See also :ref:`renderers_chapter`."
msgstr "参照：ref： `renderers_chapter`を参照してください。"

#: ../../narr/viewconfig.rst:124
msgid ""
"This is either a single string term (e.g., ``json``) or a string implying"
" a path or :term:`asset specification` (e.g., ``templates/views.pt``) "
"naming a :term:`renderer` implementation.  If the ``renderer`` value does"
" not contain a dot (``.``), the specified string will be used to look up "
"a renderer implementation, and that renderer implementation will be used "
"to construct a response from the view return value.  If the ``renderer`` "
"value contains a dot (``.``), the specified term will be treated as a "
"path, and the filename extension of the last element in the path will be "
"used to look up the renderer implementation, which will be passed the "
"full path."
msgstr "これは単一の文字列（例えば `` json``）かパスを意味する文字列、または：term： `資産指定`（例えば `` templates / views.pt``）a：term： `renderer実装。 `` renderer``の値にドット（ `` .``）が含まれていない場合、指定された文字列はレンダラー実装をルックアップするために使用され、レンダラー実装はビュー戻り値。 `` renderer``の値にドット（ `` .``）が含まれている場合、指定された用語はパスとして扱われ、パスの最後の要素のファイル名拡張子はレンダラー実装をルックアップするために使われます。それは完全なパスを通過します。"

#: ../../narr/viewconfig.rst:134
msgid ""
"When the renderer is a path—although a path is usually just a simple "
"relative pathname (e.g., ``templates/foo.pt``, implying that a template "
"named \"foo.pt\" is in the \"templates\" directory relative to the "
"directory of the current :term:`package`)—the path can be absolute, "
"starting with a slash on UNIX or a drive letter prefix on Windows.  The "
"path can alternatively be a :term:`asset specification` in the form "
"``some.dotted.package_name:relative/path``, making it possible to address"
" template assets which live in a separate package."
msgstr "レンダラーがパスである場合、パスは通常単純な相対パス名です（例えば `` templates / foo.pt``、\ &quot;foo.pt \&quot;という名前のテンプレートは\ &quot;templates \&quot;にあります）ディレクトリ：現在の：term： `package`のディレクトリからの相対パス） - パスは絶対パスでもよく、UNIXの場合はスラッシュ、Windowsの場合はドライブ文字の接頭辞で始まります。代わりに、パスは `` some.dotted.package_name：relative / path``の形式で：term： `asset specification`とすることができ、別のパッケージにあるテンプレートアセットを扱うことができます。"

#: ../../narr/viewconfig.rst:142
msgid ""
"The ``renderer`` attribute is optional.  If it is not defined, the "
"\"null\" renderer is assumed (no rendering is performed and the value is "
"passed back to the upstream :app:`Pyramid` machinery unchanged).  Note "
"that if the view callable itself returns a :term:`response` (see "
":ref:`the_response`), the specified renderer implementation is never "
"called."
msgstr "`` renderer``属性はオプションです。定義されていない場合、レンダリングは行われません（レンダリングは行われず、値は変更されずにアップストリーム：app： `Pyramid`機械に戻されます）。ビュー呼び出し側が：term： `response`（：ref：` the_response`を参照）を返した場合、指定されたレンダラー実装は決して呼び出されません。"

#: ../../narr/viewconfig.rst:194
msgid "``http_cache``"
msgstr "`` http_cache``"

#: ../../narr/viewconfig.rst:149
msgid ""
"When you supply an ``http_cache`` value to a view configuration, the "
"``Expires`` and ``Cache-Control`` headers of a response generated by the "
"associated view callable are modified.  The value for ``http_cache`` may "
"be one of the following:"
msgstr "ビュー設定に `` http_cache``値を指定すると、関連するview呼び出し可能で生成されたレスポンスの `` Expires``と `` Cache-Control``ヘッダーが変更されます。 `` http_cache``の値は次のいずれかです："

#: ../../narr/viewconfig.rst:154
msgid ""
"A nonzero integer.  If it's a nonzero integer, it's treated as a number "
"of seconds.  This number of seconds will be used to compute the "
"``Expires`` header and the ``Cache-Control: max-age`` parameter of "
"responses to requests which call this view.  For example: "
"``http_cache=3600`` instructs the requesting browser to 'cache this "
"response for an hour, please'."
msgstr "非ゼロの整数。ゼロ以外の整数の場合、秒数として扱われます。この秒数は、このビューを呼び出すリクエストに対するレスポンスの `` Expires``ヘッダと `` Cache-Control：max-age``パラメータを計算するために使用されます。たとえば、 `` http_cache = 3600``は、リクエストしているブラウザに「この応答を1時間キャッシュしてください」と指示します。"

#: ../../narr/viewconfig.rst:160
msgid ""
"A ``datetime.timedelta`` instance.  If it's a ``datetime.timedelta`` "
"instance, it will be converted into a number of seconds, and that number "
"of seconds will be used to compute the ``Expires`` header and the "
"``Cache-Control: max-age`` parameter of responses to requests which call "
"this view.  For example: ``http_cache=datetime.timedelta(days=1)`` "
"instructs the requesting browser to 'cache this response for a day, "
"please'."
msgstr "`` datetime.timedelta``インスタンスです。 `` datetime.timedelta``インスタンスの場合、秒数に変換され、その秒数が `` Expires``ヘッダーと `` Cache-Control：max-age &#39;&#39;を計算するために使われますこのビューを呼び出す要求への応答のパラメータ。例： `` http_cache = datetime.timedelta（days = 1） ``は、リクエストしているブラウザに「この応答を1日キャッシュしてください」と指示します。"

#: ../../narr/viewconfig.rst:168
msgid ""
"Zero (``0``).  If the value is zero, the ``Cache-Control`` and "
"``Expires`` headers present in all responses from this view will be "
"composed such that client browser cache (and any intermediate caches) are"
" instructed to never cache the response."
msgstr "0（ `` 0``）。値がゼロの場合、このビューからのすべての応答に存在する `` Cache-Control``と `` Expires``ヘッダーは、クライアントブラウザのキャッシュ（および任意の中間キャッシュ）にレスポンスをキャッシュしないように構成されます。"

#: ../../narr/viewconfig.rst:173
msgid ""
"A two-tuple.  If it's a two-tuple (e.g., ``http_cache=(1, "
"{'public':True})``), the first value in the tuple may be a nonzero "
"integer or a ``datetime.timedelta`` instance. In either case this value "
"will be used as the number of seconds to cache the response.  The second "
"value in the tuple must be a dictionary.  The values present in the "
"dictionary will be used as input to the ``Cache-Control`` response "
"header.  For example: ``http_cache=(3600, {'public':True})`` means 'cache"
" for an hour, and add ``public`` to the Cache-Control header of the "
"response'.  All keys and values supported by the "
"``webob.cachecontrol.CacheControl`` interface may be added to the "
"dictionary.  Supplying ``{'public':True}`` is equivalent to calling "
"``response.cache_control.public = True``."
msgstr "2タプル。 2タプル（ `` http_cache =（1、{&#39;public&#39;：True）） ``）の場合、タプルの最初の値は非ゼロの整数または `` datetime.timedelta``のインスタンスになります。いずれの場合も、この値はレスポンスをキャッシュする秒数として使用されます。タプルの2番目の値は辞書でなければなりません。辞書にある値は `` Cache-Control``レスポンスヘッダへの入力として使われます。例えば、 `` http_cache =（3600、{&#39;public&#39;：True}）は ``キャッシュを1時間意味し、 `` public``をレスポンスのCache-Controlヘッダに追加します。 `` webob.cachecontrol.CacheControl``インターフェースでサポートされているすべてのキーと値を辞書に追加することができます。 `` {&#39;public&#39;：True} ``を提供することは、 `` response.cache_control.public = True``を呼び出すことと等価です。"

#: ../../narr/viewconfig.rst:185
msgid ""
"Providing a non-tuple value as ``http_cache`` is equivalent to calling "
"``response.cache_expires(value)`` within your view's body."
msgstr "`` http_cache``として非タプルの値を与えることは、あなたのビューのボディ内で `` response.cache_expires（value） ``を呼び出すことと同じです。"

#: ../../narr/viewconfig.rst:188
msgid ""
"Providing a two-tuple value as ``http_cache`` is equivalent to calling "
"``response.cache_expires(value[0], **value[1])`` within your view's body."
msgstr "`` http_cache``として2タプルの値を与えることは、あなたのビューのボディ内で `` response.cache_expires（value [0]、** value [1]） ``を呼び出すのと同じです。"

#: ../../narr/viewconfig.rst:191
msgid ""
"If you wish to avoid influencing the ``Expires`` header, and instead wish"
" to only influence ``Cache-Control`` headers, pass a tuple as "
"``http_cache`` with the first element of ``None``, i.e., ``(None, "
"{'public':True})``."
msgstr "`` Expires`ヘッダに影響を与えず、 `` Cache-Control``ヘッダーにのみ影響を与えたい場合は、 `` None``の最初の要素、 `` http_cache``としてタプルを渡します。 、 ``（None、{&#39;public&#39;：True}） ``となります。"

#: ../../narr/viewconfig.rst:196
msgid "``require_csrf``"
msgstr "`` require_csrf``"

#: ../../narr/viewconfig.rst:198
msgid ""
"CSRF checks will affect any request method that is not defined as a "
"\"safe\" method by RFC2616. In pratice this means that GET, HEAD, "
"OPTIONS, and TRACE methods will pass untouched and all others methods "
"will require CSRF. This option is used in combination with the "
"``pyramid.require_default_csrf`` setting to control which request "
"parameters are checked for CSRF tokens."
msgstr "CSRFチェックは、RFC2616で\ &quot;安全\&quot;と定義されていないリクエストメソッドに影響します。これは、GET、HEAD、OPTIONS、TRACEメソッドがそのまま渡され、他のすべてのメソッドがCSRFを必要とすることを意味します。このオプションは `` pyramid.require_default_csrf``設定と組み合わせて使用​​され、CSRFトークンをチェックする要求パラメータを制御します。"

#: ../../narr/viewconfig.rst:204
msgid "This feature requires a configured :term:`session factory`."
msgstr "この機能には、設定済み：term： `セッションファクトリ`が必要です。"

#: ../../narr/viewconfig.rst:206
msgid ""
"If this option is set to ``True`` then CSRF checks will be enabled for "
"POST requests to this view. The required token will be whatever was "
"specified by the ``pyramid.require_default_csrf`` setting, or will "
"fallback to ``csrf_token``."
msgstr "このオプションが `` True``に設定されている場合、CSRFチェックはこのビューに対するPOSTリクエストに対して有効になります。必要なトークンは `` pyramid.require_default_csrf``の設定で指定されたもので、 `` csrf_token``にフォールバックします。"

#: ../../narr/viewconfig.rst:211
msgid ""
"If this option is set to a string then CSRF checks will be enabled and it"
" will be used as the required token regardless of the "
"``pyramid.require_default_csrf`` setting."
msgstr "このオプションが文字列に設定されている場合、CSRFチェックは有効になり、 `` pyramid.require_default_csrf``設定に関係なく、必要なトークンとして使用されます。"

#: ../../narr/viewconfig.rst:215
msgid ""
"If this option is set to ``False`` then CSRF checks will be disabled "
"regardless of the ``pyramid.require_default_csrf`` setting."
msgstr "このオプションが `` False``に設定されている場合、 `` pyramid.require_default_csrf``設定に関係なく、CSRFチェックは無効になります。"

#: ../../narr/viewconfig.rst:218
msgid ""
"In addition, if this option is set to ``True`` or a string then CSRF "
"origin checking will be enabled."
msgstr "さらに、このオプションが `` True``または文字列に設定されている場合、CSRF起点チェックが有効になります。"

#: ../../narr/viewconfig.rst:221
msgid "See :ref:`auto_csrf_checking` for more information."
msgstr "詳細は：ref： `auto_csrf_checking`を参照してください。"

#: ../../narr/viewconfig.rst:239
msgid "``wrapper``"
msgstr "ラッパー"

#: ../../narr/viewconfig.rst:226
msgid ""
"The :term:`view name` of a different :term:`view configuration` which "
"will receive the response body of this view as the "
"``request.wrapped_body`` attribute of its own :term:`request`, and the "
":term:`response` returned by this view as the "
"``request.wrapped_response`` attribute of its own request. Using a "
"wrapper makes it possible to \"chain\" views together to form a composite"
" response.  The response of the outermost wrapper view will be returned "
"to the user.  The wrapper view will be found as any view is found. See "
":ref:`view_lookup`.  The \"best\" wrapper view will be found based on the"
" lookup ordering. \"Under the hood\" this wrapper view is looked up via "
"``pyramid.view.render_view_to_response(context, request, "
"'wrapper_viewname')``. The context and request of a wrapper view is the "
"same context and request of the inner view."
msgstr "このビューの応答本体をそれ自身の：request.wrapped_body`属性として受け取る：term： `request`と： term： `response`は、このビューによって自身の要求の` `request.wrapped_response``属性として返されます。ラッパーを使用すると、ビューをまとめて\ &quot;チェーン\&quot;して複合レスポンスを形成することができます。最も外側のラッパー・ビューの応答がユーザーに戻されます。ラッパービューは、任意のビューが見つかると見つかります。参照：ref： `view_lookup`を参照してください。 \ &quot;ベスト\&quot;ラッパービューはルックアップの順序に基づいて検索されます。 \ &quot;Under the Hood \&quot;このラッパービューは、 `` pyramid.view.render_view_to_response（context、request、 &#39;wrapper_viewname&#39;） ``で検索されます。ラッパー・ビューのコンテキストおよび要求は、同じコンテキストおよび内部ビューの要求です。"

#: ../../narr/viewconfig.rst:239
msgid "If ``wrapper`` is not supplied, no wrapper view is used."
msgstr "`` wrapper``が与えられていなければ、ラッパービューは使用されません。"

#: ../../narr/viewconfig.rst:278
msgid "``decorator``"
msgstr "``デコレータ ``"

#: ../../narr/viewconfig.rst:242
msgid ""
"A :term:`dotted Python name` to a function (or the function itself) which"
" will be used to decorate the registered :term:`view callable`.  The "
"decorator function will be called with the view callable as a single "
"argument.  The view callable it is passed will accept ``(context, "
"request)``.  The decorator must return a replacement view callable which "
"also accepts ``(context, request)``. The ``decorator`` may also be an "
"iterable of decorators, in which case they will be applied one after the "
"other to the view, in reverse order. For example::"
msgstr "A：term： `dotted Python name`を、登録された：term：` view callable`を装飾するために使用される関数（または関数自体）に追加します。デコレータ関数は、呼び出し可能なビューを単一の引数として呼び出されます。呼び出し可能なビューは ``（context、request） `&#39;を受け入れます。デコレータは、 ``（context、request） `&#39;を受け付ける代わりのview callableを返さなければなりません。 `` decorator``は、デコレータの繰り返し可能性があります。その場合、逆順でビューに順番に適用されます。例えば：："

#: ../../narr/viewconfig.rst:255
msgid "Is similar to decorating the view callable directly::"
msgstr "ビューを直接呼び出し可能にすることと似ています::"

#: ../../narr/viewconfig.rst:263
msgid ""
"An important distinction is that each decorator will receive a response "
"object implementing :class:`pyramid.interfaces.IResponse` instead of the "
"raw value returned from the view callable. All decorators in the chain "
"must return a response object or raise an exception:"
msgstr "重要な違いは、各デコレータはビュー呼び出し可能から返された生の値の代わりに：class： `pyramid.interfaces.IResponse`を実装する応答オブジェクトを受け取ることです。チェーン内のすべてのデコレータは、レスポンスオブジェクトを返すか、例外を送出する必要があります。"

#: ../../narr/viewconfig.rst:286
msgid "``mapper``"
msgstr "``マッパ ``"

#: ../../narr/viewconfig.rst:281
msgid ""
"A Python object or :term:`dotted Python name` which refers to a "
":term:`view mapper`, or ``None``.  By default it is ``None``, which "
"indicates that the view should use the default view mapper.  This plug-"
"point is useful for Pyramid extension developers, but it's not very "
"useful for \"civilians\" who are just developing stock Pyramid "
"applications. Pay no attention to the man behind the curtain."
msgstr "Pythonオブジェクトまたは：term： `dotted Python name`：：term：` view mapper`または `` None``を参照してください。デフォルトでは `` None``です。これは、ビューがデフォルトビューマッパーを使用する必要があることを示します。このプラグインポイントはPyramid拡張開発者には便利ですが、株式ピラミッドアプリケーションを開発している\ &quot;一般市民\&quot;にとってはあまり役に立ちません。カーテンの後ろの男には注意を払わないでください。"

#: ../../narr/viewconfig.rst:289
msgid "Predicate Arguments"
msgstr "述語引数"

#: ../../narr/viewconfig.rst:291
msgid ""
"These arguments modify view lookup behavior. In general the more "
"predicate arguments that are supplied, the more specific and narrower the"
" usage of the configured view."
msgstr "これらの引数は、ビューの参照動作を変更します。一般に、より述語的な引数が提供されるほど、設定されたビューの使用がより具体的で狭くなります。"

#: ../../narr/viewconfig.rst:301
msgid "``name``"
msgstr "「名前」"

#: ../../narr/viewconfig.rst:296
msgid ""
"The :term:`view name` required to match this view callable.  A ``name`` "
"argument is typically only used when your application uses "
":term:`traversal`. Read :ref:`traversal_chapter` to understand the "
"concept of a view name."
msgstr "このビューを呼び出し可能にするには、：term： `view name`が必要です。 `` name``引数は通常、アプリケーションがterm： `traversal`を使用する場合にのみ使用されます。ビュー名の概念を理解するために：ref： `traversal_chapter`を読んでください。"

#: ../../narr/viewconfig.rst:300
msgid ""
"If ``name`` is not supplied, the empty string is used (implying the "
"default view)."
msgstr "`` name``が与えられていなければ、空の文字列が使われます（デフォルトのビューを意味します）。"

#: ../../narr/viewconfig.rst:318
msgid "``context``"
msgstr "「文脈」"

#: ../../narr/viewconfig.rst:304
msgid ""
"An object representing a Python class of which the :term:`context` "
"resource must be an instance *or* the :term:`interface` that the "
":term:`context` resource must provide in order for this view to be found "
"and called.  This predicate is true when the :term:`context` resource is "
"an instance of the represented class or if the :term:`context` resource "
"provides the represented interface; it is otherwise false."
msgstr "：term： `context`リソースは、：term：` context`リソースがこのビューを見つけるために提供しなければならないインスタンス*または* the：term： `interface`でなければならないPythonクラスを表すオブジェクトです。と呼ばれる。この述語は：term： `context`リソースが表現されたクラスのインスタンスである場合、または：term：` context`リソースが表現されたインタフェースを提供する場合に真です。それ以外の場合はfalseです。"

#: ../../narr/viewconfig.rst:311
msgid ""
"It is possible to pass an exception class as the context if your context "
"may subclass an exception. In this case *two* views will be registered. "
"One will match normal incoming requests, and the other will match as an "
":term:`exception view` which only occurs when an exception is raised "
"during the normal request processing pipeline."
msgstr "コンテキストが例外をサブクラス化する可能性がある場合、例外クラスをコンテキストとして渡すことは可能です。この場合、* 2つのビューが登録されます。 1つは通常の着信要求と一致し、もう1つは：term： `例外ビュー &#39;と一致します。これは、通常の要求処理パイプラインで例外が発生した場合にのみ発生します。"

#: ../../narr/viewconfig.rst:317
msgid ""
"If ``context`` is not supplied, the value ``None``, which matches any "
"resource, is used."
msgstr "`` context``が与えられていない場合は、任意のリソースにマッチする `` None``という値が使われます。"

#: ../../narr/viewconfig.rst:320
msgid "``exception_only``"
msgstr "`` exception_only``"

#: ../../narr/viewconfig.rst:322
msgid ""
"When this value is ``True``, the ``context`` argument must be a subclass "
"of ``Exception``. This flag indicates that only an :term:`exception view`"
" should be created, and that this view should not match if the traversal "
":term:`context` matches the ``context`` argument. If the ``context`` is a"
" subclass of ``Exception`` and this value is ``False`` (the default), "
"then a view will be registered to match the traversal :term:`context` as "
"well."
msgstr "この値が `` True``の場合、 `` context``引数は `` Exception``のサブクラスでなければなりません。このフラグは、：term： `例外ビュー &#39;のみを作成し、traversal：term：` context`が `` context``引数と一致する場合、このビューは一致してはならないことを示します。 `` context``が `` Exception``のサブクラスで、この値が `` False``（デフォルト）の場合、トラバーサル：term： `context`にもマッチするビューが登録されます。"

#: ../../narr/viewconfig.rst:345
msgid "``route_name``"
msgstr "`` route_name``"

#: ../../narr/viewconfig.rst:332
msgid ""
"If ``route_name`` is supplied, the view callable will be invoked only "
"when the named route has matched."
msgstr "`` route_name``が指定された場合、呼び出されたビューは指定されたルートが一致したときにのみ呼び出されます。"

#: ../../narr/viewconfig.rst:335
msgid ""
"This value must match the ``name`` of a :term:`route configuration` "
"declaration (see :ref:`urldispatch_chapter`) that must match before this "
"view will be called.  Note that the ``route`` configuration referred to "
"by ``route_name`` will usually have a ``*traverse`` token in the value of"
" its ``pattern``, representing a part of the path that will be used by "
":term:`traversal` against the result of the route's :term:`root factory`."
msgstr "この値は、このビューが呼び出される前に一致しなければならない：term： `ルート設定`宣言（：ref： `urldispatch_chapter`参照）の` `name``と一致しなければなりません。 `` route_name``で参照される `` route``の設定は通常 `` traverse``トークンを `` pattern``の値に持つことに注意してください。これは、使用されるパスの一部を表します：term：ルートの結果に対する `traversal`：term：`ルートファクト `。"

#: ../../narr/viewconfig.rst:342
msgid ""
"If ``route_name`` is not supplied, the view callable will only have a "
"chance of being invoked if no other route was matched. This is when the "
"request/context pair found via :term:`resource location` does not "
"indicate it matched any configured route."
msgstr "`` route_name``が与えられていなければ、呼び出し可能なビューは他のルートが一致していなければ起動されます。これは：term： `resource location`で見つかったリクエスト/コンテキストのペアが、設定されたルートと一致していることを示していないときです。"

#: ../../narr/viewconfig.rst:354
msgid "``request_type``"
msgstr "`` request_type``"

#: ../../narr/viewconfig.rst:348
msgid ""
"This value should be an :term:`interface` that the :term:`request` must "
"provide in order for this view to be found and called."
msgstr "この値は、：term： `request`がこのビューを見つけて呼び出すために提供しなければならない：term：` interface`でなければなりません。"

#: ../../narr/viewconfig.rst:351
msgid ""
"If ``request_type`` is not supplied, the value ``None`` is used, implying"
" any request type."
msgstr "`` request_type``が指定されていない場合は、 `` None``という値が使われます。"

#: ../../narr/viewconfig.rst:354
msgid "*This is an advanced feature, not often used by \"civilians\"*."
msgstr "*これは高度な機能で、一般に\ &quot;民間人\&quot; *で使用されることはありません。"

#: ../../narr/viewconfig.rst:368
msgid "``request_method``"
msgstr "`` request_method``"

#: ../../narr/viewconfig.rst:357
msgid ""
"This value can be either a string (such as ``\"GET\"``, ``\"POST\"``, "
"``\"PUT\"``, ``\"DELETE\"``, ``\"HEAD\"``, or ``\"OPTIONS\"``) "
"representing an HTTP ``REQUEST_METHOD`` or a tuple containing one or more"
" of these strings.  A view declaration with this argument ensures that "
"the view will only be called when the ``method`` attribute of the request"
" (i.e., the ``REQUEST_METHOD`` of the WSGI environment) matches a "
"supplied value."
msgstr "この値は、文字列（ `` \ &quot;GET \&quot; ``、 `` POST &quot;&quot;、 `` \ &quot;PUT \&quot; ``、 `` \ &quot;DELETE \&quot; ``、 `` \ &quot;HEAD \&quot; ``、 `` \ &quot;OPTIONS \&quot; ``）、またはこれらの文字列の1つ以上を含むタプルを返します。この引数を持つビュー宣言は、要求の `` method``属性（つまり、WSGI環境の `` REQUEST_METHOD``）が指定された値と一致した場合にのみビューが呼び出されることを保証します。"

#: ../../narr/viewconfig.rst:364
msgid ""
"The use of ``\"GET\"`` also implies that the view will respond to "
"``\"HEAD\"``."
msgstr "`` \ &quot;GET \&quot; `&quot;の使用は、ビューが &quot;\&quot; HEAD \ &quot;` `に応答することを意味します。"

#: ../../narr/viewconfig.rst:367
msgid ""
"If ``request_method`` is not supplied, the view will be invoked "
"regardless of the ``REQUEST_METHOD`` of the :term:`WSGI` environment."
msgstr "`` request_method``が与えられていなければ、：term： `WSGI`環境の` `REQUEST_METHOD``に関係なくビューが呼び出されます。"

#: ../../narr/viewconfig.rst:383
msgid "``request_param``"
msgstr "`` request_param``"

#: ../../narr/viewconfig.rst:371
msgid ""
"This value can be any string or a sequence of strings.  A view "
"declaration with this argument ensures that the view will only be called "
"when the :term:`request` has a key in the ``request.params`` dictionary "
"(an HTTP ``GET`` or ``POST`` variable) that has a name which matches the "
"supplied value."
msgstr "この値には、任意の文字列または一連の文字列を使用できます。この引数を指定したビュー宣言は、：term： `request`が` `request.params``ディクショナリ（HTTPの` `GET``または` `POST``変数）を指定します。"

#: ../../narr/viewconfig.rst:377
msgid ""
"If any value supplied has an ``=`` sign in it, e.g., "
"``request_param=\"foo=123\"``, then the key (``foo``) must both exist in "
"the ``request.params`` dictionary, *and* the value must match the right "
"hand side of the expression (``123``) for the view to \"match\" the "
"current request."
msgstr "`` request_param = \ &quot;foo = 123 \&quot; ``のように `` = ``という記号が与えられた場合、キー（ `` foo``）は ``要求に存在しなければなりません。 params``ディクショナリ、*、*の値は、現在のリクエストに一致するように、式の右側（ `` 123``）に一致する必要があります。"

#: ../../narr/viewconfig.rst:382
msgid ""
"If ``request_param`` is not supplied, the view will be invoked without "
"consideration of keys and values in the ``request.params`` dictionary."
msgstr "`` request_param``が与えられていない場合、ビューは `` request.params``ディクショナリのキーと値を考慮せずに呼び出されます。"

#: ../../narr/viewconfig.rst:402
msgid "``match_param``"
msgstr "`` match_param``"

#: ../../narr/viewconfig.rst:386
msgid ""
"This param may be either a single string of the format \"key=value\" or a"
" tuple containing one or more of these strings."
msgstr "このパラメータは、\ &quot;key = value \&quot;という形式の単一文字列か、これらの文字列の1つ以上を含むタプルのいずれかです。"

#: ../../narr/viewconfig.rst:389
msgid ""
"This argument ensures that the view will only be called when the "
":term:`request` has key/value pairs in its :term:`matchdict` that equal "
"those supplied in the predicate.  For example, "
"``match_param=\"action=edit\"`` would require the ``action`` parameter in"
" the :term:`matchdict` match the right hand side of the expression "
"(``edit``) for the view to \"match\" the current request."
msgstr "この引数は、：term： `request`が：term：` matchdict`の中に述語で与えられたものと等しいキーと値のペアを持つ場合にのみ、ビューが呼び出されることを保証します。例えば、 `` match_param = \ &quot;action = edit \&quot; ``は `：`の `` action``パラメータを必要とします：term： `matchdict`は式の右側（` `edit``）現在のリクエストに\ &quot;一致する\&quot;を表示します。"

#: ../../narr/viewconfig.rst:396
msgid ""
"If the ``match_param`` is a tuple, every key/value pair must match for "
"the predicate to pass."
msgstr "`` match_param``がタプルの場合、すべてのキーと値のペアは述語が渡すために一致しなければなりません。"

#: ../../narr/viewconfig.rst:399
msgid ""
"If ``match_param`` is not supplied, the view will be invoked without "
"consideration of the keys and values in ``request.matchdict``."
msgstr "`` match_param``が与えられていなければ、 `` request.matchdict``のキーと値を考慮せずにビューが呼び出されます。"

#: ../../narr/viewconfig.rst:413
msgid "``containment``"
msgstr "「封じ込め」"

#: ../../narr/viewconfig.rst:405
msgid ""
"This value should be a reference to a Python class or :term:`interface` "
"that a parent object in the context resource's :term:`lineage` must "
"provide in order for this view to be found and called.  The resources in "
"your resource tree must be \"location-aware\" to use this feature."
msgstr "この値は、コンテキストリソースの：term： `lineage`内の親オブジェクトがこのビューを見つけて呼び出すために提供しなければならないPythonクラスまたは：term：` interface`への参照でなければなりません。この機能を使用するには、リソースツリーのリソースが\ &quot;location-aware \&quot;である必要があります。"

#: ../../narr/viewconfig.rst:410
msgid ""
"If ``containment`` is not supplied, the interfaces and classes in the "
"lineage are not considered when deciding whether or not to invoke the "
"view callable."
msgstr "`` containment``が指定されていない場合、ビューの呼び出し可能呼び出しを呼び出すかどうかを決定する際には、系統のインターフェースとクラスは考慮されません。"

#: ../../narr/viewconfig.rst:413
msgid "See :ref:`location_aware` for more information about location-awareness."
msgstr "位置認識の詳細については：ref： `location_aware`を参照してください。"

#: ../../narr/viewconfig.rst:425
msgid "``xhr``"
msgstr "`` xhr``"

#: ../../narr/viewconfig.rst:416
msgid ""
"This value should be either ``True`` or ``False``.  If this value is "
"specified and is ``True``, the :term:`WSGI` environment must possess an "
"``HTTP_X_REQUESTED_WITH`` header (i.e., ``X-Requested-With``) that has "
"the value ``XMLHttpRequest`` for the associated view callable to be found"
" and called.  This is useful for detecting AJAX requests issued from "
"jQuery, Prototype, and other Javascript libraries."
msgstr "この値は `` True``または `` False``のいずれかでなければなりません。この値が指定されていて `` True``である場合、：term： `WSGI`環境は` `XMLHttpRequest &#39;&#39;という値を持つ` `HTTP-X-REQUESTED_WITH``ヘッダー（つまり` `X-Requested-With``） ``が呼び出されて呼び出され、呼び出されるようにします。これは、jQuery、Prototype、およびその他のJavascriptライブラリから発行されたAJAXリクエストを検出するのに便利です。"

#: ../../narr/viewconfig.rst:423
msgid ""
"If ``xhr`` is not specified, the ``HTTP_X_REQUESTED_WITH`` HTTP header is"
" not taken into consideration when deciding whether or not to invoke the "
"associated view callable."
msgstr "`` xhr``が指定されていない場合、HTTPヘッダーは考慮されません。"

#: ../../narr/viewconfig.rst:438
msgid "``accept``"
msgstr "「受け入れる」"

#: ../../narr/viewconfig.rst:428
msgid ""
"The value of this argument represents a match query for one or more "
"mimetypes in the ``Accept`` HTTP request header.  If this value is "
"specified, it must be in one of the following forms: a mimetype match "
"token in the form ``text/plain``, a wildcard mimetype match token in the "
"form ``text/*``, or a match-all wildcard mimetype match token in the form"
" ``*/*``.  If any of the forms matches the ``Accept`` header of the "
"request, this predicate will be true."
msgstr "この引数の値は、 `` Accept`` HTTPリクエストヘッダ内の1つまたは複数のMIMEタイプの一致クエリを表します。この値が指定されている場合は、次の形式のいずれかでなければなりません： `` text / plain` &quot;の形式のmimetypeマッチトークン、` `text / *` `の形式のワイルドカードmimetypeマッチトークン、 -allワイルドカードmimetypeは `` * / * ``の形式でトークンにマッチします。いずれかのフォームがリクエストの `` Accept``ヘッダと一致する場合、この述語は真となります。"

#: ../../narr/viewconfig.rst:436
msgid ""
"If ``accept`` is not specified, the ``HTTP_ACCEPT`` HTTP header is not "
"taken into consideration when deciding whether or not to invoke the "
"associated view callable."
msgstr "`` accept``が指定されていない場合、HTTP_ACCEPT`` HTTPヘッダーは、関連するビューを呼び出し可能にするかどうかを決定する際には考慮されません。"

#: ../../narr/viewconfig.rst:462
msgid "``header``"
msgstr "``ヘッダー ``"

#: ../../narr/viewconfig.rst:441
msgid "This value represents an HTTP header name or a header name/value pair."
msgstr "この値は、HTTPヘッダー名またはヘッダー名/値のペアを表します。"

#: ../../narr/viewconfig.rst:443
msgid ""
"If ``header`` is specified, it must be a header name or a "
"``headername:headervalue`` pair."
msgstr "`` header``が指定されている場合は、ヘッダ名または `` headername：headervalue``の組でなければなりません。"

#: ../../narr/viewconfig.rst:446
msgid ""
"If ``header`` is specified without a value (a bare header name only, "
"e.g., ``If-Modified-Since``), the view will only be invoked if the HTTP "
"header exists with any value in the request."
msgstr "もし `` header``が値なしで指定されていれば（例えば、 `` If-Modified-Since``のような裸のヘッダ名のみ）、要求にHTTPヘッダーが存在すればビューが呼び出されます。"

#: ../../narr/viewconfig.rst:450
msgid ""
"If ``header`` is specified, and possesses a name/value pair (e.g., "
"``User-Agent:Mozilla/.*``), the view will only be invoked if the HTTP "
"header exists *and* the HTTP header matches the value requested.  When "
"the ``headervalue`` contains a ``:`` (colon), it will be considered a "
"name/value pair (e.g., ``User-Agent:Mozilla/.*`` or ``Host:localhost``)."
"  The value portion should be a regular expression."
msgstr "`` Header``が指定されていて、名前と値のペア（ `` User-Agent：Mozilla /.*``など）を持っている場合、ビューはHTTPヘッダーが存在する場合にのみ呼び出されます*要求された値と一致します。 `` headervalue``に ``： ``（コロン）が含まれていると、それは名前と値のペアとみなされます（例えば `` User-Agent：Mozilla /.* ``や `` Host：localhost`` ）。値の部分は正規表現でなければなりません。"

#: ../../narr/viewconfig.rst:457
msgid ""
"Whether or not the value represents a header name or a header name/value "
"pair, the case of the header name is not significant."
msgstr "値がヘッダー名またはヘッダー名/値のペアを表すかどうかに関係なく、ヘッダー名の大文字小文字は重要ではありません。"

#: ../../narr/viewconfig.rst:460
msgid ""
"If ``header`` is not specified, the composition, presence, or absence of "
"HTTP headers is not taken into consideration when deciding whether or not"
" to invoke the associated view callable."
msgstr "`` header``が指定されていない場合、関連するビューを呼び出し可能にするかどうかを決定する際に、HTTPヘッダーの構成、存在または不在は考慮されません。"

#: ../../narr/viewconfig.rst:472
msgid "``path_info``"
msgstr "`` path_info``"

#: ../../narr/viewconfig.rst:465
msgid ""
"This value represents a regular expression pattern that will be tested "
"against the ``PATH_INFO`` WSGI environment variable to decide whether or "
"not to call the associated view callable.  If the regex matches, this "
"predicate will be ``True``."
msgstr "この値は、 `` PATH_INFO`` WSGI環境変数に対してテストされる正規表現パターンを表し、関連するビューを呼び出し可能にするかどうかを決定します。正規表現が一致する場合、この述語は `` True``になります。"

#: ../../narr/viewconfig.rst:470
msgid ""
"If ``path_info`` is not specified, the WSGI ``PATH_INFO`` is not taken "
"into consideration when deciding whether or not to invoke the associated "
"view callable."
msgstr "`` path_info``が指定されていない場合、WSGIの `` PATH_INFO``は、関連するビューを呼び出すかどうかを決定する際に考慮されません。"

#: ../../narr/viewconfig.rst:494
msgid "``check_csrf``"
msgstr "`` check_csrf``"

#: ../../narr/viewconfig.rst:475
msgid ""
"If specified, this value should be one of ``None``, ``True``, ``False``, "
"or a string representing the \"check name\".  If the value is ``True`` or"
" a string, CSRF checking will be performed.  If the value is ``False`` or"
" ``None``, CSRF checking will not be performed."
msgstr "指定する場合、この値は `` None``、 `` True``、 `` False``、または\ &quot;check name \&quot;を表す文字列のいずれかでなければなりません。値が `` True``または文字列の場合、CSRFチェックが実行されます。値が `` False``または `` None``の場合、CSRFチェックは実行されません。"

#: ../../narr/viewconfig.rst:480
msgid ""
"If the value provided is a string, that string will be used as the "
"\"check name\".  If the value provided is ``True``, ``csrf_token`` will "
"be used as the check name."
msgstr "指定された値が文字列の場合、その文字列は\ &quot;チェック名\&quot;として使用されます。指定された値が `` True``の場合、 `` csrf_token``がチェック名として使用されます。"

#: ../../narr/viewconfig.rst:484
msgid ""
"If CSRF checking is performed, the checked value will be the value of "
"``request.POST[check_name]``.  This value will be compared against the "
"value of ``request.session.get_csrf_token()``, and the check will pass if"
" these two values are the same.  If the check passes, the associated view"
" will be permitted to execute.  If the check fails, the associated view "
"will not be permitted to execute."
msgstr "CSRFチェックが実行されると、チェックされた値は `` request.POST [check_name] ``の値になります。この値は `` request.session.get_csrf_token（） ``の値と比較され、これらの2つの値が同じ場合にチェックが合格します。チェックが合格すると、関連するビューの実行が許可されます。検査が失敗した場合、関連するビューは実行できません。"

#: ../../narr/viewconfig.rst:491
msgid ""
"Note that using this feature requires a :term:`session factory` to have "
"been configured."
msgstr "この機能を使用するには、：term： `session factory`が設定されている必要があります。"

#: ../../narr/viewconfig.rst:508
msgid "``physical_path``"
msgstr "`` physical_path``"

#: ../../narr/viewconfig.rst:497
msgid ""
"If specified, this value should be a string or a tuple representing the "
":term:`physical path` of the context found via traversal for this "
"predicate to match as true.  For example, ``physical_path='/'``, "
"``physical_path='/a/b/c'``, or ``physical_path=('', 'a', 'b', 'c')``.  "
"This is not a path prefix match or a regex, but a whole-path match.  It's"
" useful when you want to always potentially show a view when some object "
"is traversed to, but you can't be sure about what kind of object it will "
"be, so you can't use the ``context`` predicate.  The individual path "
"elements between slash characters or in tuple elements should be the "
"Unicode representation of the name of the resource and should not be "
"encoded in any way."
msgstr "指定された場合、この値は、この述語が真と一致するために、トラバーサルによって見つかったコンテキストの：term： `物理パス &#39;を表す文字列またはタプルでなければなりません。たとえば、 `` physical_path = &#39;/&#39; ``、 `` physical_path = &#39;/ a / b / c```や `` physical_path =（&#39; &#39;、&#39; a &#39;、&#39; b &#39;、&#39; c &#39;） ` `。これは、パス接頭辞の一致または正規表現ではなく、全体パスの一致です。これは、あるオブジェクトがトラバースされているときに常にビューを表示したいときに便利ですが、どのようなオブジェクトであるかを確かめることができないので、 `` context``述語を使うことはできません。スラッシュ文字またはタプル要素の間の個々のパス要素は、リソース名のUnicode表現である必要があり、決してエンコードしないでください。"

#: ../../narr/viewconfig.rst:519
msgid "``effective_principals``"
msgstr "`` effective_principals``"

#: ../../narr/viewconfig.rst:511
msgid ""
"If specified, this value should be a :term:`principal` identifier or a "
"sequence of principal identifiers.  If the "
":meth:`pyramid.request.Request.effective_principals` method indicates "
"that every principal named in the argument list is present in the current"
" request, this predicate will return True; otherwise it will return "
"False.  For example: "
"``effective_principals=pyramid.security.Authenticated`` or "
"``effective_principals=('fred', 'group:admins')``."
msgstr "指定する場合、この値は：term： `principal`識別子または一連のプリンシパル識別子でなければなりません。 ：meth： `pyramid.request.Request.effective_principals`メソッドが、引数リストに指定されたすべてのプリンシパルが現在のリクエストに存在することを示す場合、この述語はTrueを返します。それ以外の場合はFalseを返します。たとえば、 `` effective_principals = pyramid.security.Authenticated``や `` effective_principals =（ &#39;fred&#39;、 &#39;group：admins&#39;） ``などです。"

#: ../../narr/viewconfig.rst:531
msgid "``custom_predicates``"
msgstr "`` custom_predicates``"

#: ../../narr/viewconfig.rst:522
msgid ""
"If ``custom_predicates`` is specified, it must be a sequence of "
"references to custom predicate callables.  Use custom predicates when no "
"set of predefined predicates do what you need.  Custom predicates can be "
"combined with predefined predicates as necessary.  Each custom predicate "
"callable should accept two arguments, ``context`` and ``request``, and "
"should return either ``True`` or ``False`` after doing arbitrary "
"evaluation of the context resource and/or the request.  If all callables "
"return ``True``, the associated view callable will be considered viable "
"for a given request."
msgstr "`` custom_predicates``が指定されていれば、それはカスタム述語呼び出し可能関数への参照のシーケンスでなければなりません。事前定義された述部のセットが必要な場合には、カスタム述部を使用します。カスタム述部は、必要に応じて事前定義された述部と組み合わせることができます。呼び出し可能な各カスタム述語は、 `` context``と `` request``という2つの引数を受け取り、コンテキストリソースや要求の任意の評価を行った後、 `` True``または `` False``を返すべきです。すべての呼び出し可能ファイルが `` True``を返す場合、呼び出し可能な関連ビューは与えられた要求に対して実行可能であると見なされます。"

#: ../../narr/viewconfig.rst:531
msgid "If ``custom_predicates`` is not specified, no custom predicates are used."
msgstr "`` custom_predicates``が指定されていない場合、カスタム述部は使用されません。"

#: ../../narr/viewconfig.rst:540
msgid "``predicates``"
msgstr "``述語 ``"

#: ../../narr/viewconfig.rst:534
msgid ""
"Pass a key/value pair here to use a third-party predicate registered via "
":meth:`pyramid.config.Configurator.add_view_predicate`.  More than one "
"key/value pair can be used at the same time.  See "
":ref:`view_and_route_predicates` for more information about third-party "
"predicates."
msgstr "ここでキー/値のペアを渡すと：meth： `pyramid.config.Configurator.add_view_predicate`で登録されたサードパーティの述語を使用します。複数のキーと値のペアを同時に使用できます。第三者の述語の詳細については、ref： `view_and_route_predicates`を参照してください。"

#: ../../narr/viewconfig.rst:543
msgid "Inverting Predicate Values"
msgstr "述語値の反転"

#: ../../narr/viewconfig.rst:545
msgid ""
"You can invert the meaning of any predicate value by wrapping it in a "
"call to :class:`pyramid.config.not_`."
msgstr "任意の述語値の意味を、class： `pyramid.config.not_`への呼び出しでラップすることによって、その意味を逆転させることができます。"

#: ../../narr/viewconfig.rst:559
msgid ""
"The above example will ensure that the view is called if the request "
"method is *not* ``POST``, at least if no other view is more specific."
msgstr "上記の例では、少なくとも他のビューがより具体的でない場合、リクエストメソッドが* `*` `POST`でない場合にビューが呼び出されることを保証します。"

#: ../../narr/viewconfig.rst:562
msgid ""
"This technique of wrapping a predicate value in ``not_`` can be used "
"anywhere predicate values are accepted:"
msgstr "述部の値を `` not_``にラップするこの手法は、述部の値が受け入れられればどこでも使用できます："

#: ../../narr/viewconfig.rst:565
msgid ":meth:`pyramid.config.Configurator.add_view`"
msgstr "：meth： `pyramid.config.Configurator.add_view`"

#: ../../narr/viewconfig.rst:567
msgid ":meth:`pyramid.view.view_config`"
msgstr "：meth： `pyramid.view.view_config`"

#: ../../narr/viewconfig.rst:578
msgid "Adding View Configuration Using the ``@view_config`` Decorator"
msgstr "`` @ view_config``デコレータを使ったビュー設定の追加"

#: ../../narr/viewconfig.rst:582
msgid ""
"Using this feature tends to slow down application startup slightly, as "
"more work is performed at application startup to scan for view "
"configuration declarations.  For maximum startup performance, use the "
"view configuration method described in "
":ref:`mapping_views_using_imperative_config_section` instead."
msgstr "この機能を使用すると、アプリケーションの起動時にビューの構成宣言をスキャンする作業が増えるため、アプリケーションの起動がわずかに遅くなりがちです。起動時のパフォーマンスを最大にするには、代わりに：ref： `mapping_views_using_imperative_config_section`で説明されているビュー設定方法を使用してください。"

#: ../../narr/viewconfig.rst:588
msgid ""
"The :class:`~pyramid.view.view_config` decorator can be used to associate"
" :term:`view configuration` information with a function, method, or class"
" that acts as a :app:`Pyramid` view callable."
msgstr "：class： `〜pyramid.view.view_config`デコレータは：term：` view configuration`情報を、：app： `Pyramid`ビュー呼び出しとして動作する関数、メソッド、またはクラスに関連付けるのに使用できます。"

#: ../../narr/viewconfig.rst:592
msgid ""
"Here's an example of the :class:`~pyramid.view.view_config` decorator "
"that lives within a :app:`Pyramid` application module ``views.py``:"
msgstr "次に、a：app： `Pyramid`アプリケーションモジュール内にあるclass：`〜pyramid.view.view_config`デコレータの例を示します。 `` views.py``："

#: ../../narr/viewconfig.rst:606
msgid ""
"Using this decorator as above replaces the need to add this imperative "
"configuration stanza:"
msgstr "上記のようにこのデコレータを使用すると、この必須構成スタンザを追加する必要性が置き換えられます。"

#: ../../narr/viewconfig.rst:615
msgid "All arguments to ``view_config`` may be omitted.  For example:"
msgstr "`` view_config``の引数はすべて省略することができます。例えば："

#: ../../narr/viewconfig.rst:628
msgid ""
"Such a registration as the one directly above implies that the view name "
"will be ``my_view``, registered with a ``context`` argument that matches "
"any resource type, using no permission, registered against requests with "
"any request method, request type, request param, route name, or "
"containment."
msgstr "上のような登録は、ビュー名が `` my_view``であり、任意のリソースタイプと一致する `` context``引数で登録され、権限を使用せず、任意のリクエストメソッド、リクエストタイプ、要求パラメタ、ルート名、または包含。"

#: ../../narr/viewconfig.rst:633
msgid ""
"The mere existence of a ``@view_config`` decorator doesn't suffice to "
"perform view configuration.  All that the decorator does is \"annotate\" "
"the function with your configuration declarations, it doesn't process "
"them. To make :app:`Pyramid` process your "
":class:`pyramid.view.view_config` declarations, you *must* use the "
"``scan`` method of a :class:`pyramid.config.Configurator`:"
msgstr "`` @ view_config``デコレータの存在だけでは、ビューの設定を行うのに十分ではありません。デコレータが行うことは、あなたの設定宣言で関数にアノテーションを付けているだけで、それを処理しません。 ：app： `Pyramid`があなたの：class：` pyramid.view.view_config`宣言を処理するには、class :: `pyramid.config.Configurator`の` `scan``メソッドを使用する必要があります："

#: ../../narr/viewconfig.rst:646
msgid ""
"Please see :ref:`decorations_and_code_scanning` for detailed information "
"about what happens when code is scanned for configuration declarations "
"resulting from use of decorators like :class:`~pyramid.view.view_config`."
msgstr "class： `〜pyramid.view.view_config`のようなデコレータの使用に起因する設定宣言のために、コードがスキャンされたときの動作の詳細については、ref：` decorations_and_code_scanning`を参照してください。"

#: ../../narr/viewconfig.rst:650
msgid ""
"See :ref:`configuration_module` for additional API arguments to the "
":meth:`~pyramid.config.Configurator.scan` method.  For example, the "
"method allows you to supply a ``package`` argument to better control "
"exactly *which* code will be scanned."
msgstr "：meth： `〜pyramid.config.Configurator.scan`メソッドへの追加のAPI引数については：ref：` configuration_module`を参照してください。たとえば、このメソッドを使うと、コードを正確に制御するための `` package``引数を指定することができます。"

#: ../../narr/viewconfig.rst:655
msgid ""
"All arguments to the :class:`~pyramid.view.view_config` decorator mean "
"precisely the same thing as they would if they were passed as arguments "
"to the :meth:`pyramid.config.Configurator.add_view` method save for the "
"``view`` argument.  Usage of the :class:`~pyramid.view.view_config` "
"decorator is a form of :term:`declarative configuration`, while "
":meth:`pyramid.config.Configurator.add_view` is a form of "
":term:`imperative configuration`.  However, they both do the same thing."
msgstr "：class： `〜pyramid.view.view_config`デコレータへの引数はすべて、` meth： `pyramid.config.Configurator.add_view`メソッドに引数として渡された場合とまったく同じことを意味します。ビュー ``引数。 ：class： `〜pyramid.view.view_config`デコレータの使用法は：term：`宣言的な設定 `の形式です。：meth：` pyramid.config.Configurator.add_view`は次の形式です：term： `必須の設定`。しかし、どちらも同じことをしています。"

#: ../../narr/viewconfig.rst:669
msgid "``@view_config`` Placement"
msgstr "`` @ view_config``の配置"

#: ../../narr/viewconfig.rst:671
msgid ""
"A :class:`~pyramid.view.view_config` decorator can be placed in various "
"points in your application."
msgstr "A：class： `〜pyramid.view.view_config`デコレータは、アプリケーションのさまざまな場所に置くことができます。"

#: ../../narr/viewconfig.rst:674
msgid ""
"If your view callable is a function, it may be used as a function "
"decorator:"
msgstr "ビュー呼び出し可能関数が関数である場合、それは関数デコレータとして使用できます。"

#: ../../narr/viewconfig.rst:686
msgid ""
"If your view callable is a class, the decorator can also be used as a "
"class decorator. All the arguments to the decorator are the same when "
"applied against a class as when they are applied against a function.  For"
" example:"
msgstr "ビュー呼び出し可能オブジェクトがクラスである場合、デコレータはクラスデコレータとしても使用できます。デコレータに対するすべての引数は、関数に対して適用されるときと同じように、クラスに対して適用されるときと同じです。例えば："

#: ../../narr/viewconfig.rst:704
msgid ""
"More than one :class:`~pyramid.view.view_config` decorator can be stacked"
" on top of any number of others.  Each decorator creates a separate view "
"registration.  For example:"
msgstr "2つ以上のクラス：class： `〜pyramid.view.view_config`デコレータは、いくつでも他のものの上に積み重ねられます。各デコレータは別々のビュー登録を作成します。例えば："

#: ../../narr/viewconfig.rst:719
msgid "This registers the same view under two different names."
msgstr "これにより、同じビューが2つの異なる名前で登録されます。"

#: ../../narr/viewconfig.rst:721
msgid "The decorator can also be used against a method of a class:"
msgstr "デコレータは、クラスのメソッドに対しても使用できます。"

#: ../../narr/viewconfig.rst:737
msgid ""
"When the decorator is used against a method of a class, a view is "
"registered for the *class*, so the class constructor must accept an "
"argument list in one of two forms: either a single argument, ``request``,"
" or two arguments, ``context, request``."
msgstr "デコレータがクラスのメソッドに対して使用されると、* class *のビューが登録されるので、クラスコンストラクタは引数のリストを2つの形式のうちの1つで受け入れる必要があります：一つの引数、 `` request``、引数、 ``コンテキスト、要求 ``"

#: ../../narr/viewconfig.rst:742
msgid "The method which is decorated must return a :term:`response`."
msgstr "装飾されるメソッドは、：term： `response`を返さなければなりません。"

#: ../../narr/viewconfig.rst:744
msgid ""
"Using the decorator against a particular method of a class is equivalent "
"to using the ``attr`` parameter in a decorator attached to the class "
"itself. For example, the above registration implied by the decorator "
"being used against the ``amethod`` method could be written equivalently "
"as follows:"
msgstr "デコレータをクラスの特定のメソッドに対して使用することは、クラス自体にアタッチされたデコレータで `` attr``パラメータを使うことと同じです。例えば、 &quot;メソッド&quot;メソッドに対してデコレータが使用している上記の登録は、以下のように等価的に書くことができます："

#: ../../narr/viewconfig.rst:770
msgid ""
"Adding View Configuration Using "
":meth:`~pyramid.config.Configurator.add_view`"
msgstr "：meth： `〜pyramid.config.Configurator.add_view`を使ったビュー設定の追加"

#: ../../narr/viewconfig.rst:772
msgid ""
"The :meth:`pyramid.config.Configurator.add_view` method within "
":ref:`configuration_module` is used to configure a view \"imperatively\" "
"(without a :class:`~pyramid.view.view_config` decorator).  The arguments "
"to this method are very similar to the arguments that you provide to the "
":class:`~pyramid.view.view_config` decorator.  For example:"
msgstr "：ref： `configuration_module`内の：meth：` pyramid.config.Configurator.add_view`メソッドは、（必須ではありません：class： `〜pyramid.view.view_config`デコレータなしで）ビューを&quot;必須 &quot;に設定するために使用されます。このメソッドの引数は、class： `〜pyramid.view.view_config`デコレータに提供する引数に非常に似ています。例えば："

#: ../../narr/viewconfig.rst:790
msgid ""
"The first argument, a :term:`view callable`, is the only required "
"argument. It must either be a Python object which is the view itself or a"
" :term:`dotted Python name` to such an object. In the above example, the "
"``view callable`` is the ``hello_world`` function."
msgstr "第1引数a：term： `view callable`は唯一の必須引数です。これは、ビュー自体であるPythonオブジェクトか、そのようなオブジェクトに対する：term： `点線のPython名 &#39;のいずれかでなければなりません。上の例では、 `` view callable``は `` hello_world``関数です。"

#: ../../narr/viewconfig.rst:795
msgid ""
"When you use only :meth:`~pyramid.config.Configurator.add_view` to add "
"view configurations, you don't need to issue a :term:`scan` in order for "
"the view configuration to take effect."
msgstr "ビュー設定を追加するために：meth： `〜pyramid.config.Configurator.add_view`だけを使うときは、ビュー設定を有効にするために：term：` scan`を発行する必要はありません。"

#: ../../narr/viewconfig.rst:805
msgid "``@view_defaults`` Class Decorator"
msgstr "`` @ view_defaults``クラスデコレータ"

#: ../../narr/viewconfig.rst:809
msgid ""
"If you use a class as a view, you can use the "
":class:`pyramid.view.view_defaults` class decorator on the class to "
"provide defaults to the view configuration information used by every "
"``@view_config`` decorator that decorates a method of that class."
msgstr "クラスをビューとして使用する場合は、クラスの：class： `pyramid.view.view_defaults`クラスデコレータを使用して、メソッドを装飾するすべての` `@ view_config``デコレータによって使用されるビュー設定情報にデフォルトを提供できますそのクラスの。"

#: ../../narr/viewconfig.rst:814
msgid ""
"For instance, if you've got a class that has methods that represent "
"\"REST actions\", all of which are mapped to the same route but different"
" request methods, instead of this:"
msgstr "たとえば、「RESTアクション」を表すメソッドを持つクラスがある場合、これらのクラスはすべて同じルートにマッピングされますが、リクエストメソッドは異なります。"

#: ../../narr/viewconfig.rst:840
msgid "You can do this:"
msgstr "あなたはこれを行うことができます："

#: ../../narr/viewconfig.rst:866
msgid ""
"In the above example, we were able to take the ``route_name='rest'`` "
"argument out of the call to each individual ``@view_config`` statement "
"because we used a ``@view_defaults`` class decorator to provide the "
"argument as a default to each view method it possessed."
msgstr "上記の例では、 `` @ view_defaults``クラスデコレータを使用していたので、個々の `` @ view_config``文の呼び出しから `` route_name = &#39;rest&#39;``引数を取ることができました。それが所有する各ビューメソッドのデフォルトとしての引数"

#: ../../narr/viewconfig.rst:871
msgid ""
"Arguments passed to ``@view_config`` will override any default passed to "
"``@view_defaults``."
msgstr "`` @ view_config``に渡された引数は、 `` @ view_defaults``に渡されたデフォルトを上書きします。"

#: ../../narr/viewconfig.rst:874
msgid ""
"The ``view_defaults`` class decorator can also provide defaults to the "
":meth:`pyramid.config.Configurator.add_view` directive when a decorated "
"class is passed to that directive as its ``view`` argument.  For example,"
" instead of this:"
msgstr "`` view_defaults``クラスのデコレータは、修飾されたクラスが `` view``引数としてそのディレクティブに渡されたとき、：meth： `pyramid.config.Configurator.add_view`ディレクティブにデフォルトを提供することもできます。たとえば、これの代わりに："

#: ../../narr/viewconfig.rst:909
msgid ""
"To reduce the amount of repetition in the ``config.add_view`` statements,"
" we can move the ``route_name='rest'`` argument to a ``@view_defaults`` "
"class decorator on the ``RESTView`` class:"
msgstr "`` config.add_view``ステートメントの繰り返し回数を減らすために、 `` route_name = &#39;rest&#39;``引数を `` RESTView``クラスの `` @ view_defaults``クラスデコレータに移動できます："

#: ../../narr/viewconfig.rst:942
msgid ""
":class:`pyramid.view.view_defaults` accepts the same set of arguments "
"that :class:`pyramid.view.view_config` does, and they have the same "
"meaning.  Each argument passed to ``view_defaults`` provides a default "
"for the view configurations of methods of the class it's decorating."
msgstr "：class： `pyramid.view.view_defaults`は、class：` pyramid.view.view_config`と同じ引数の集合を受け入れ、それらは同じ意味を持ちます。 `` view_defaults``に渡される各引数は、装飾するクラスのメソッドのビュー設定のデフォルトを提供します。"

#: ../../narr/viewconfig.rst:947
msgid ""
"Normal Python inheritance rules apply to defaults added via "
"``view_defaults``. For example:"
msgstr "通常のPython継承規則は、 `` view_defaults``によって追加されたデフォルトに適用されます。例えば："

#: ../../narr/viewconfig.rst:960
msgid ""
"The ``Bar`` class above will inherit its view defaults from the arguments"
" passed to the ``view_defaults`` decorator of the ``Foo`` class.  To "
"prevent this from happening, use a ``view_defaults`` decorator without "
"any arguments on the subclass:"
msgstr "上記の `` Bar``クラスは、 `` Foo``クラスの `` view_defaults``デコレータに渡された引数からビューのデフォルトを継承します。これを避けるには、サブクラスで引数なしで `` view_defaults``デコレータを使用してください："

#: ../../narr/viewconfig.rst:976
msgid ""
"The ``view_defaults`` decorator only works as a class decorator; using it"
" against a function or a method will produce nonsensical results."
msgstr "`` view_defaults``デコレータはクラスデコレータとしてのみ動作します。それを関数またはメソッドに対して使用すると、無意味な結果が生成されます。"

#: ../../narr/viewconfig.rst:986
msgid "Configuring View Security"
msgstr "ビューセキュリティの設定"

#: ../../narr/viewconfig.rst:988
msgid ""
"If an :term:`authorization policy` is active, any :term:`permission` "
"attached to a :term:`view configuration` found during view lookup will be"
" verified. This will ensure that the currently authenticated user "
"possesses that permission against the :term:`context` resource before the"
" view function is actually called.  Here's an example of specifying a "
"permission in a view configuration using "
":meth:`~pyramid.config.Configurator.add_view`:"
msgstr "：term： `認証ポリシー`がアクティブな場合、ビュー検索中に見つかった：term： `view configuration`に付加された：term：` permission`が検証されます。これにより、現在認証されているユーザが、view関数が実際に呼び出される前に、：term： `context`リソースに対してそのパーミッションを持つことが保証されます。以下は、viewの設定でpermissionを指定する例です：meth： `〜pyramid.config.Configurator.add_view`："

#: ../../narr/viewconfig.rst:1004
msgid ""
"When an :term:`authorization policy` is enabled, this view will be "
"protected with the ``add`` permission.  The view will *not be called* if "
"the user does not possess the ``add`` permission relative to the current "
":term:`context`. Instead the :term:`forbidden view` result will be "
"returned to the client as per :ref:`protecting_views`."
msgstr "：term： `認証ポリシー`が有効な場合、このビューは `` add``パーミッションで保護されます。ユーザーは、現在の：term： `context`に対して` `add``パーミッションを持っていない場合、ビューは呼び出されません。代わりに、：term： `禁止されたビュー &#39;の結果は、：ref：` protection_views&#39;ごとにクライアントに返されます。"

#: ../../narr/viewconfig.rst:1017
msgid ":exc:`~pyramid.exceptions.NotFound` Errors"
msgstr "：exc： `〜pyramid.exceptions.NotFound`エラー"

#: ../../narr/viewconfig.rst:1019
msgid ""
"It's useful to be able to debug :exc:`~pyramid.exceptions.NotFound` error"
" responses when they occur unexpectedly due to an application registry "
"misconfiguration.  To debug these errors, use the "
"``PYRAMID_DEBUG_NOTFOUND`` environment variable or the "
"``pyramid.debug_notfound`` configuration file setting.  Details of why a "
"view was not found will be printed to ``stderr``, and the browser "
"representation of the error will include the same information. See "
":ref:`environment_chapter` for more information about how, and where to "
"set these values."
msgstr "アプリケーションレジストリの設定ミスによって予期せずエラーが発生した場合、exc： `〜pyramid.exceptions.NotFound`エラーをデバッグできるようにすると便利です。これらのエラーをデバッグするには、環境変数PYRAMID_DEBUG_NOTFOUND`または `` pyramid.debug_notfound``設定ファイルの設定を使用します。ビューが見つからなかった理由の詳細は `` stderr``に出力され、エラーのブラウザ表現には同じ情報が含まれます。これらの値の設定方法と設定方法の詳細については、ref： `environment_chapter`を参照してください。"

#: ../../narr/viewconfig.rst:1034
msgid "Influencing HTTP Caching"
msgstr "HTTPキャッシングへの影響"

#: ../../narr/viewconfig.rst:1038
msgid ""
"When a non-``None`` ``http_cache`` argument is passed to a view "
"configuration, Pyramid will set ``Expires`` and ``Cache-Control`` "
"response headers in the resulting response, causing browsers to cache the"
" response data for some time. See ``http_cache`` in "
":ref:`nonpredicate_view_args` for the allowable values and what they "
"mean."
msgstr "非 `` No`` `` http_cache``引数がビュー設定に渡されると、Pyramidは結果のレスポンスに `` Expires``と `` Cache-Control``レスポンスヘッダを設定し、ブラウザがいくつかの時間の応答データ。許容値とその意味については、：ref： `nonpredicate_view_args`の` `http_cache``を参照してください。"

#: ../../narr/viewconfig.rst:1044
msgid ""
"Sometimes it's undesirable to have these headers set as the result of "
"returning a response from a view, even though you'd like to decorate the "
"view with a view configuration decorator that has ``http_cache``.  "
"Perhaps there's an alternative branch in your view code that returns a "
"response that should never be cacheable, while the \"normal\" branch "
"returns something that should always be cacheable.  If this is the case, "
"set the ``prevent_auto`` attribute of the ``response.cache_control`` "
"object to a non-``False`` value.  For example, the below view callable is"
" configured with a ``@view_config`` decorator that indicates any response"
" from the view should be cached for 3600 seconds. However, the view "
"itself prevents caching from taking place unless there's a "
"``should_cache`` GET or POST variable:"
msgstr "「http_cache」を持つビュー構成デコレータでビューを飾りたい場合でも、ビューからの応答を返す結果としてこれらのヘッダーを設定することは望ましくないことがあります。おそらく、キャッシュ可能ではない応答を返すビューコード内の別のブランチがありますが、通常のブランチは常にキャッシュ可能なものを返します。このような場合は、 `` response.cache_control``オブジェクトの `` prevent_auto``属性を `` False``以外の値に設定してください。たとえば、以下の呼び出し可能ビューは、ビューからの応答が3600秒間キャッシュされるべきであることを示す `` @ view_config``デコレータで構成されます。しかし、 `` should_cache`` GET変数またはPOST変数がない限り、ビュー自体はキャッシングが起こらないようにします："

#: ../../narr/viewconfig.rst:1067
msgid ""
"Note that the ``http_cache`` machinery will overwrite or add to caching "
"headers you set within the view itself, unless you use ``prevent_auto``."
msgstr "`` http_cache``機構は、あなたが `` prevent_auto``を使わない限り、あなた自身が設定したキャッシングヘッダに上書きしたり追加したりすることに注意してください。"

#: ../../narr/viewconfig.rst:1070
msgid ""
"You can also turn off the effect of ``http_cache`` entirely for the "
"duration of a Pyramid application lifetime.  To do so, set the "
"``PYRAMID_PREVENT_HTTP_CACHE`` environment variable or the "
"``pyramid.prevent_http_cache`` configuration value setting to a true "
"value. For more information, see :ref:`preventing_http_caching`."
msgstr "Pyramidアプリケーションの存続期間中、 `` http_cache``の効果を完全に無効にすることもできます。そのためには、 `` PYRAMID_PREVENT_HTTP_CACHE``環境変数または `` pyramid.prevent_http_cache``設定値を真の値に設定してください。詳細については、ref： `prevent_http_caching`を参照してください。"

#: ../../narr/viewconfig.rst:1076
msgid ""
"Note that setting ``pyramid.prevent_http_cache`` will have no effect on "
"caching headers that your application code itself sets.  It will only "
"prevent caching headers that would have been set by the Pyramid HTTP "
"caching machinery invoked as the result of the ``http_cache`` argument to"
" view configuration."
msgstr "`` pyramid.prevent_http_cache``を設定しても、アプリケーションコード自身が設定するヘッダをキャッシュすることには影響しません。 `` http_cache``引数の結果として呼び出されるPyramid HTTPキャッシングマシンによって設定されていたキャッシュヘッダは、設定を表示することのみを妨げます。"

#: ../../narr/viewconfig.rst:1087
msgid "Debugging View Configuration"
msgstr "ビュー構成のデバッグ"

#: ../../narr/viewconfig.rst:1089
msgid ""
"See :ref:`displaying_matching_views` for information about how to display"
" each of the view callables that might match for a given URL.  This can "
"be an effective way to figure out why a particular view callable is being"
" called instead of the one you'd like to be called."
msgstr "指定されたURLに一致する可能性のあるビュー呼び出し可能コードをそれぞれ表示する方法については、ref： `displaying_matching_views`を参照してください。これは、呼び出されるビューの代わりに特定のビューのコール可能オブジェクトが呼び出されている理由を理解するのに効果的な方法です。"

