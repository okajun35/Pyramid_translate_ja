# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../narr/install.rst:4
msgid "Installing :app:`Pyramid`"
msgstr "(機械翻訳) インストール :app:`Pyramid`"

#: ../../narr/install.rst:8
msgid ""
"This installation guide emphasizes the use of Python 3.4 and greater for "
"simplicity."
msgstr "このインストールガイドでは、簡単にするためにPython 3.4以降を使用することを強調しています。"

#: ../../narr/install.rst:16
msgid "Before You Install Pyramid"
msgstr "ピラミッドをインストールする前に"

#: ../../narr/install.rst:18
msgid ""
"Install Python version 3.4 or greater for your operating system, and "
"satisfy the :ref:`requirements-for-installing-packages`, as described in "
"the following sections."
msgstr "ご使用のオペレーティングシステム用のPythonバージョン3.4以上をインストールし、以下のセクションで説明するように：ref： `require-for-installing-packages`を満たしてください。"

msgid "Python Versions"
msgstr "Pythonのバージョン"

#: ../../narr/install.rst:24
msgid ""
"As of this writing, :app:`Pyramid` is tested against Python 2.7, Python "
"3.4, Python 3.5, Python 3.6, and PyPy."
msgstr "この記事の執筆時点では、：app： `Pyramid`はPython 2.7、Python 3.4、Python 3.5、Python 3.6、PyPyに対してテストされています。"

#: ../../narr/install.rst:27
msgid ""
":app:`Pyramid` is known to run on all popular UNIX-like systems such as "
"Linux, Mac OS X, and FreeBSD, as well as on Windows platforms.  It is "
"also known to run on :term:`PyPy` (1.9+)."
msgstr "：app：Pyramidは、Linux、Mac OS X、FreeBSDなどの一般的なUNIX系システムやWindowsプラットフォームで動作することが知られています。 term： `PyPy`（1.9+）で動作することも知られています。"

#: ../../narr/install.rst:31
msgid ""
":app:`Pyramid` installation does not require the compilation of any C "
"code. However, some :app:`Pyramid` dependencies may attempt to build "
"binary extensions from C code for performance speed ups. If a compiler or"
" Python headers are unavailable, the dependency will fall back to using "
"pure Python instead."
msgstr "：app：Pyramidのインストールでは、Cコードのコンパイルは必要ありません。しかし、いくつかの：app： `Pyramid`の依存関係は、パフォーマンス向上のためにCコードからバイナリ拡張を構築しようとするかもしれません。コンパイラやPythonのヘッダが利用できない場合、依存関係は純粋なPythonを使用することに戻ります。"

#: ../../narr/install.rst:39
msgid ""
"If you see any warnings or errors related to failing to compile the "
"binary extensions, in most cases you may safely ignore those errors. If "
"you wish to use the binary extensions, please verify that you have a "
"functioning compiler and the Python header files installed for your "
"operating system."
msgstr "バイナリ拡張をコンパイルできないという警告やエラーが表示された場合は、ほとんどの場合、これらのエラーを無視しても問題ありません。バイナリ拡張機能を使用する場合は、機能しているコンパイラとPythonヘッダファイルがオペレーティングシステム用にインストールされていることを確認してください。"

#: ../../narr/install.rst:48
msgid "For Mac OS X Users"
msgstr "Mac OS Xユーザーの場合"

#: ../../narr/install.rst:50
msgid ""
"Python comes pre-installed on Mac OS X, but due to Apple's release cycle,"
" it is often out of date. Unless you have a need for a specific earlier "
"version, it is recommended to install the latest 3.x version of Python."
msgstr "PythonはMac OS Xにプリインストールされていますが、Appleのリリースサイクルのために古くなっています。特定の以前のバージョンが必要な場合を除き、最新の3.xバージョンのPythonをインストールすることをお勧めします。"

#: ../../narr/install.rst:54
msgid ""
"You can install the latest version of Python for Mac OS X from the "
"binaries on `python.org <https://www.python.org/downloads/mac-osx/>`_."
msgstr "Python for Mac OS Xの最新バージョンは、Python.orgのバイナリからインストールすることができます<https://www.python.org/downloads/mac-osx/> `_。"

#: ../../narr/install.rst:57
msgid ""
"Alternatively, you can use the `homebrew <https://brew.sh/>`_ package "
"manager."
msgstr "代わりに、 `homebrew <https://brew.sh/> `_パッケージマネージャー。"

#: ../../narr/install.rst:64
msgid ""
"If you use an installer for your Python, then you can skip to the section"
" :ref:`installing_unix`."
msgstr "Python用のインストーラを使用している場合は、ref： `installing_unix`セクションにスキップできます。"

#: ../../narr/install.rst:71
msgid "If You Don't Yet Have a Python Interpreter (UNIX)"
msgstr "Pythonインタプリタをまだ持っていない場合（UNIX）"

#: ../../narr/install.rst:73
msgid ""
"If your system doesn't have a Python interpreter, and you're on UNIX, you"
" can either install Python using your operating system's package manager "
"*or* you can install Python from source fairly easily on any UNIX system "
"that has development tools."
msgstr "あなたのシステムにPythonインタプリタがなく、あなたがUNIXの場合は、あなたのオペレーティングシステムのパッケージマネージャを使ってPythonをインストールすることができます。*または開発ツールを持つUNIXシステムにPythonを簡単にインストールできます。"

#: ../../narr/install.rst:78
msgid ""
"See the official Python documentation :ref:`Using Python on Unix "
"platforms <python:using-on-unix>` for full details."
msgstr "公式のPythonのドキュメントを参照してください：ref： `UnixプラットフォームでのPythonの使用<python:using-on-unix> `詳細については、"

#: ../../narr/install.rst:88
msgid "If You Don't Yet Have a Python Interpreter (Windows)"
msgstr "Pythonインタプリタをまだ持っていない場合（Windows）"

#: ../../narr/install.rst:90
msgid ""
"If your Windows system doesn't have a Python interpreter, you'll need to "
"install it by downloading a Python 3.x-series interpreter executable from"
" `python.org's download section <https://www.python.org/downloads/>`_ "
"(the files labeled \"Windows Installer\").  Once you've downloaded it, "
"double click on the executable and select appropriate options during the "
"installation process. To standardize this documentation, we used the GUI "
"installer and selected the following options:"
msgstr "あなたのWindowsシステムにPythonインタプリタがない場合は、Python 3.xシリーズインタプリタをPython.orgのダウンロードセクションからダウンロードしてインストールする必要があります<https://www.python.org/downloads/> `_（&quot; Windows Installer &quot;というラベルの付いたファイル）。ダウンロードしたら、実行可能ファイルをダブルクリックし、インストールプロセス中に適切なオプションを選択します。このドキュメントを標準化するために、GUIインストーラを使用して次のオプションを選択しました。"

#: ../../narr/install.rst:100
msgid "Screen 1: Install Python 3.x.x (32- or 64-bit)"
msgstr "画面1：Python 3.xx（32ビットまたは64ビット）をインストールする"

#: ../../narr/install.rst:99
msgid "Check \"Install launcher for all users (recommended)\"."
msgstr "\ &quot;すべてのユーザーにランチャーをインストールする（推奨）\&quot;を確認してください。"

#: ../../narr/install.rst:100
msgid "Check \"Add Python 3.x to PATH\"."
msgstr "\ &quot;Python 3.xをPATHに追加\&quot;をチェックしてください。"

#: ../../narr/install.rst:101
msgid "Click \"Install Now\"."
msgstr "\ &quot;今すぐインストールする\&quot;をクリックします。"

#: ../../narr/install.rst:103
msgid "Screen 2: User Account Control"
msgstr "画面2：ユーザーアカウント制御"

#: ../../narr/install.rst:103
msgid "Click \"Yes\"."
msgstr "\ &quot;はい\&quot;をクリックします。"

#: ../../narr/install.rst:105
msgid ""
"See the official Python documentation :ref:`Using Python on Windows "
"<python:using-on-windows>` for full details."
msgstr "公式のPythonのドキュメントを参照してください：ref： `WindowsでPythonを使う<python:using-on-windows> `詳細については、"

#: ../../narr/install.rst:108
msgid ""
"You might also need to download and install the `Python for Windows "
"extensions <https://sourceforge.net/projects/pywin32/files/pywin32/>`_. "
"Carefully read the README.txt file at the end of the list of builds, and "
"follow its directions. Make sure you get the proper 32- or 64-bit build "
"and Python version."
msgstr "Python for Windows extensionsをダウンロードしてインストールする必要があります<https://sourceforge.net/projects/pywin32/files/pywin32/> `_。ビルドのリストの最後にあるREADME.txtファイルを注意深く読んで、その指示に従ってください。適切な32ビットまたは64ビットのビルドとPythonのバージョンを取得してください。"

#: ../../narr/install.rst:115
msgid ""
"`Python launcher for Windows "
"<https://docs.python.org/3/using/windows.html#launcher>`_ provides a "
"command ``py`` that allows users to run any installed version of Python."
msgstr "`Pythonランチャーfor Windows <https://docs.python.org/3/using/windows.html#launcher> `_は、ユーザーがPythonのインストールされているバージョンを実行できるようにする` `py``コマンドを提供します。"

#: ../../narr/install.rst:119
msgid ""
"After you install Python on Windows, you might need to add the directory "
"where Python and other programs—such as pip, setuptools, and "
"cookiecutter—are installed to your environment's ``Path``. This will make"
" it possible to invoke them from a command prompt."
msgstr "PythonをWindowsにインストールしたら、Pythonや他のプログラム（pip、setuptools、cookiecutterなど）がインストールされているディレクトリを環境の `` Path``に追加する必要があります。これにより、コマンドプロンプトからそれらを呼び出すことができます。"

#: ../../narr/install.rst:124
msgid ""
"To do so, search for \"Environment Variables\" on your computer (on "
"Windows 10, it is under ``System Properties`` --> ``Advanced``) and add "
"that directory to the ``Path`` environment variable, using the GUI to "
"edit path segments."
msgstr "これを行うには、コンピュータ上の\ &quot;環境変数\&quot;を検索してください（Windows 10では ``システムプロパティ ``  -  `` Advanced``の下にあります）。そのディレクトリを `` Path``環境に追加してください変数を使用して、GUIを使用してパスセグメントを編集します。"

#: ../../narr/install.rst:129
msgid ""
"Example segments should look like "
"``C:\\Users\\<username>\\AppData\\Local\\Programs\\Python3x-32``, where "
"you have your username instead of ``<username>``, and your version of "
"Python and whether it is 32- or 64-bit. Additionally ensure you have the "
"path segment ending with ``\\Scripts``, i.e., "
"``C:\\Users\\<username>\\AppData\\Local\\Programs\\Python3x-32\\Scripts``,"
" and for user-installed Python programs, "
"``%APPDATA%\\Python\\Python3x\\Scripts``."
msgstr "セグメントの例は `` C：\\ Users \\ <username> \\ AppData \\ Local \\ Programs \\ Python3x-32``のように、 `` <username> ``、あなたのPythonのバージョン、そしてそれが32ビットか64ビットのどちらかです。さらに、 `` \\ Scripts``で終わるパスセグメント、つまり `` C：\\ Users \\ &#39; <username> \\ AppData \\ Local \\ Programs \\ Python3x-32 \\ Scripts``、およびユーザーがインストールしたPythonプログラムの場合は、 ``％APPDATA％\\ Python \\ Python3x \\ Scripts`のようになります。"

#: ../../narr/install.rst:137
msgid ""
"You may need to restart your command prompt session to load the "
"environment variables."
msgstr "環境変数をロードするには、コマンドプロンプトセッションを再起動する必要があります。"

#: ../../narr/install.rst:140
msgid ""
"See `Configuring Python (on Windows) "
"<https://docs.python.org/3/using/windows.html#configuring-python>`_ for "
"full details."
msgstr "`Pythonの設定（Windowsの場合） <https://docs.python.org/3/using/windows.html#configuring-python> `_詳細については_"

#: ../../narr/install.rst:151
msgid "Requirements for Installing Packages"
msgstr "パッケージのインストール要件"

#: ../../narr/install.rst:153
msgid ""
"Use :term:`pip` for installing packages and ``python3 -m venv env`` for "
"creating a virtual environment. A virtual environment is a semi-isolated "
"Python environment that allows packages to be installed for use by a "
"particular application, rather than being installed system wide."
msgstr "パッケージをインストールするにはterm： `pip`を使い、仮想環境を作るには` `python3 -m venv env``を使います。仮想環境は、システム全体にインストールするのではなく、特定のアプリケーションで使用するためにパッケージをインストールできるようにする半独立型のPython環境です。"

#: ../../narr/install.rst:158
msgid ""
"See the Python Packaging Authority's (PyPA) documention `Requirements for"
" Installing Packages <https://packaging.python.org/tutorials/installing-"
"packages/#requirements-for-installing-packages>`_ for full details."
msgstr "Python Packaging Authority（PyPA）のドキュメント `パッケージのインストールのための要件<https://packaging.python.org/tutorials/installing-packages/#requirements-for-installing-packages> `_詳細については_"

#: ../../narr/install.rst:171
msgid "Installing :app:`Pyramid` on a UNIX System"
msgstr "インストール：app： `Pyramid`をUNIXシステムにインストールする"

#: ../../narr/install.rst:173
msgid ""
"After installing Python as described previously in :ref:`for-mac-"
"os-x-users` or :ref:`if-you-don-t-yet-have-a-python-interpreter-unix`, "
"and satisfying the :ref:`requirements-for-installing-packages`, you can "
"now install Pyramid."
msgstr "前述の：ref： `for-mac-os-x-users`や：ref：` `if-you-don-t-y​​et-a-python-interpreter-unix`のようにPythonをインストールした後、 ：ref： `require-for-installing-packages`を実行すると、Pyramidをインストールできます。"

#: ../../narr/install.rst:177 ../../narr/install.rst:232
msgid "Make a :term:`virtual environment` workspace:"
msgstr "Make：a：term： `virtual environment`ワークスペース："

#: ../../narr/install.rst:184
msgid ""
"You can either follow the use of the environment variable ``$VENV``, or "
"replace it with the root directory of the virtual environment. If you "
"choose the former approach, ensure that ``$VENV`` is an absolute path. In"
" the latter case, the ``export`` command can be skipped."
msgstr "環境変数 `` $ VENV``の使用に従うか、仮想環境のルートディレクトリに置き換えることができます。前者の方法を選択した場合は、 `` $ VENV``が絶対パスであることを確認してください。後者の場合、 `` export``コマンドはスキップできます。"

#: ../../narr/install.rst:189
msgid ""
"(Optional) Consider using ``$VENV/bin/activate`` to make your shell "
"environment wired to use the virtual environment."
msgstr "（オプション） `` $ VENV / bin / activate``を使って仮想環境を使うようにシェル環境を配線することを検討してください。"

#: ../../narr/install.rst:192 ../../narr/install.rst:249
msgid "Use ``pip`` to get :app:`Pyramid` and its direct dependencies installed:"
msgstr "app： `Pyramid`とその直接の依存関係をインストールするには` `pip``を使います："

#: ../../narr/install.rst:203
msgid ""
"Why use ``$VENV/bin/pip`` instead of ``source bin/activate``, then "
"``pip``?"
msgstr "``ソースbin / activate``の代わりに `` $ VENV / bin / pip``を使うのはなぜ？ `` pip``ですか？"

#: ../../narr/install.rst:206
msgid ""
"``$VENV/bin/pip`` clearly specifies that ``pip`` is run from within the "
"virtual environment and not at the system level."
msgstr "`` $ VENV / bin / pip``は `` pip``がシステムレベルではなく仮想環境内から実行されることを明確に指定しています。"

#: ../../narr/install.rst:209
msgid ""
"``activate`` makes changes to the user's shell environment which can "
"often be convenient. However, in the context of long-form documentation, "
"environment configuration can easily be forgotten. By keeping each "
"snippet explicit we can reduce copy / paste errors by users in which "
"commands are executed against the wrong Python environment. Also, "
"``deactivate`` might not correctly restore previous shell environment "
"variables. Avoiding ``activate`` keeps the environment more reproducible."
msgstr "`` activate``はユーザのシェル環境を変更します。これはしばしば便利です。しかし、長い形式の文書では、環境設定を簡単に忘れることがあります。各スニペットを明示的に保つことで、誤ったPython環境に対してコマンドが実行されるユーザによるコピー/ペーストエラーを減らすことができます。また、 `` deactivate``は以前のシェル環境変数を正しく復元しないかもしれません。 `` activate``を避けることは環境をより再現性のあるものにします。"

#: ../../narr/install.rst:211
msgid ""
"Although using ``source bin/activate``, then ``pip``, requires fewer key "
"strokes to issue commands once invoked, there are other things to "
"consider. Michael F. Lamb (datagrok) presents a summary in `Virtualenv's "
"bin/activate is Doing It Wrong "
"<https://gist.github.com/datagrok/2199506>`_."
msgstr "`` source bin / activate``を使用していて、 `` pip``を実行すると、呼び出されたコマンドを発行するためのキーストロークが少なくて済みますが、考慮すべき点があります。 Michael F. Lamb（datagrok）は `Virtualenvのbin / activeに要約を提示していますDoing It Wrong <https://gist.github.com/datagrok/2199506> `_。"

#: ../../narr/install.rst:216
msgid ""
"Ultimately we prefer to keep things clear and simple, so we use "
"``$VENV/bin/pip``."
msgstr "最終的には、明確でシンプルなものを保つことを好むので、 `` $ VENV / bin / pip``を使います。"

#: ../../narr/install.rst:226
msgid "Installing :app:`Pyramid` on a Windows System"
msgstr "インストール：app： `Pyramid`をWindowsシステムにインストールする"

#: ../../narr/install.rst:228
msgid ""
"After installing Python as described previously in :ref:`if-you-don-t"
"-yet-have-a-python-interpreter-windows`, and satisfying the :ref"
":`requirements-for-installing-packages`, you can now install Pyramid."
msgstr "前述の：ref： `if-you-don-t-y​​et-a-python-interpreter-windows`で説明したようにPythonをインストールし、：ref：` require-for-installation-packages`を満たすならば、今ピラミッドをインストールします。"

#: ../../narr/install.rst:241
msgid ""
"You can either follow the use of the environment variable ``%VENV%``, or "
"replace it with the root directory of the virtual environment. If you "
"choose the former approach, ensure that ``%VENV%`` is an absolute path. "
"In the latter case, the ``set`` command can be skipped."
msgstr "環境変数 ``％VENV％ ``を使用するか、仮想環境のルートディレクトリに置き換えることができます。前者の方法を選択した場合は、 ``％VENV％ ``が絶対パスであることを確認してください。後者の場合、 `` set``コマンドはスキップできます。"

#: ../../narr/install.rst:246
msgid ""
"(Optional) Consider using ``%VENV%\\Scripts\\activate.bat`` to make your "
"shell environment wired to use the virtual environment."
msgstr "（オプション）仮想環境を使用するようにシェル環境を配線するには、 ``％VENV％\\ Scripts \\ activate.bat``を使用することを検討してください。"

#: ../../narr/install.rst:255
msgid ""
"See the note above for :ref:`Why use $VENV/bin/pip instead of source "
"bin/activate, then pip <venv-bin-pip-vs-source-bin-activate>`."
msgstr "上の注意を参照してください：ref： `ソースbin / activateの代わりに$ VENV / bin / pipを使ってからpip <venv-bin-pip-vs-source-bin-activate> `。"

#: ../../narr/install.rst:260
msgid "What Gets Installed"
msgstr "インストールされるもの"

#: ../../narr/install.rst:262
msgid ""
"When you install :app:`Pyramid`, various libraries such as WebOb, "
"PasteDeploy, and others are installed."
msgstr "：app： `Pyramid`をインストールすると、WebOb、PasteDeployなどのさまざまなライブラリがインストールされます。"

#: ../../narr/install.rst:265
msgid ""
"Additionally, as chronicled in :ref:`project_narr`, "
":term:`cookiecutter`\\ s will be used, which make it easy to start a new "
":app:`Pyramid` project."
msgstr "さらに、：ref： `project_narr`でchynledされているように、：term：` cookiecutter` \が使用され、新しい：app： `Pyramid`プロジェクトを簡単に開始できます。"

