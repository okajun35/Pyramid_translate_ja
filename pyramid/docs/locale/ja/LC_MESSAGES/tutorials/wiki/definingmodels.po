# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../tutorials/wiki/definingmodels.rst:5
msgid "Defining the Domain Model"
msgstr "(機械翻訳)ドメインモデルの定義"

#: ../../tutorials/wiki/definingmodels.rst:7
msgid ""
"The first change we'll make to our stock cookiecutter-generated "
"application will be to define two :term:`resource` constructors, one "
"representing a wiki page, and another representing the wiki as a mapping "
"of wiki page names to page objects.  We'll do this inside our "
"``models.py`` file."
msgstr "株式cookiecutterで生成されるアプリケーションの最初の変更は、term： `resource`コンストラクタ、wikiページを表すコンストラクタ、およびwikiをページオブジェクトへのマッピングとして表す別の2つを定義することです。これを `` models.py``ファイルの中で行います。"

#: ../../tutorials/wiki/definingmodels.rst:12
msgid ""
"Because we're using :term:`ZODB` to represent our :term:`resource tree`, "
"each of these resource constructors represents a :term:`domain model` "
"object, so we'll call these constructors \"model constructors\". Both our"
" Page and Wiki constructors will be class objects.  A single instance of "
"the \"Wiki\" class will serve as a container for \"Page\" objects, which "
"will be instances of the \"Page\" class."
msgstr "：term： `resource tree &#39;を表すために：term：` ZODB`を使用しているので、これらのリソースコンストラクタはそれぞれ、：term： `domain model`オブジェクトを表していますので、これらのコンストラクタ\ &quot; PageとWikiのコンストラクタはどちらもクラスオブジェクトです。 \ &quot;Wiki \&quot;クラスの1つのインスタンスは\ &quot;Page \&quot;オブジェクトのコンテナとして機能し、\ &quot;Page \&quot;クラスのインスタンスになります。"

#: ../../tutorials/wiki/definingmodels.rst:21
msgid "Delete the database"
msgstr "データベースを削除する"

#: ../../tutorials/wiki/definingmodels.rst:23
msgid ""
"In the next step, we're going to remove the ``MyModel`` Python model "
"class from our ``models.py`` file.  Since this class is referred to "
"within our persistent storage (represented on disk as a file named "
"``Data.fs``), we'll have strange things happen the next time we want to "
"visit the application in a browser.  Remove the ``Data.fs`` from the "
"``tutorial`` directory before proceeding any further.  It's always fine "
"to do this as long as you don't care about the content of the database; "
"the database itself will be recreated as necessary."
msgstr "次のステップでは、 `` MyModel`` Pythonモデルクラスを `` models.py``ファイルから削除します。このクラスは永続ストレージ（ディスク上に `` Data.fs``という名前のファイルとして表現されています）内で参照されるため、次にブラウザでアプリケーションを訪問するときに奇妙なことが起こります。続行する前に `` tutorial``ディレクトリから `` Data.fs``を削除してください。データベースの内容を気にしない限り、これはいつでもうまくいきます。データベース自体は必要に応じて再作成されます。"

#: ../../tutorials/wiki/definingmodels.rst:33
msgid "Edit ``models.py``"
msgstr "`` models.py``を編集する"

#: ../../tutorials/wiki/definingmodels.rst:37
msgid ""
"There is nothing special about the filename ``models.py``.  A project may"
" have many models throughout its codebase in arbitrarily named files.  "
"Files implementing models often have ``model`` in their filenames or they"
" may live in a Python subpackage of your application package named "
"``models``, but this is only by convention."
msgstr "ファイル名 `` models.py``には何も特別なものはありません。プロジェクトのコードベースには、任意の名前のファイルで多くのモデルが存在します。モデルを実装しているファイルは、ファイル名に `` model``を持つことが多く、 `` models``という名前のアプリケーションパッケージのPythonサブパッケージに存在することもありますが、これは慣例によるものです。"

#: ../../tutorials/wiki/definingmodels.rst:43
msgid "Open ``tutorial/models.py`` file and edit it to look like the following:"
msgstr "`` tutorial / models.py``ファイルを開き、以下のように編集してください："

#: ../../tutorials/wiki/definingmodels.rst:49
msgid ""
"The first thing we want to do is remove the ``MyModel`` class from the "
"generated ``models.py`` file.  The ``MyModel`` class is only a sample and"
" we're not going to use it."
msgstr "まず最初に、生成された `` models.py``ファイルから `` MyModel``クラスを削除します。 `` MyModel``クラスは単なるサンプルであり、私たちはそれを使用しません。"

#: ../../tutorials/wiki/definingmodels.rst:53
msgid ""
"Then we'll add an import at the top for the "
":class:`persistent.Persistent` class.  We'll use this for a new ``Page`` "
"class in a moment."
msgstr "次に、：class： `persistent.Persistent`クラスの先頭にインポートを追加します。新しい `` Page``クラスにこれを使用します。"

#: ../../tutorials/wiki/definingmodels.rst:55
msgid ""
"Then we'll add a ``Wiki`` class.  We want it to inherit from the "
":class:`persistent.mapping.PersistentMapping` class because it provides "
"mapping behavior, and it makes sure that our Wiki page is stored as a "
"\"first-class\" persistent object in our ZODB database."
msgstr "次に、 `` Wiki``クラスを追加します。 ：class： `persistent.mapping.PersistentMapping`クラスはマッピング動作を提供するので、継承することが望ましく、WikiページがZODBデータベースの\&quot;ファーストクラス\ &quot;永続オブジェクトとして格納されるようにします。"

#: ../../tutorials/wiki/definingmodels.rst:60
msgid ""
"Our ``Wiki`` class should have two attributes set to ``None`` at class "
"scope: ``__parent__`` and ``__name__``.  If a model has a ``__parent__`` "
"attribute of ``None`` in a traversal-based :app:`Pyramid` application, it"
" means that it's the :term:`root` model.  The ``__name__`` of the root "
"model is also always ``None``."
msgstr "私たちの `` Wiki``クラスは、 `` __parent__``と `` __name__``という2つの属性をクラススコープで `` None``に設定しなければなりません。モデルがトラバーサルベースの：app： `Pyramid`アプリケーションで` `None``の` `__parent__``属性を持っている場合、それは：term：`ルート `モデルであることを意味します。ルートモデルの `` __name__``も常に `` None``です。"

#: ../../tutorials/wiki/definingmodels.rst:66
msgid ""
"Then we'll add a ``Page`` class.  This class should inherit from the "
":class:`persistent.Persistent` class.  We'll also give it an ``__init__``"
" method that accepts a single parameter named ``data``.  This parameter "
"will contain the :term:`reStructuredText` body representing the wiki page"
" content. Note that ``Page`` objects don't have an initial ``__name__`` "
"or ``__parent__`` attribute.  All objects in a traversal graph must have "
"a ``__name__`` and a ``__parent__`` attribute.  We don't specify these "
"here because both ``__name__`` and ``__parent__`` will be set by a "
":term:`view` function when a Page is added to our Wiki mapping."
msgstr "次に、 `` Page``クラスを追加します。このクラスは：class： `persistent.Persistent`クラスから継承する必要があります。また、 `` data``という名前の単一のパラメータを受け入れる `` __init__``メソッドを提供します。このパラメータには、wikiページの内容を表す：term： `reStructuredText`ボディが含まれます。 `` Page``オブジェクトには初期の `` __name__``や `` __parent__``属性がありません。トラバーサルグラフ内のすべてのオブジェクトには、 `` __name__``と `` __parent__``属性が必要です。これは、WikiマッピングにPageが追加されたときに：term： `view`関数によって` `__name__``と` `__parent__``の両方が設定されるため、ここでは指定しません。"

#: ../../tutorials/wiki/definingmodels.rst:76
msgid ""
"As a last step, we want to change the ``appmaker`` function in our "
"``models.py`` file so that the :term:`root` :term:`resource` of our "
"application is a Wiki instance.  We'll also slot a single page object "
"(the front page) into the Wiki within the ``appmaker``.  This will "
"provide :term:`traversal` a :term:`resource tree` to work against when it"
" attempts to resolve URLs to resources."
msgstr "最後のステップとして、アプリケーションの：term： `root`：term：` resource`がWikiのインスタンスになるように、 `` models.py``ファイルの `` appmaker``関数を変更します。また、「appmaker」内のWikiに単一のページオブジェクト（フロントページ）を挿入します。これは：term： `traversal` a：term：` resource tree`がURLをリソースに解決しようとするときに働くようにします。"

#: ../../tutorials/wiki/definingmodels.rst:84
msgid "View the application in a browser"
msgstr "ブラウザでアプリケーションを表示する"

#: ../../tutorials/wiki/definingmodels.rst:86
msgid ""
"We can't.  At this point, our system is in a \"non-runnable\" state; "
"we'll need to change view-related files in the next chapter to be able to"
" start the application successfully.  If you try to start the application"
" (See :ref:`wiki-start-the-application`), you'll wind up with a Python "
"traceback on your console that ends with this exception:"
msgstr "私たちはできません。この時点で、私たちのシステムは\ &quot;実行不可能な\&quot;状態にあります。次の章のビュー関連のファイルを変更して、アプリケーションを正常に起動できるようにする必要があります。アプリケーションを起動しようとすると（参照：ref： `wiki-start-the-application`）、あなたはこの例外で終わるコンソールにPythonのトレースバックを書き留めます："

#: ../../tutorials/wiki/definingmodels.rst:96
msgid "This will also happen if you attempt to run the tests."
msgstr "これは、テストを実行しようとした場合にも発生します。"

