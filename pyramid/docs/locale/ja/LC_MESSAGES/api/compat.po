# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/compat.rst:4
msgid ":mod:`pyramid.compat`"
msgstr "(機械翻訳) :mod:`pyramid.compat`"

#: ../../api/compat.rst:6
msgid ""
"The ``pyramid.compat`` module provides platform and version compatibility"
" for Pyramid and its add-ons across Python platform and version "
"differences.  APIs will be removed from this module over time as Pyramid "
"ceases to support systems which require compatibility imports."
msgstr "`` pyramid.compat``モジュールは、Pythonプラットフォームとバージョンの違いを超えて、Pyramidとそのアドオンのプラットフォームとバージョンの互換性を提供します。 Pyramidが互換性のあるインポートを必要とするシステムをサポートしなくなると、APIはこのモジュールから削除されます。"

#: of pyramid.compat.ascii_native_:1
msgid ""
"Python 3: If ``s`` is an instance of ``text_type``, return "
"``s.encode('ascii')``, otherwise return ``str(s, 'ascii', 'strict')``"
msgstr "Python 3： `` s``が `` text_type``のインスタンスであれば `` s.encode（ &#39;ascii&#39;） ``を返し、そうでない場合は `` str（s、 &#39;ascii&#39;、 &#39;strict&#39;） ` `"

#: of pyramid.compat.ascii_native_:4
msgid ""
"Python 2: If ``s`` is an instance of ``text_type``, return "
"``s.encode('ascii')``, otherwise return ``str(s)``"
msgstr "Python 2： `` s``が `` text_type``のインスタンスであれば、 `` s.encode（ &#39;ascii&#39;） ``を返し、そうでなければ `` str（s） ``"

#: ../../api/compat.rst:17
msgid ""
"Binary type for this platform.  For Python 3, it's ``bytes``.  For Python"
" 2, it's ``str``."
msgstr "このプラットフォームのバイナリタイプ。 Python 3では `` bytes``です。 Python 2の場合、それは `` str``です。"

#: of pyramid.compat.bytes_:1
msgid ""
"If ``s`` is an instance of ``text_type``, return ``s.encode(encoding, "
"errors)``, otherwise return ``s``"
msgstr "`` s``が `` text_type``のインスタンスであれば `` s.encode（encoding、errors） ``を返し、そうでなければ `` s``を返します"

#: ../../api/compat.rst:24
msgid ""
"Sequence of class types for this platform.  For Python 3, it's "
"``(type,)``.  For Python 2, it's ``(type, types.ClassType)``."
msgstr "このプラットフォームのクラス型のシーケンス。 Python 3では、 ``（type、） ``です。 Python 2では ``（type、types.ClassType） ``です。"

#: ../../api/compat.rst:29
msgid ""
"On Python 2, the ``ConfigParser`` module, on Python 3, the "
"``configparser`` module."
msgstr "Python 2では、 `` ConfigParser``モジュール、Python 3では `` configparser``モジュールです。"

#: ../../api/compat.rst:34
msgid ""
"On Python 2, the ``cgi.escape`` function, on Python 3, the "
"``html.escape`` function."
msgstr "Python 2では、 `` cgi.escape``関数、Python 3では `` html.escape``関数です。"

#: ../../api/compat.rst:39
msgid "Exec code in a compatible way on both Python 2 and 3."
msgstr "Python 2と3の両方で互換性のある方法でコードを実行します。"

#: ../../api/compat.rst:43
msgid ""
"On Python 2, the string value ``im_func``, on Python 3, the string value "
"``__func__``."
msgstr "Python 2では、文字列値 `` im_func``、Python 3では文字列値 `` __func__``を使用します。"

#: ../../api/compat.rst:48
msgid ""
"On Python 2, the ``raw_input`` function, on Python 3, the ``input`` "
"function."
msgstr "Python 2では、 `` raw_input``関数、Python 3では `` input``関数です。"

#: ../../api/compat.rst:53
msgid ""
"Sequence of integer types for this platform.  For Python 3, it's "
"``(int,)``.  For Python 2, it's ``(int, long)``."
msgstr "このプラットフォームの整数型のシーケンス。 Python 3では、 ``（int、） ``です。 Python 2では ``（int、long） ``です。"

#: ../../api/compat.rst:58
msgid ""
"Return ``True`` if ``v`` is a non-``str`` iterable on both Python 2 and "
"Python 3."
msgstr "`` v``がPython 2とPython 3の両方で非 `` str``反復可能なら `` True``を返します。"

#: ../../api/compat.rst:63
msgid "Return ``d.items()`` on Python 3, ``d.iteritems()`` on Python 2."
msgstr "Python 3では `` d.items（） ``を、Python 2では `` d.iteritems（） ``を返します。"

#: ../../api/compat.rst:67
msgid "Return ``d.values()`` on Python 3, ``d.itervalues()`` on Python 2."
msgstr "Python 3では `` d.values（） ``を、Python 2では `` d.itervalues（） ``を返します。"

#: ../../api/compat.rst:71
msgid "Return ``d.keys()`` on Python 3, ``d.iterkeys()`` on Python 2."
msgstr "Python 3で `` d.keys（） ``を、Python 2では `` d.iterkeys（） ``を返します。"

#: ../../api/compat.rst:75
msgid ""
"Long type for this platform.  For Python 3, it's ``int``.  For Python 2, "
"it's ``long``."
msgstr "このプラットフォームのロングタイプ。 Python 3では `` int``です。 Python 2では `` long``です。"

#: ../../api/compat.rst:80
msgid "Return ``list(map(v))`` on Python 3, ``map(v)`` on Python 2."
msgstr "Python 3では `` list（map（v）） ``を、Python 2では `` map（v） ``を返します。"

#: ../../api/compat.rst:84
msgid "``cPickle`` module if it exists, ``pickle`` module otherwise."
msgstr "`` cPickle``モジュールがあればそれを、 `` pickle``モジュールを返します。"

#: ../../api/compat.rst:88
msgid "``True`` if running on Python 3, ``False`` otherwise."
msgstr "Python 3では `` True``、そうでなければ `` False``です。"

#: ../../api/compat.rst:92
msgid "``True`` if running on PyPy, ``False`` otherwise."
msgstr "PyPy上で実行している場合は `` True``、そうでなければ `` False``です。"

#: ../../api/compat.rst:96
msgid ""
"Reraise an exception in a compatible way on both Python 2 and Python 3, "
"e.g. ``reraise(*sys.exc_info())``."
msgstr "`` reraise（* sys.exc_info（）） ``のように、Python 2とPython 3の両方で互換性のある例外を発生させます。"

#: ../../api/compat.rst:101
msgid ""
"Sequence of string types for this platform.  For Python 3, it's "
"``(str,)``.  For Python 2, it's ``(basestring,)``."
msgstr "このプラットフォームの文字列型のシーケンス。 Python 3では ``（str、） ``です。 Python 2では、 ``（ベースストリング） ``です。"

#: ../../api/compat.rst:106
msgid ""
"On Python 2, the ``Cookie.SimpleCookie`` class, on Python 3, the "
"``http.cookies.SimpleCookie`` module."
msgstr "Python 2では、 `` Cookie.SimpleCookie``クラス、Python 3では、 `` http.cookies.SimpleCookie``モジュールです。"

#: of pyramid.compat.text_:1
msgid ""
"If ``s`` is an instance of ``binary_type``, return ``s.decode(encoding, "
"errors)``, otherwise return ``s``"
msgstr "`` s``が `` binary_type``のインスタンスであれば `` s.decode（encoding、errors） ``を返し、そうでなければ `` s``を返します"

#: ../../api/compat.rst:113
msgid ""
"Text type for this platform.  For Python 3, it's ``str``.  For Python 2, "
"it's ``unicode``."
msgstr "このプラットフォームのテキストタイプ。 Python 3では `` str``です。 Python 2では、 `` unicode``です。"

#: of pyramid.compat.native_:1
msgid ""
"Python 3: If ``s`` is an instance of ``text_type``, return ``s``, "
"otherwise return ``str(s, encoding, errors)``"
msgstr "Python 3： `` s``が `` text_type``のインスタンスであれば `` s``を返し、そうでなければ `` str（s、encoding、errors）"

#: of pyramid.compat.native_:4
msgid ""
"Python 2: If ``s`` is an instance of ``text_type``, return "
"``s.encode(encoding, errors)``, otherwise return ``str(s)``"
msgstr "Python 2： `` s``が `` text_type``のインスタンスであれば、 `` s.encode（encoding、errors） ``を返し、そうでなければ `` str（s） ``"

#: ../../api/compat.rst:120
msgid "``urlparse`` module on Python 2, ``urllib.parse`` module on Python 3."
msgstr "Python 2の `` urlparse``モジュール、Python 3の `` urllib.parse``モジュールです。"

#: ../../api/compat.rst:124
msgid ""
"``urllib.quote`` function on Python 2, ``urllib.parse.quote`` function on"
" Python 3."
msgstr "Python 2の `` urllib.quote``関数、Python 3の `` urllib.parse.quote``関数です。"

#: ../../api/compat.rst:129
msgid ""
"``urllib.quote_plus`` function on Python 2, ``urllib.parse.quote_plus`` "
"function on Python 3."
msgstr "Python 2の `` urllib.quote_plus``関数、Python 3の `` urllib.parse.quote_plus``関数です。"

#: ../../api/compat.rst:134
msgid ""
"``urllib.unquote`` function on Python 2, ``urllib.parse.unquote`` "
"function on Python 3."
msgstr "Python 2の `` urllib.unquote``関数、Python 3の `` urllib.parse.unquote``関数です。"

#: ../../api/compat.rst:139
msgid ""
"``urllib.urlencode`` function on Python 2, ``urllib.parse.urlencode`` "
"function on Python 3."
msgstr "Python 2の `` urllib.urlencode``関数、Python 3の `` urllib.parse.urlencode``関数です。"

#: ../../api/compat.rst:144
msgid ""
"``urllib2.urlopen`` function on Python 2, ``urllib.request.urlopen`` "
"function on Python 3."
msgstr "Python 2の `` urllib2.urlopen``関数、Python 3の `` urllib.request.urlopen``関数です。"

#: ../../api/compat.rst:149
msgid ""
"On Python 2, return ``url_unquote(v).decode(encoding(encoding, "
"errors))``; on Python 3, return the result of ``urllib.parse.unquote``."
msgstr "Python 2では、 `` url_unquote（v）.decode（encoding（encoding、errors）） ``を返します。 Python 3では、 `` urllib.parse.unquote``の結果を返します。"

#: ../../api/compat.rst:154
msgid ""
"On Python 2, return ``native_(url_unquote_text_v, encoding, errors))``; "
"on Python 3, return the result of ``urllib.parse.unquote``."
msgstr "Python 2では `` native_（url_unquote_text_v、encoding、errors） ``を返します。 Python 3では、 `` urllib.parse.unquote``の結果を返します。"

