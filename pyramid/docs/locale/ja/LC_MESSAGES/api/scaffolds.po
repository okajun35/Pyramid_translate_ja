# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/scaffolds.rst:4
msgid ":mod:`pyramid.scaffolds`"
msgstr "(機械翻訳) :mod:`pyramid.scaffolds`"

#: of pyramid.scaffolds.Template:1
msgid ""
"Inherit from this base class and override methods to use the Pyramid "
"scaffolding system."
msgstr "この基底クラスを継承し、Pyramidスカフォールディングシステムを使用するメソッドをオーバーライドします。"

#: of pyramid.scaffolds.Template.post:1
msgid "Called after template is applied."
msgstr "テンプレートが適用された後に呼び出されます。"

#: of pyramid.scaffolds.Template.pre:1
msgid "Called before template is applied."
msgstr "テンプレートが適用される前に呼び出されます。"

#: of pyramid.scaffolds.Template.render_template:1
msgid ""
"Return a bytestring representing a templated file based on the input "
"(content) and the variable names defined (vars).  ``filename`` is used "
"for exception reporting."
msgstr "入力（内容）と定義された変数名（vars）に基づいてテンプレートファイルを表すバイトストリングを返します。 `` filename``は例外報告のために使われます。"

#: of pyramid.scaffolds.Template.template_dir:1
msgid ""
"Return the template directory of the scaffold.  By default, it returns "
"the value of ``os.path.join(self.module_dir(), self._template_dir)`` "
"(``self.module_dir()`` returns the module in which your subclass has been"
" defined).  If ``self._template_dir`` is a tuple this method just returns"
" the value instead of trying to construct a path.  If _template_dir is a "
"tuple, it should be a 2-element tuple: ``(package_name, "
"package_relative_path)``."
msgstr "足場のテンプレートディレクトリを返します。デフォルトでは、 `` os.path.join（self.module_dir（）、self._template_dir）の値を返します。 ``（ `` self.module_dir（） ``はあなたのサブクラスが定義されているモジュールを返します。 `` self._template_dir``がタプルの場合、このメソッドは単にパスを構築するのではなく値を返します。 _template_dirがタプルである場合、それは2要素タプルでなければなりません： ``（package_name、package_relative_path） ``。"

#: of pyramid.scaffolds.PyramidTemplate:1
msgid ""
"A class that can be used as a base class for Pyramid scaffolding "
"templates."
msgstr "Pyramidスキャフォールディングテンプレートの基本クラスとして使用できるクラス。"

#: of pyramid.scaffolds.PyramidTemplate.post:1
msgid ""
"Overrides :meth:`pyramid.scaffolds.template.Template.post`, to print "
"\"Welcome to Pyramid.  Sorry for the convenience.\" after a successful "
"scaffolding rendering."
msgstr "msgstr &quot;ピラミッドへようこそ。便利なのは残念ですが、スキャフォールディングレンダリングが成功した後に\&quot;印字するには、：meth： `pyramid.scaffolds.template.Template.post`をオーバーライドします。"

#: of pyramid.scaffolds.PyramidTemplate.pre:1
msgid ""
"Overrides :meth:`pyramid.scaffolds.template.Template.pre`, adding several"
" variables to the default variables list (including ``random_string``, "
"and ``package_logger``).  It also prevents common misnamings (such as "
"naming a package \"site\" or naming a package logger \"root\"."
msgstr "デフォルトの変数リスト（ `` random_string``、 `` package_logger``を含む）にいくつかの変数を追加します：meth： `pyramid.scaffolds.template.Template.pre`をオーバーライドします。また、パッケージの名前を &quot;site&quot;にするか、パッケージロガーに &quot;root&quot;という名前を付けるなど、一般的なmisnamingsも防ぎます。"

