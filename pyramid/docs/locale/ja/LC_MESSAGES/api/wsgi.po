# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/wsgi.rst:4
msgid ":mod:`pyramid.wsgi`"
msgstr "(機械翻訳) :mod:`pyramid.wsgi`"

#: of pyramid.wsgi.wsgiapp:1
msgid ""
"Decorator to turn a WSGI application into a :app:`Pyramid` :term:`view "
"callable`.  This decorator differs from the :func:`pyramid.wsgi.wsgiapp2`"
" decorator inasmuch as fixups of ``PATH_INFO`` and ``SCRIPT_NAME`` within"
" the WSGI environment *are not* performed before the application is "
"invoked."
msgstr "DecoratorはWSGIアプリケーションを：app： `Pyramid`：term：` view callable`に変換します。このデコレータは、アプリケーションが呼び出される前にWSGI環境*内の `` PATH_INFO``と `` SCRIPT_NAME``のフィックスアップが*実行されていないので、：func： `pyramid.wsgi.wsgiapp2`デコレータとは異なります。"

#: of pyramid.wsgi.wsgiapp:7
msgid "E.g., the following in a ``views.py`` module::"
msgstr "例えば、 `` views.py``モジュールで次のようにします::"

#: of pyramid.wsgi.wsgiapp:16 pyramid.wsgi.wsgiapp2:16
msgid ""
"Allows the following call to "
":meth:`pyramid.config.Configurator.add_view`::"
msgstr "次の呼び出しを許可します：meth： `pyramid.config.Configurator.add_view` ::"

#: of pyramid.wsgi.wsgiapp:22
msgid ""
"The ``wsgiapp`` decorator will convert the result of the WSGI application"
" to a :term:`Response` and return it to :app:`Pyramid` as if the WSGI app"
" were a :app:`Pyramid` view."
msgstr "`` wsgiapp`デコレータはWSGIアプリケーションの結果を：term： `Response`に変換し、WSGIアプリケーションが：app：` Pyramid`ビューであるかのようにapp： `Pyramid`に返します。"

#: of pyramid.wsgi.wsgiapp2:1
msgid ""
"Decorator to turn a WSGI application into a :app:`Pyramid` view callable."
"  This decorator differs from the :func:`pyramid.wsgi.wsgiapp` decorator "
"inasmuch as fixups of ``PATH_INFO`` and ``SCRIPT_NAME`` within the WSGI "
"environment *are* performed before the application is invoked."
msgstr "DecoratorはWSGIアプリケーションを：app： `Pyramid`ビューで呼び出し可能にします。このデコレータは、アプリケーションが呼び出される前にWSGI環境*内の `` PATH_INFO``と `` SCRIPT_NAME``のフィックスアップが実行されているので、：func： `pyramid.wsgi.wsgiapp`デコレータとは異なります。"

#: of pyramid.wsgi.wsgiapp2:7
msgid "E.g. the following in a ``views.py`` module::"
msgstr "たとえば、 `` views.py``モジュールで次のようにします::"

#: of pyramid.wsgi.wsgiapp2:22
msgid ""
"The ``wsgiapp2`` decorator will convert the result of the WSGI "
"application to a Response and return it to :app:`Pyramid` as if the WSGI "
"app were a :app:`Pyramid` view.  The ``SCRIPT_NAME`` and ``PATH_INFO`` "
"values present in the WSGI environment are fixed up before the "
"application is invoked.  In particular, a new WSGI environment is "
"generated, and the :term:`subpath` of the request passed to ``wsgiapp2`` "
"is used as the new request's ``PATH_INFO`` and everything preceding the "
"subpath is used as the ``SCRIPT_NAME``.  The new environment is passed to"
" the downstream WSGI application."
msgstr "`` wsgiapp2``デコレータはWSGIアプリケーションの結果をResponseに変換し、WSGIアプリケーションが：app： `Pyramid`ビューであるかのようにapp：` Pyramid`に返します。 WSGI環境にある `` SCRIPT_NAME``と `` PATH_INFO``の値は、アプリケーションが呼び出される前に修正されています。特に、新しいWSGI環境が生成され、 `` wsgiapp2``に渡されたリクエストの：term： `subpath`が新しいリクエストの` `PATH_INFO``として使われ、サブパスに先行する全てが` `` SCRIPT_NAME``。新しい環境は、下流のWSGIアプリケーションに渡されます。"

