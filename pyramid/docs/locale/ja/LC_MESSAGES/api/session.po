# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/session.rst:4
msgid ":mod:`pyramid.session`"
msgstr "(機械翻訳) :mod:`pyramid.session`"

#: of pyramid.session.signed_serialize:1
msgid ""
"Serialize any pickleable structure (``data``) and sign it using the "
"``secret`` (must be a string).  Return the serialization, which includes "
"the signature as its first 40 bytes. The ``signed_deserialize`` method "
"will deserialize such a value."
msgstr "pickleable構造体（ `` data``）をシリアライズし、 `` secret``（文字列でなければなりません）を使って署名します。署名を最初の40バイトとして含む直列化を返します。 `` signed_deserialize``メソッドはそのような値を逆直列化します。"

#: of pyramid.session.signed_serialize:6
msgid "This function is useful for creating signed cookies.  For example:"
msgstr "この関数は、署名付きのCookieを作成するのに便利です。例えば："

#: of pyramid.session.signed_deserialize:1
msgid ""
"Deserialize the value returned from ``signed_serialize``.  If the value "
"cannot be deserialized for any reason, a :exc:`ValueError` exception will"
" be raised."
msgstr "`` signed_serialize``から返された値をデシリアライズします。何らかの理由で値を逆シリアル化できない場合、a：exc： `ValueError`例外が送出されます。"

#: of pyramid.session.signed_deserialize:5
msgid ""
"This function is useful for deserializing a signed cookie value created "
"by ``signed_serialize``.  For example:"
msgstr "この関数は `` signed_serialize``で作成された署名されたクッキー値をデシリアライズするのに便利です。例えば："

#: of pyramid.session.SignedCookieSessionFactory:3
msgid ""
"Configure a :term:`session factory` which will provide signed cookie-"
"based sessions.  The return value of this function is a :term:`session "
"factory`, which may be provided as the ``session_factory`` argument of a "
":class:`pyramid.config.Configurator` constructor, or used as the "
"``session_factory`` argument of the "
":meth:`pyramid.config.Configurator.set_session_factory` method."
msgstr "署名付きのCookieベースのセッションを提供するa：term： `session factory`を設定します。この関数の戻り値は、：term： `session factory`です。これは：class：` pyramid.config.Configurator`コンストラクタの `` session_factory``引数として提供されるか、 `` session_factory``として使われます。 `：meth：` pyramid.config.Configurator.set_session_factory`メソッドの引数です。"

#: of pyramid.session.BaseCookieSessionFactory:10
#: pyramid.session.SignedCookieSessionFactory:12
#: pyramid.session.UnencryptedCookieSessionFactoryConfig:17
msgid ""
"The session factory returned by this function will create sessions which "
"are limited to storing fewer than 4000 bytes of data (as the payload must"
" fit into a single cookie)."
msgstr "この関数によって返されるセッションファクトリは、ペイロードが単一のクッキーに収まる必要があるため、4000バイト未満のデータを格納することに限定されたセッションを作成します。"

#: of pyramid.session.BaseCookieSessionFactory:20
#: pyramid.session.SignedCookieSessionFactory:16
#: pyramid.session.UnencryptedCookieSessionFactoryConfig:21
msgid "Parameters:"
msgstr "パラメーター："

#: of pyramid.session.SignedCookieSessionFactory:23
#: pyramid.session.UnencryptedCookieSessionFactoryConfig:24
msgid "``secret``"
msgstr "「秘密」"

#: of pyramid.session.SignedCookieSessionFactory:19
msgid ""
"A string which is used to sign the cookie. The secret should be at least "
"as long as the block size of the selected hash algorithm. For ``sha512`` "
"this would mean a 512 bit (64 character) secret.  It should be unique "
"within the set of secret values provided to Pyramid for its various "
"subsystems (see :ref:`admonishment_against_secret_sharing`)."
msgstr "クッキーに署名するために使用される文字列。秘密は、少なくとも選択されたハッシュアルゴリズムのブロックサイズと同じ長さでなければなりません。 `` sha512``の場合、これは512ビット（64文字）の秘密を意味します。さまざまなサブシステムのためにPyramidに提供される秘密値のセット内で一意でなければなりません（ref： `admonishment_against_secret_sharing`参照）。"

#: of pyramid.session.SignedCookieSessionFactory:27
msgid "``hashalg``"
msgstr "「ハハハル」"

#: of pyramid.session.SignedCookieSessionFactory:26
msgid ""
"The HMAC digest algorithm to use for signing. The algorithm must be "
"supported by the :mod:`hashlib` library. Default: ``'sha512'``."
msgstr "署名に使用するHMACダイジェストアルゴリズム。アルゴリズムは：mod： `hashlib`ライブラリでサポートされていなければなりません。デフォルト： `` &#39;sha512&#39;``。"

#: of pyramid.session.SignedCookieSessionFactory:33
msgid "``salt``"
msgstr "``塩 ``"

#: of pyramid.session.SignedCookieSessionFactory:30
msgid ""
"A namespace to avoid collisions between different uses of a shared "
"secret. Reusing a secret for different parts of an application is "
"strongly discouraged (see :ref:`admonishment_against_secret_sharing`). "
"Default: ``'pyramid.session.'``."
msgstr "共有秘密の異なる使用の間の衝突を避けるための名前空間。アプリケーションのさまざまな部分に対して秘密を再利用することは強く推奨されません（ref： `admonishment_against_secret_sharing`参照）。デフォルト： `` &#39;pyramid.session.&#39;``。"

#: of pyramid.session.BaseCookieSessionFactory:29
#: pyramid.session.SignedCookieSessionFactory:36
#: pyramid.session.UnencryptedCookieSessionFactoryConfig:30
msgid "``cookie_name``"
msgstr "`` cookie_name``"

#: of pyramid.session.BaseCookieSessionFactory:29
#: pyramid.session.SignedCookieSessionFactory:36
msgid "The name of the cookie used for sessioning. Default: ``'session'``."
msgstr "セッションに使用されるCookieの名前。デフォルト： `` &#39;session&#39;``。"

#: of pyramid.session.BaseCookieSessionFactory:33
#: pyramid.session.SignedCookieSessionFactory:40
msgid "``max_age``"
msgstr "`` max_age``"

#: of pyramid.session.BaseCookieSessionFactory:32
#: pyramid.session.SignedCookieSessionFactory:39
#: pyramid.session.UnencryptedCookieSessionFactoryConfig:33
msgid ""
"The maximum age of the cookie used for sessioning (in seconds). Default: "
"``None`` (browser scope)."
msgstr "セッションに使用されたクッキーの最大経過時間（秒単位）。デフォルト： `` None``（ブラウザスコープ）。"

#: of pyramid.session.BaseCookieSessionFactory:36
#: pyramid.session.SignedCookieSessionFactory:43
msgid "``path``"
msgstr "``パス ``"

#: of pyramid.session.BaseCookieSessionFactory:36
#: pyramid.session.SignedCookieSessionFactory:43
msgid "The path used for the session cookie. Default: ``'/'``."
msgstr "セッションCookieに使用されるパス。デフォルト： `` / &#39;``。"

#: of pyramid.session.BaseCookieSessionFactory:39
#: pyramid.session.SignedCookieSessionFactory:46
msgid "``domain``"
msgstr "「ドメイン」"

#: of pyramid.session.BaseCookieSessionFactory:39
#: pyramid.session.SignedCookieSessionFactory:46
#: pyramid.session.UnencryptedCookieSessionFactoryConfig:40
msgid "The domain used for the session cookie.  Default: ``None`` (no domain)."
msgstr "セッションCookieに使用されるドメイン。デフォルト： `` None``（ドメインなし）。"

#: of pyramid.session.BaseCookieSessionFactory:42
#: pyramid.session.SignedCookieSessionFactory:49
msgid "``secure``"
msgstr "``安全 ``"

#: of pyramid.session.BaseCookieSessionFactory:42
#: pyramid.session.SignedCookieSessionFactory:49
msgid "The 'secure' flag of the session cookie. Default: ``False``."
msgstr "セッションクッキーの &#39;安全な&#39;フラグ。デフォルト： `` False``。"

#: of pyramid.session.BaseCookieSessionFactory:46
#: pyramid.session.SignedCookieSessionFactory:53
msgid "``httponly``"
msgstr "`` httponly``"

#: of pyramid.session.BaseCookieSessionFactory:45
#: pyramid.session.SignedCookieSessionFactory:52
msgid ""
"Hide the cookie from Javascript by setting the 'HttpOnly' flag of the "
"session cookie. Default: ``False``."
msgstr "セッションCookieの &#39;HttpOnly&#39;フラグを設定して、JavascriptからCookieを非表示にします。デフォルト： `` False``。"

#: of pyramid.session.BaseCookieSessionFactory:53
#: pyramid.session.SignedCookieSessionFactory:60
#: pyramid.session.UnencryptedCookieSessionFactoryConfig:27
msgid "``timeout``"
msgstr "``タイムアウト ``"

#: of pyramid.session.BaseCookieSessionFactory:49
#: pyramid.session.SignedCookieSessionFactory:56
msgid ""
"A number of seconds of inactivity before a session times out. If ``None``"
" then the cookie never expires. This lifetime only applies to the *value*"
" within the cookie. Meaning that if the cookie expires due to a lower "
"``max_age``, then this setting has no effect. Default: ``1200``."
msgstr "セッションがタイムアウトするまでの、何秒もの非アクティブ時間。 `` None``の場合、クッキーは期限切れになりません。この生存期間は、クッキー内の* value *にのみ適用されます。つまり、 `` max_age``が低いためにクッキーが失効した場合、この設定は効果がありません。デフォルト： `` 1200``。"

#: of pyramid.session.BaseCookieSessionFactory:70
#: pyramid.session.SignedCookieSessionFactory:77
msgid "``reissue_time``"
msgstr "`` reissue_time``"

#: of pyramid.session.SignedCookieSessionFactory:63
msgid ""
"The number of seconds that must pass before the cookie is automatically "
"reissued as the result of accessing the session. The duration is measured"
" as the number of seconds since the last session cookie was issued and "
"'now'.  If this value is ``0``, a new cookie will be reissued on every "
"request accessing the session. If ``None`` then the cookie's lifetime "
"will never be extended."
msgstr "セッションにアクセスした結果、クッキーが自動的に再発行されるまでの秒数。継続時間は、最後のセッションCookieが発行されてからの秒数と &#39;now&#39;として測定されます。この値が `` 0``の場合、セッションにアクセスするすべてのリクエストで新しいクッキーが再発行されます。 `` None``の場合、クッキーの存続期間は決して延長されません。"

#: of pyramid.session.BaseCookieSessionFactory:63
#: pyramid.session.SignedCookieSessionFactory:70
msgid ""
"A good rule of thumb: if you want auto-expired cookies based on "
"inactivity: set the ``timeout`` value to 1200 (20 mins) and set the "
"``reissue_time`` value to perhaps a tenth of the ``timeout`` value (120 "
"or 2 mins).  It's nonsensical to set the ``timeout`` value lower than the"
" ``reissue_time`` value, as the ticket will never be reissued. However, "
"such a configuration is not explicitly prevented."
msgstr "経験則の中で、非アクティブに基づいて自動期限切れのクッキーが必要な場合： `` timeout``値を1200（20分）に設定し、 `` reissue_time``値をおそらく `` timeout`の10分の1に設定してください`値（120分または2分）。チケットが再発行されないので、 `` reissue_time``値よりも `` timeout``値を低く設定するのは無意味です。しかしながら、そのような構成は明白に防止されていない。"

#: of pyramid.session.BaseCookieSessionFactory:70
#: pyramid.session.SignedCookieSessionFactory:77
msgid "Default: ``0``."
msgstr "デフォルト： `` 0``。"

#: of pyramid.session.BaseCookieSessionFactory:74
#: pyramid.session.SignedCookieSessionFactory:81
msgid "``set_on_exception``"
msgstr "`` set_on_exception``"

#: of pyramid.session.BaseCookieSessionFactory:73
#: pyramid.session.SignedCookieSessionFactory:80
msgid ""
"If ``True``, set a session cookie even if an exception occurs while "
"rendering a view. Default: ``True``."
msgstr "`` True``の場合、ビューのレンダリング中に例外が発生した場合でもセッションクッキーを設定します。デフォルト： `` True``です。"

#: of pyramid.session.BaseCookieSessionFactory:26
#: pyramid.session.SignedCookieSessionFactory:88
msgid "``serializer``"
msgstr "「シリアライザ」"

#: of pyramid.session.SignedCookieSessionFactory:84
msgid ""
"An object with two methods: ``loads`` and ``dumps``.  The ``loads`` "
"method should accept bytes and return a Python object.  The ``dumps`` "
"method should accept a Python object and return bytes.  A ``ValueError`` "
"should be raised for malformed inputs.  If a serializer is not passed, "
"the :class:`pyramid.session.PickleSerializer` serializer will be used."
msgstr "オブジェクトには ``読み込み ``と ``ダンプ ``の2つのメソッドがあります。 `` loads``メソッドはバイトを受け取り、Pythonオブジェクトを返すべきです。 `` dumps``メソッドはPythonオブジェクトを受け入れ、バイトを返すべきです。不正な入力に対しては、 &quot;ValueError&quot;を生成する必要があります。シリアライザが渡されない場合、：class： `pyramid.session.PickleSerializer`シリアライザが使用されます。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:1
msgid ""
"Use :func:`pyramid.session.SignedCookieSessionFactory` instead. Caveat: "
"Cookies generated using ``SignedCookieSessionFactory`` are not compatible"
" with cookies generated using ``UnencryptedCookieSessionFactory``, so "
"existing user session data will be destroyed if you switch to it."
msgstr "代わりに：func： `pyramid.session.SignedCookieSessionFactory`を代わりに使用してください。警告： `` SignedCookieSessionFactory``を使って生成されたクッキーは、 `` UnencryptedCookieSessionFactory``を使って生成されたクッキーと互換性がありませんので、既存のユーザセッションデータは、それに切り替えると破棄されます。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:8
msgid ""
"Configure a :term:`session factory` which will provide unencrypted (but "
"signed) cookie-based sessions.  The return value of this function is a "
":term:`session factory`, which may be provided as the ``session_factory``"
" argument of a :class:`pyramid.config.Configurator` constructor, or used "
"as the ``session_factory`` argument of the "
":meth:`pyramid.config.Configurator.set_session_factory` method."
msgstr "暗号化されていない（しかし署名された）クッキーベースのセッションを提供するa：term： `session factory`を設定します。この関数の戻り値は、：term： `session factory`です。これは：class：` pyramid.config.Configurator`コンストラクタの `` session_factory``引数として提供されるか、 `` session_factory``として使われます。 `：meth：` pyramid.config.Configurator.set_session_factory`メソッドの引数です。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:24
msgid "A string which is used to sign the cookie."
msgstr "クッキーに署名するために使用される文字列。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:27
msgid "A number of seconds of inactivity before a session times out."
msgstr "セッションがタイムアウトするまでの、何秒もの非アクティブ時間。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:30
msgid "The name of the cookie used for sessioning."
msgstr "セッションに使用されるCookieの名前。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:34
msgid "``cookie_max_age``"
msgstr "`` cookie_max_age``"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:37
msgid "``cookie_path``"
msgstr "`` cookie_path``"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:37
msgid "The path used for the session cookie."
msgstr "セッションCookieに使用されるパス。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:40
msgid "``cookie_domain``"
msgstr "`` cookie_domain``"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:43
msgid "``cookie_secure``"
msgstr "`` cookie_secure``"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:43
msgid "The 'secure' flag of the session cookie."
msgstr "セッションクッキーの &#39;安全な&#39;フラグ。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:46
msgid "``cookie_httponly``"
msgstr "`` cookie_httponly``"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:46
msgid "The 'httpOnly' flag of the session cookie."
msgstr "セッションCookieの &#39;httpOnly&#39;フラグ。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:50
msgid "``cookie_on_exception``"
msgstr "`` cookie_on_exception``"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:49
msgid ""
"If ``True``, set a session cookie even if an exception occurs while "
"rendering a view."
msgstr "`` True``の場合、ビューのレンダリング中に例外が発生した場合でもセッションクッキーを設定します。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:55
msgid "``signed_serialize``"
msgstr "`` signed_serialize``"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:53
msgid ""
"A callable which takes more or less arbitrary Python data structure and a"
" secret and returns a signed serialization in bytes. Default: "
"``signed_serialize`` (using pickle)."
msgstr "多かれ少なかれ任意のPythonデータ構造とシークレットを取り、符号付きシリアル化をバイト単位で返します。デフォルト： `` signed_serialize``（pickleを使用）。"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:59
msgid "``signed_deserialize``"
msgstr "`` signed_deserialize``"

#: of pyramid.session.UnencryptedCookieSessionFactoryConfig:58
msgid ""
"A callable which takes a signed and serialized data structure in bytes "
"and a secret and returns the original data structure if the signature is "
"valid. Default: ``signed_deserialize`` (using pickle)."
msgstr "署名付きでシリアライズされたデータ構造体（バイト単位）とシークレットを取得し、署名が有効な場合は元のデータ構造体を返す呼び出し可能オブジェクト。デフォルト： `` signed_deserialize``（pickleを使用）。"

#: of pyramid.session.BaseCookieSessionFactory:3
msgid ""
"Configure a :term:`session factory` which will provide cookie-based "
"sessions.  The return value of this function is a :term:`session "
"factory`, which may be provided as the ``session_factory`` argument of a "
":class:`pyramid.config.Configurator` constructor, or used as the "
"``session_factory`` argument of the "
":meth:`pyramid.config.Configurator.set_session_factory` method."
msgstr "cookieベースのセッションを提供するa：term： `session factory`を設定します。この関数の戻り値は、：term： `session factory`です。これは：class：` pyramid.config.Configurator`コンストラクタの `` session_factory``引数として提供されるか、 `` session_factory``として使われます。 `：meth：` pyramid.config.Configurator.set_session_factory`メソッドの引数です。"

#: of pyramid.session.BaseCookieSessionFactory:23
msgid ""
"An object with two methods: ``loads`` and ``dumps``.  The ``loads`` "
"method should accept bytes and return a Python object.  The ``dumps`` "
"method should accept a Python object and return bytes.  A ``ValueError`` "
"should be raised for malformed inputs."
msgstr "オブジェクトには ``読み込み ``と ``ダンプ ``の2つのメソッドがあります。 `` loads``メソッドはバイトを受け取り、Pythonオブジェクトを返すべきです。 `` dumps``メソッドはPythonオブジェクトを受け入れ、バイトを返すべきです。不正な入力に対しては、 &quot;ValueError&quot;を生成する必要があります。"

#: of pyramid.session.BaseCookieSessionFactory:56
msgid ""
"The number of seconds that must pass before the cookie is automatically "
"reissued as the result of a request which accesses the session. The "
"duration is measured as the number of seconds since the last session "
"cookie was issued and 'now'.  If this value is ``0``, a new cookie will "
"be reissued on every request accessing the session. If ``None`` then the "
"cookie's lifetime will never be extended."
msgstr "クッキーがセッションにアクセスする要求の結果として自動的に再発行されるまでに経過する必要のある秒数。継続時間は、最後のセッションCookieが発行されてからの秒数と &#39;now&#39;として測定されます。この値が `` 0``の場合、セッションにアクセスするすべてのリクエストで新しいクッキーが再発行されます。 `` None``の場合、クッキーの存続期間は決して延長されません。"

#: of pyramid.session.PickleSerializer:1
msgid "A serializer that uses the pickle protocol to dump Python data to bytes."
msgstr "pickleプロトコルを使用してPythonデータをバイトにダンプするシリアライザ。"

#: of pyramid.session.PickleSerializer:4
msgid "This is the default serializer used by Pyramid."
msgstr "これはPyramidで使用されるデフォルトのシリアライザです。"

#: of pyramid.session.PickleSerializer:6
msgid ""
"``protocol`` may be specified to control the version of pickle used. "
"Defaults to :attr:`pickle.HIGHEST_PROTOCOL`."
msgstr "使用するpickleのバージョンを制御するために `` protocol``を指定することができます。デフォルトは：attr： `pickle.HIGHEST_PROTOCOL`です。"

