# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/location.rst:4
msgid ":mod:`pyramid.location`"
msgstr "(機械翻訳) :mod:`pyramid.location`"

#: of pyramid.location.lineage:1
msgid ""
"Return a generator representing the :term:`lineage` of the "
":term:`resource` object implied by the ``resource`` argument.  The "
"generator first returns ``resource`` unconditionally.  Then, if "
"``resource`` supplies a ``__parent__`` attribute, return the resource "
"represented by ``resource.__parent__``.  If *that* resource has a "
"``__parent__`` attribute, return that resource's parent, and so on, until"
" the resource being inspected either has no ``__parent__`` attribute or "
"which has a ``__parent__`` attribute of ``None``. For example, if the "
"resource tree is::"
msgstr "`` resource``引数によって暗示される：term： `resource`オブジェクトの：term：` lineage`を表すジェネレータを返します。ジェネレータは、無条件に `` resource``を返します。次に、 `` resource``が `` __parent__``属性を提供する場合、 `` resource .__ parent__``で表されるリソースを返します。 *リソースに `` __parent__``属性がある場合、そのリソースの親などを返します。検査対象リソースに `` __parent__``属性がないか、 `` __parent__``属性が ``なし。たとえば、リソースツリーが::"

#: of pyramid.location.lineage:15
msgid ""
"Calling ``lineage(thing2)`` will return a generator.  When we turn it "
"into a list, we will get::"
msgstr "`` lineage（thing2） `&#39;を呼び出すとジェネレータが返されます。リストにすると、次のようになります::"

#: of pyramid.location.inside:1
msgid ""
"Is ``resource1`` 'inside' ``resource2``?  Return ``True`` if so, else "
"``False``."
msgstr "`` resource2``の中に `` resource1``はありますか？ `` True``を返し、そうでなければ `` False``を返します。"

#: of pyramid.location.inside:4
msgid ""
"``resource1`` is 'inside' ``resource2`` if ``resource2`` is a "
":term:`lineage` ancestor of ``resource1``.  It is a lineage ancestor if "
"its parent (or one of its parent's parents, etc.) is an ancestor."
msgstr "`` resource2``が `` resource1``の `：term：` lineage`の祖先である場合、 `` resource1``は `` resource2``の中にあります。親（または親の親など）が祖先である場合、それは系統の祖先です。"

