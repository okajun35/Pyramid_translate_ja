# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/static.rst:4
msgid ":mod:`pyramid.static`"
msgstr "(機械翻訳) :mod:`pyramid.static`"

#: of pyramid.static.static_view:1
msgid ""
"An instance of this class is a callable which can act as a :app:`Pyramid`"
" :term:`view callable`; this view will serve static files from a "
"directory on disk based on the ``root_dir`` you provide to its "
"constructor."
msgstr "このクラスのインスタンスは：app： `Pyramid`：term：` view callable`のように動作する呼び出し可能オブジェクトです。このビューは、コンストラクタに提供する `` root_dir``に基づいてディスク上のディレクトリから静的ファイルを提供します。"

#: of pyramid.static.static_view:6
msgid ""
"The directory may contain subdirectories (recursively); the static view "
"implementation will descend into these directories as necessary based on "
"the components of the URL in order to resolve a path into a response."
msgstr "ディレクトリには、サブディレクトリが含まれている可能性があります（再帰的に）。静的ビュー実装は、パスを応答に解決するためにURLのコンポーネントに基づいて必要に応じてこれらのディレクトリに降下します。"

#: of pyramid.static.static_view:11
msgid ""
"You may pass an absolute or relative filesystem path or a :term:`asset "
"specification` representing the directory containing static files as the "
"``root_dir`` argument to this class' constructor."
msgstr "絶対ファイルシステムパスまたは相対ファイルシステムパス、あるいは：class：constructorへの `` root_dir``引数として静的ファイルを含むディレクトリを表す：term： `asset specification`を渡すことができます。"

#: of pyramid.static.static_view:16
msgid ""
"If the ``root_dir`` path is relative, and the ``package_name`` argument "
"is ``None``, ``root_dir`` will be considered relative to the directory in"
" which the Python file which *calls* ``static`` resides.  If the "
"``package_name`` name argument is provided, and a relative ``root_dir`` "
"is provided, the ``root_dir`` will be considered relative to the Python "
":term:`package` specified by ``package_name`` (a dotted path to a Python "
"package)."
msgstr "`` root_dir``パスが相対パスで、 `` package_name``引数が `` None``の場合、 `` root_dir``は静的ファイルを呼び出すPythonファイル``が存在します。 `` package_name``引数が指定され、 `` root_dir``が提供されている場合、 `` root_dir``は `` package_name``で指定されたPython：term： `package`に相対的に考慮されます。 Pythonパッケージへの点線のパス）。"

#: of pyramid.static.static_view:24
msgid ""
"``cache_max_age`` influences the ``Expires`` and ``Max-Age`` response "
"headers returned by the view (default is 3600 seconds or one hour)."
msgstr "`` cache_max_age``はビューによって返される `` Expires``と `` Max-Age``レスポンスヘッダに影響を与えます（デフォルトは3600秒か1時間です）。"

#: of pyramid.static.static_view:28
msgid ""
"``use_subpath`` influences whether ``request.subpath`` will be used as "
"``PATH_INFO`` when calling the underlying WSGI application which actually"
" serves the static files.  If it is ``True``, the static application will"
" consider ``request.subpath`` as ``PATH_INFO`` input.  If it is "
"``False``, the static application will consider "
"request.environ[``PATH_INFO``] as ``PATH_INFO`` input. By default, this "
"is ``False``."
msgstr "`` use_subpath``は、実際に静的ファイルを提供する基盤となるWSGIアプリケーションを呼び出すときに、 `` `` `` ``要求パス ``が `` PATH_INFO``として使われるかどうかに影響します。 `` True``の場合、静的アプリケーションは `` request.subpath``を `` PATH_INFO``入力とみなします。 `` False``の場合、静的アプリケーションはrequest.environ [`` PATH_INFO``]を `` PATH_INFO``入力と見なします。デフォルトでは、これは `` False``です。"

#: of pyramid.static.static_view:37
msgid ""
"If the ``root_dir`` is relative to a :term:`package`, or is a "
":term:`asset specification` the :app:`Pyramid` "
":class:`pyramid.config.Configurator` method can be used to override "
"assets within the named ``root_dir`` package-relative directory. However,"
" if the ``root_dir`` is absolute, configuration will not be able to "
"override the assets it contains."
msgstr "`` root_dir``がa：term： `package`に相対的であるか、または：term：` asset specification`：app： `Pyramid`：class：` pyramid.config.Configurator`メソッドを使用して、名前が付けられた `` root_dir``パッケージ相対ディレクトリ内のアセットをオーバーライドします。ただし、 `` root_dir``が絶対的なものであれば、設定はそこに含まれるアセットを上書きすることができません。"

#: of pyramid.static.ManifestCacheBuster:1
msgid ""
"An implementation of :class:`~pyramid.interfaces.ICacheBuster` which uses"
" a supplied manifest file to map an asset path to a cache-busted version "
"of the path."
msgstr "：class： `〜pyramid.interfaces.ICacheBuster`の実装で、指定されたマニフェストファイルを使用してアセットパスをパスのキャッシュで破棄されたバージョンにマッピングします。"

#: of pyramid.static.ManifestCacheBuster:5
msgid ""
"The ``manifest_spec`` can be an absolute path or a :term:`asset "
"specification` pointing to a package-relative file."
msgstr "`` manifest_spec``はパッケージ相対ファイルを指し示す絶対パスかa：term： `asset specification &#39;です。"

#: of pyramid.static.ManifestCacheBuster:8
msgid ""
"The manifest file is expected to conform to the following simple JSON "
"format:"
msgstr "マニフェストファイルは、次の単純なJSON形式に準拠する必要があります。"

#: of pyramid.static.ManifestCacheBuster:18
msgid ""
"By default, it is a JSON-serialized dictionary where the keys are the "
"source asset paths used in calls to "
":meth:`~pyramid.request.Request.static_url`. For example:"
msgstr "デフォルトでは、キーは、：meth： `〜pyramid.request.Request.static_url`への呼び出しで使用されるソースアセットパスであるJSON連載辞書です。例えば："

#: of pyramid.static.ManifestCacheBuster:27
msgid ""
"The file format and location can be changed by subclassing and overriding"
" :meth:`.parse_manifest`."
msgstr "ファイル形式と場所は、meth： `.parse_manifest`のサブクラス化とオーバーライドによって変更できます。"

#: of pyramid.static.ManifestCacheBuster:30
msgid "If a path is not found in the manifest it will pass through unchanged."
msgstr "マニフェストにパスが見つからない場合は、パスは変更されません。"

#: of pyramid.static.ManifestCacheBuster:32
msgid ""
"If ``reload`` is ``True`` then the manifest file will be reloaded when "
"changed. It is not recommended to leave this enabled in production."
msgstr "`` reload``が `` True``の場合、マニフェストファイルは変更時に再ロードされます。本稼働環境でこれを有効のままにすることはお勧めしません。"

#: of pyramid.static.ManifestCacheBuster:35
msgid ""
"If the manifest file cannot be found on disk it will be treated as an "
"empty mapping unless ``reload`` is ``False``."
msgstr "マニフェストファイルがディスク上に見つからない場合、 `` reload``が `` False``でない限り、空のマッピングとして扱われます。"

#: of pyramid.static.ManifestCacheBuster.exists:1
msgid "Test whether a path exists.  Returns False for broken symbolic links"
msgstr "パスが存在するかどうかをテストします。壊れたシンボリックリンクに対してFalseを返します。"

#: of pyramid.static.ManifestCacheBuster.getmtime:1
msgid "Return the last modification time of a file, reported by os.stat()."
msgstr "os.stat（）によって報告されたファイルの最終更新時刻を返します。"

#: of pyramid.static.ManifestCacheBuster.manifest:1
msgid "The current manifest dictionary."
msgstr "現在のマニフェスト辞書。"

#: of pyramid.static.ManifestCacheBuster.parse_manifest:1
msgid ""
"Parse the ``content`` read from the ``manifest_path`` into a dictionary "
"mapping."
msgstr "`` manifest_path``から読み込んだ `` content``を辞書マッピングに解析します。"

#: of pyramid.static.ManifestCacheBuster.parse_manifest:4
msgid ""
"Subclasses may override this method to use something other than "
"``json.loads`` to load any type of file format and return a conforming "
"dictionary."
msgstr "サブクラスは、このメソッドをオーバーライドして、 `` json.loads``以外の形式を使用して任意のタイプのファイル形式をロードし、適合する辞書を返すことができます。"

#: of pyramid.static.QueryStringCacheBuster:1
msgid ""
"An implementation of :class:`~pyramid.interfaces.ICacheBuster` which adds"
" a token for cache busting in the query string of an asset URL."
msgstr "：class： `〜pyramid.interfaces.ICacheBuster`の実装で、アセットURLのクエリ文字列にキャッシュ破棄用のトークンを追加します。"

#: of pyramid.static.QueryStringCacheBuster:4
#: pyramid.static.QueryStringConstantCacheBuster:7
msgid ""
"The optional ``param`` argument determines the name of the parameter "
"added to the query string and defaults to ``'x'``."
msgstr "オプションの `` param``引数は、クエリ文字列に追加されるパラメータの名前を決定し、デフォルトは `` x&#39;``です。"

#: of pyramid.static.QueryStringCacheBuster:7
msgid ""
"To use this class, subclass it and provide a ``tokenize`` method which "
"accepts ``request, pathspec, kw`` and returns a token."
msgstr "このクラスを使用するには、サブクラス化し、 `` request、pathspec、kw``を受け取り、トークンを返す `` tokenize``メソッドを提供します。"

#: of pyramid.static.QueryStringConstantCacheBuster:1
msgid ""
"An implementation of :class:`~pyramid.interfaces.ICacheBuster` which adds"
" an arbitrary token for cache busting in the query string of an asset "
"URL."
msgstr "：class： `〜pyramid.interfaces.ICacheBuster`の実装で、アセットURLのクエリ文字列にキャッシュ破棄のための任意のトークンを追加します。"

#: of pyramid.static.QueryStringConstantCacheBuster:4
msgid ""
"The ``token`` parameter is the token string to use for cache busting and "
"will be the same for every request."
msgstr "`` token``パラメータは、キャッシュ破棄に使用するトークン文字列であり、すべての要求で同じになります。"

