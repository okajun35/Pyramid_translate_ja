# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/authorization.rst:4
msgid ":mod:`pyramid.authorization`"
msgstr "(機械翻訳) :mod:`pyramid.authorization`"

#: of pyramid.authorization.ACLAuthorizationPolicy:1
msgid ""
"An :term:`authorization policy` which consults an :term:`ACL` object "
"attached to a :term:`context` to determine authorization information "
"about a :term:`principal` or multiple principals. If the context is part "
"of a :term:`lineage`, the context's parents are consulted for ACL "
"information too.  The following is true about this security policy."
msgstr "a：term： `認証ポリシー`：a term： `principal`または複数のプリンシパルに関する認可情報を決定するためにa：term：` context`にアタッチされた：term： `ACL`オブジェクトを参照します。コンテキストが：term： `lineage`の一部である場合、ACL情報についてもコンテキストの親が参照されます。このセキュリティポリシーについて次のことが当てはまります。"

#: of pyramid.authorization.ACLAuthorizationPolicy:8
msgid ""
"When checking whether the 'current' user is permitted (via the "
"``permits`` method), the security policy consults the ``context`` for an "
"ACL first.  If no ACL exists on the context, or one does exist but the "
"ACL does not explicitly allow or deny access for any of the effective "
"principals, consult the context's parent ACL, and so on, until the "
"lineage is exhausted or we determine that the policy permits or denies."
msgstr "&#39;現在の&#39;ユーザが（ `` permits``メソッドで）許可されているかどうかをチェックするとき、セキュリティポリシーは最初にACLの `` context``を調べます。コンテキストにACLが存在しない場合、またはACLが存在していても、ACLが有効なプリンシパルに対して明示的に許可または拒否していない場合は、コンテキストの親ACLを参照して、系統が使い果たされるか、許可または拒否。"

#: of pyramid.authorization.ACLAuthorizationPolicy:16
msgid ""
"During this processing, if any :data:`pyramid.security.Deny` ACE is found"
" matching any principal in ``principals``, stop processing by returning "
"an :class:`pyramid.security.ACLDenied` instance (equals ``False``) "
"immediately.  If any :data:`pyramid.security.Allow` ACE is found matching"
" any principal, stop processing by returning an "
":class:`pyramid.security.ACLAllowed` instance (equals ``True``) "
"immediately.  If we exhaust the context's :term:`lineage`, and no ACE has"
" explicitly permitted or denied access, return an instance of "
":class:`pyramid.security.ACLDenied` (equals ``False``)."
msgstr "この処理中に、data： `pyramid.security.Deny` ACEが` principals`内のプリンシパルと一致する場合、：class： `pyramid.security.ACLDenied`インスタンスを返して処理を停止します（` `False ``）すぐに。 any：data： `pyramid.security.Allow` ACEがプリンシパルと一致する場合、直ちに：class：` pyramid.security.ACLAllowed`インスタンス（ `` True``に等しい）を返して処理を停止します。コンテキストのterm： `lineage`を使い果たし、ACEが明示的にアクセスを許可または拒否していない場合は、class：` pyramid.security.ACLDenied`（ `` False``に等しい）のインスタンスを返します。"

#: of pyramid.authorization.ACLAuthorizationPolicy:29
msgid ""
"When computing principals allowed by a permission via the "
":func:`pyramid.security.principals_allowed_by_permission` method, we "
"compute the set of principals that are explicitly granted the "
"``permission`` in the provided ``context``.  We do this by walking 'up' "
"the object graph *from the root* to the context.  During this walking "
"process, if we find an explicit :data:`pyramid.security.Allow` ACE for a "
"principal that matches the ``permission``, the principal is included in "
"the allow list.  However, if later in the walking process that principal "
"is mentioned in any :data:`pyramid.security.Deny` ACE for the permission,"
" the principal is removed from the allow list.  If a "
":data:`pyramid.security.Deny` to the principal "
":data:`pyramid.security.Everyone` is encountered during the walking "
"process that matches the ``permission``, the allow list is cleared for "
"all principals encountered in previous ACLs.  The walking process ends "
"after we've processed the any ACL directly attached to ``context``; a set"
" of principals is returned."
msgstr "：func： `pyramid.security.principals_allowed_by_permission`メソッドで許可されたプリンシパルを計算するとき、与えられた` `context``に` `permission``が明示的に与えられたプリンシパルの集合を計算します。これを行うには、オブジェクトグラフ*をルート*からコンテキストに移動します。このウォーキングプロセス中に、「permission」に一致するプリンシパルに対して明示的な：data： `pyramid.security.Allow` ACEが見つかると、プリンシパルは許可リストに含まれます。ただし、後でウォーキングプロセスでプリンシパルがアクセス許可のany：data： `pyramid.security.Deny` ACEに記述されている場合、プリンシパルは許可リストから削除されます。 `permission`と一致するウォーキングプロセス中にプリンシパル：data：` pyramid.security.Everyone`への：data： `pyramid.security.Deny`が発生した場合、遭遇したすべてのプリンシパルに対して許可リストがクリアされます以前のACLウォーニングプロセスは、 `` context``に直接付加されたACLを処理した後で終了します。一連のプリンシパルが返されます。"

#: of pyramid.authorization.ACLAuthorizationPolicy:47
msgid ""
"Objects of this class implement the "
":class:`pyramid.interfaces.IAuthorizationPolicy` interface."
msgstr "このクラスのオブジェクトは：class： `pyramid.interfaces.IAuthorizationPolicy`インタフェースを実装しています。"

