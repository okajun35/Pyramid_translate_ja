# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/interfaces.rst:4
msgid ":mod:`pyramid.interfaces`"
msgstr "(機械翻訳) :mod:`pyramid.interfaces`"

#: ../../api/interfaces.rst:9
msgid "Event-Related Interfaces"
msgstr "イベント関連のインタフェース"

#: of pyramid.interfaces.IApplicationCreated:1
msgid ""
"Event issued when the :meth:`pyramid.config.Configurator.make_wsgi_app` "
"method is called.  See the documentation attached to "
":class:`pyramid.events.ApplicationCreated` for more information."
msgstr "：meth： `pyramid.config.Configurator.make_wsgi_app`メソッドが呼び出されたときに発行されるイベントです。詳細は、class： `pyramid.events.ApplicationCreated`に添付されているドキュメントを参照してください。"

#: of pyramid.interfaces.IApplicationCreated:9
msgid ""
"For backwards compatibility with :app:`Pyramid` versions before 1.0, this"
" interface can also be imported as "
":class:`pyramid.interfaces.IWSGIApplicationCreatedEvent`."
msgstr "1.0より前の：app： `Pyramid`バージョンとの下位互換性のために、このインターフェースは：class：` pyramid.interfaces.IWSGIApplicationCreatedEvent`としてインポートすることもできます。"

#: ../../docstring of pyramid.interfaces.IApplicationCreated.app:1
msgid "Created application"
msgstr "作成されたアプリケーション"

#: of pyramid.interfaces.INewRequest:1
msgid ""
"An event type that is emitted whenever :app:`Pyramid` begins to process a"
" new request.  See the documentation attached to "
":class:`pyramid.events.NewRequest` for more information."
msgstr "app： `Pyramid`が新しいリクエストを処理し始めるたびに放出されるイベントタイプです。詳細については、class： `pyramid.events.NewRequest`に添付されているドキュメントを参照してください。"

#: ../../docstring of pyramid.interfaces.IBeforeTraversal.request:1
#: pyramid.interfaces.IContextFound.request:1
#: pyramid.interfaces.INewRequest.request:1
#: pyramid.interfaces.INewResponse.request:1
msgid "The request object"
msgstr "要求オブジェクト"

#: of pyramid.interfaces.IContextFound:1
msgid ""
"An event type that is emitted after :app:`Pyramid` finds a "
":term:`context` object but before it calls any view code.  See the "
"documentation attached to :class:`pyramid.events.ContextFound` for more "
"information."
msgstr "app： `Pyramid`の後に出現するイベント型は、a：term：` context`オブジェクトを見つけますが、それはビューコードを呼び出す前です。詳細は、class： `pyramid.events.ContextFound`を参照してください。"

#: of pyramid.interfaces.IContextFound:8
msgid ""
"For backwards compatibility with versions of :app:`Pyramid` before 1.0, "
"this event interface can also be imported as "
":class:`pyramid.interfaces.IAfterTraversal`."
msgstr "1.0より前の：app： `Pyramid`のバージョンとの下位互換性のために、このイベントインタフェースはclass：` pyramid.interfaces.IAfterTraversal`としてインポートすることもできます。"

#: of pyramid.interfaces.IBeforeTraversal:1
msgid ""
"An event type that is emitted after :app:`Pyramid` attempted to find a "
"route but before it calls any traversal or view code. See the "
"documentation attached to :class:`pyramid.events.Routefound` for more "
"information."
msgstr "app： `Pyramid`がルートを見つけようとしましたが、トラバーサルまたはビューコードを呼び出す前に送出されるイベントタイプです。詳細については、class： `pyramid.events.Routefound`に添付されているドキュメントを参照してください。"

#: of pyramid.interfaces.INewResponse:1
msgid ""
"An event type that is emitted whenever any :app:`Pyramid` view returns a "
"response. See the documentation attached to "
":class:`pyramid.events.NewResponse` for more information."
msgstr "任意の：app： `Pyramid`ビューが応答を返すたびに発行されるイベントタイプです。詳細は、class： `pyramid.events.NewResponse`に添付されているドキュメントを参照してください。"

#: ../../docstring of pyramid.interfaces.INewResponse.response:1
msgid "The response object"
msgstr "応答オブジェクト"

#: ../../<autodoc>:1
msgid "Extends: :class:`pyramid.interfaces.IDict`"
msgstr "拡張：：class： `pyramid.interfaces.IDict`"

#: of pyramid.interfaces.IBeforeRender:1
msgid ""
"Subscribers to this event may introspect and modify the set of "
":term:`renderer globals` before they are passed to a :term:`renderer`. "
"The event object itself provides a dictionary-like interface for adding "
"and removing :term:`renderer globals`.  The keys and values of the "
"dictionary are those globals.  For example::"
msgstr "このイベントのサブスクライバは：term： `renderer globals`のセットをin：term：` renderer`に渡す前にイントロスペクトして変更することができます。イベントオブジェクト自体は、term： `renderer globals`を追加および削除するための辞書的なインターフェイスを提供します。辞書のキーと値はそれらのグローバルです。例えば：："

#: of pyramid.interfaces.IBeforeRender:16
msgid "See also :ref:`beforerender_event`."
msgstr "参照：ref： `beforerender_event`を参照してください。"

#: ../../docstring of pyramid.interfaces.IBeforeRender.rendering_val:1
msgid ""
"The value returned by a view or passed to a ``render`` method for this "
"rendering. This feature is new in Pyramid 1.2."
msgstr "このレンダリングのためにビューから返された値、または `` render``メソッドに渡された値。この機能はPyramid 1.2の新機能です。"

#: ../../api/interfaces.rst:30
msgid "Other Interfaces"
msgstr "その他のインターフェイス"

#: of pyramid.interfaces.IAuthenticationPolicy:1
msgid "An object representing a Pyramid authentication policy."
msgstr "Pyramid認証ポリシーを表すオブジェクト。"

#: ../../docstring of
#: pyramid.interfaces.IAuthenticationPolicy.authenticated_userid:1
msgid ""
"Return the authenticated :term:`userid` or ``None`` if no authenticated "
"userid can be found. This method of the policy should ensure that a "
"record exists in whatever persistent store is used related to the user "
"(the user should not have been deleted); if a record associated with the "
"current id does not exist in a persistent store, it should return "
"``None``."
msgstr "認証されたユーザIDが見つからない場合は、authenticated：term： `userid`または` `None``を返します。このポリシーの方法では、ユーザーに関連して永続ストアが使用されている（ユーザーは削除されてはいけない）レコードが存在することを確認する必要があります。現在のidに関連付けられたレコードが永続ストアに存在しない場合は、 `` None``を返す必要があります。"

#: ../../docstring of
#: pyramid.interfaces.IAuthenticationPolicy.unauthenticated_userid:1
msgid ""
"Return the *unauthenticated* userid.  This method performs the same duty "
"as ``authenticated_userid`` but is permitted to return the userid based "
"only on data present in the request; it needn't (and shouldn't) check any"
" persistent store to ensure that the user record related to the request "
"userid exists."
msgstr "* unauthenticated * useridを返します。このメソッドは `` authenticated_userid``と同じ義務を実行しますが、要求に存在するデータのみに基づいてuseridを返すことができます。要求ユーザーIDに関連するユーザーレコードが確実に存在することを確実にするために、永続ストアをチェックする必要はありません。"

#: ../../docstring of
#: pyramid.interfaces.IAuthenticationPolicy.unauthenticated_userid:8
msgid ""
"This method is intended primarily a helper to assist the "
"``authenticated_userid`` method in pulling credentials out of the request"
" data, abstracting away the specific headers, query strings, etc that are"
" used to authenticate the request."
msgstr "このメソッドは主に、リクエストを認証するために使用される特定のヘッダー、クエリ文字列などを抽象化して、要求データからクレデンシャルを引き出す際に `` authenticated_userid``メソッドを支援するヘルパーを意図しています。"

#: ../../docstring of
#: pyramid.interfaces.IAuthenticationPolicy.effective_principals:1
msgid ""
"Return a sequence representing the effective principals typically "
"including the :term:`userid` and any groups belonged to by the current "
"user, always including 'system' groups such as "
"``pyramid.security.Everyone`` and ``pyramid.security.Authenticated``."
msgstr "：term： `userid`を含む有効なプリンシパルと、` `pyramid.security.Everyone``や` `pyramid.security &#39;などの&#39; system &#39;グループを常に含む現在のユーザが所属するグループを表すシーケンスを返します。認証済み。"

#: ../../docstring of pyramid.interfaces.IAuthenticationPolicy.remember:1
msgid ""
"Return a set of headers suitable for 'remembering' the :term:`userid` "
"named ``userid`` when set in a response.  An individual authentication "
"policy and its consumers can decide on the composition and meaning of "
"``**kw``."
msgstr "レスポンスに設定されたときに `` userid``という名前の：term： `userid`を &#39;覚えている&#39;に適したヘッダーのセットを返します。個人認証ポリシーとその消費者は、「** kw」の構成と意味を決定できます。"

#: ../../docstring of pyramid.interfaces.IAuthenticationPolicy.forget:1
msgid ""
"Return a set of headers suitable for 'forgetting' the current user on "
"subsequent requests."
msgstr "後続のリクエストで現在のユーザーを「忘れる」のに適した一連のヘッダーを返します。"

#: of pyramid.interfaces.IAuthorizationPolicy:1
msgid "An object representing a Pyramid authorization policy."
msgstr "ピラミッド認可ポリシーを表すオブジェクト。"

#: ../../docstring of pyramid.interfaces.IAuthorizationPolicy.permits:1
msgid ""
"Return an instance of :class:`pyramid.security.Allowed` if any of the "
"``principals`` is allowed the ``permission`` in the current ``context``, "
"else return an instance of :class:`pyramid.security.Denied`."
msgstr "`` principal``の中に `` context``の `` permission``が許されていれば、class： `pyramid.security.Allowed`のインスタンスを返します。そうでなければ：class：` pyramid .security.Denied`。"

#: ../../docstring of
#: pyramid.interfaces.IAuthorizationPolicy.principals_allowed_by_permission:1
msgid ""
"Return a set of principal identifiers allowed by the ``permission`` in "
"``context``.  This behavior is optional; if you choose to not implement "
"it you should define this method as something which raises a "
"``NotImplementedError``.  This method will only be called when the "
"``pyramid.security.principals_allowed_by_permission`` API is used."
msgstr "`` context``の `` permission``で許される主体識別子のセットを返します。この動作はオプションです。実装しない場合は、このメソッドを「NotImplementedError」を発生させるものとして定義する必要があります。このメソッドは、 `` pyramid.security.principals_allowed_by_permission`` APIが使用されている場合にのみ呼び出されます。"

#: ../../<autodoc>:1
msgid ""
"Extends: :class:`pyramid.interfaces.IException`, "
":class:`pyramid.interfaces.IResponse`"
msgstr "拡張：：class： `pyramid.interfaces.IException`、：class：` pyramid.interfaces.IResponse`"

#: of pyramid.interfaces.IExceptionResponse:1
msgid ""
"An interface representing a WSGI response which is also an exception "
"object.  Register an exception view using this interface as a ``context``"
" to apply the registered view for all exception types raised by "
":app:`Pyramid` internally (any exception that inherits from "
":class:`pyramid.response.Response`, including "
":class:`pyramid.httpexceptions.HTTPNotFound` and "
":class:`pyramid.httpexceptions.HTTPForbidden`)."
msgstr "例外オブジェクトでもあるWSGI応答を表すインタフェース。このインタフェースを「コンテキスト」として使用して例外ビューを登録すると、内部的に：app： `Pyramid`（すべての例外例外：class：` pyramid.response.Response`から継承した例外）によって生成されたすべての例外タイプに対して登録されたビューを適用します。 ：class： `pyramid.httpexceptions.HTTPNotFound`と：class：` pyramid.httpexceptions.HTTPForbidden`）。"

#: ../../docstring of pyramid.interfaces.IExceptionResponse.prepare:1
msgid "Prepares the response for being called as a WSGI application"
msgstr "WSGIアプリケーションとして呼び出されるための応答を準備する"

#: of pyramid.interfaces.IRoute:1
msgid ""
"Interface representing the type of object returned from "
"``IRoutesMapper.get_route``"
msgstr "`` IRoutesMapper.get_route``から返されたオブジェクトの型を表すインタフェース"

#: ../../docstring of pyramid.interfaces.IRoute.name:1
msgid "The route name"
msgstr "ルート名"

#: ../../docstring of pyramid.interfaces.IRoute.pattern:1
msgid "The route pattern"
msgstr "ルートパターン"

#: ../../docstring of pyramid.interfaces.IRoute.factory:1
msgid ""
"The :term:`root factory` used by the :app:`Pyramid` router when this "
"route matches (or ``None``)"
msgstr "このルートが一致したときには：app： `Pyramid`ルータで使用される：term：`ルートファクトリ `（または` `None``）"

#: ../../docstring of pyramid.interfaces.IRoute.predicates:1
msgid ""
"A sequence of :term:`route predicate` objects used to determine if a "
"request matches this route or not after basic pattern matching has been "
"completed."
msgstr "基本パターンマッチングが完了した後、リクエストがこのルートと一致するかどうかを判断するために使用されるterm： `ルート述語 &#39;オブジェクトのシーケンス。"

#: ../../docstring of pyramid.interfaces.IRoute.pregenerator:1
msgid ""
"This attribute should either be ``None`` or a callable object "
"implementing the ``IRoutePregenerator`` interface"
msgstr "この属性は `` None``か `` IRoutePregenerator``インタフェースを実装した呼び出し可能なオブジェクトのいずれかでなければなりません"

#: ../../docstring of pyramid.interfaces.IRoute.match:1
msgid ""
"If the ``path`` passed to this function can be matched by the ``pattern``"
" of this route, return a dictionary (the 'matchdict'), which will contain"
" keys representing the dynamic segment markers in the pattern mapped to "
"values extracted from the provided ``path``."
msgstr "この関数に渡された `` path``をこのルートの `` pattern``でマッチさせることができるならば、値にマッピングされたパターン内の動的セグメントマーカを表すキーを含む辞書（ &#39;matchdict&#39;）を返します提供された「パス」から抽出される。"

#: ../../docstring of pyramid.interfaces.IRoute.match:7
msgid ""
"If the ``path`` passed to this function cannot be matched by the "
"``pattern`` of this route, return ``None``."
msgstr "この関数に渡された `` path``がこのルートの `` pattern``でマッチできない場合は、 `` None``を返します。"

#: ../../docstring of pyramid.interfaces.IRoute.generate:1
msgid ""
"Generate a URL based on filling in the dynamic segment markers in the "
"pattern using the ``kw`` dictionary provided."
msgstr "提供された `` kw``ディクショナリを使用して、パターン内の動的セグメントマーカーを埋めることに基づいてURLを生成します。"

#: ../../docstring of pyramid.interfaces.IRoutePregenerator.__call__:1
msgid ""
"A pregenerator is a function associated by a developer with a "
":term:`route`. The pregenerator for a route is called by "
":meth:`pyramid.request.Request.route_url` in order to adjust the set of "
"arguments passed to it by the user for special purposes, such as Pylons "
"'subdomain' support.  It will influence the URL returned by "
"``route_url``."
msgstr "事前生成子は、開発者によって：term： `ルート`と関連付けられた関数です。ルートの事前生成者は、Pylonsのサブドメインのような特別な目的のためにユーザが渡す引数のセットを調整するために：meth： `pyramid.request.Request.route_url`と呼ばれます。 `` route_url``が返すURLに影響します。"

#: ../../docstring of pyramid.interfaces.IRoutePregenerator.__call__:8
msgid ""
"A pregenerator should return a two-tuple of ``(elements, kw)`` after "
"examining the originals passed to this function, which are the arguments "
"``(request, elements, kw)``.  The simplest pregenerator is::"
msgstr "事前生成者は、この関数に渡されたオリジナルを調べた後、 ``（要素、kw） ``の2タプルを返すべきです。これは引数 ``（request、elements、kw） ``です。最も簡単な事前生成者は::"

#: ../../docstring of pyramid.interfaces.IRoutePregenerator.__call__:16
msgid ""
"You can employ a pregenerator by passing a ``pregenerator`` argument to "
"the :meth:`pyramid.config.Configurator.add_route` function."
msgstr "`` pregenerator``引数を：meth： `pyramid.config.Configurator.add_route`関数に渡すことで、事前生成子を使用することができます。"

#: of pyramid.interfaces.ICSRFStoragePolicy:1
msgid ""
"An object that offers the ability to verify CSRF tokens and generate new "
"ones."
msgstr "CSRFトークンを検証し、新しいトークンを生成する機能を提供するオブジェクト。"

#: ../../docstring of pyramid.interfaces.ICSRFStoragePolicy.new_csrf_token:1
msgid ""
"Create and return a new, random cross-site request forgery protection "
"token. The token will be an ascii-compatible unicode string."
msgstr "新しいランダムなクロスサイトリクエスト偽造保護トークンを作成して返します。トークンは、ASCII互換のUnicode文字列になります。"

#: ../../docstring of pyramid.interfaces.ICSRFStoragePolicy.get_csrf_token:1
msgid ""
"Return a cross-site request forgery protection token.  It will be an "
"ascii-compatible unicode string.  If a token was previously set for this "
"user via ``new_csrf_token``, that token will be returned. If no CSRF "
"token was previously set, ``new_csrf_token`` will be called, which will "
"create and set a token, and this token will be returned."
msgstr "クロスサイトリクエスト偽造保護トークンを返します。これは、ASCII互換のUnicode文字列になります。 `` new_csrf_token``を介してトークンがこのユーザに対して以前に設定されていた場合、そのトークンが返されます。以前にCSRFトークンが設定されていない場合は、 `` new_csrf_token``が呼び出され、トークンを作成して設定し、このトークンが返されます。"

#: ../../docstring of pyramid.interfaces.ICSRFStoragePolicy.check_csrf_token:1
msgid ""
"Determine if the supplied ``token`` is valid. Most implementations should"
" simply compare the ``token`` to the current value of ``get_csrf_token`` "
"but it is possible to verify the token using any mechanism necessary "
"using this method."
msgstr "指定された `` token``が有効かどうかを判定します。ほとんどの実装では、 `` token``を `` get_csrf_token``の現在の値と単純に比較するだけですが、このメソッドを使って必要なメカニズムを使ってトークンを検証することは可能です。"

#: ../../docstring of pyramid.interfaces.ICSRFStoragePolicy.check_csrf_token:6
msgid "Returns ``True`` if the ``token`` is valid, otherwise ``False``."
msgstr "`` token``が有効であれば `` True``を、そうでなければ `` False``を返します。"

#: of pyramid.interfaces.ISession:1
msgid ""
"An interface representing a session (a web session object, usually "
"accessed via ``request.session``."
msgstr "セッションを表すインタフェース（通常は `` request.session``でアクセスされるWebセッションオブジェクト）。"

#: of pyramid.interfaces.ISession:4
msgid "Keys and values of a session must be pickleable."
msgstr "セッションのキーと値はpickleableでなければなりません。"

#: of pyramid.interfaces.ISession:8
msgid ""
"Sessions are no longer required to implement ``get_csrf_token`` and "
"``new_csrf_token``. CSRF token support was moved to the pluggable "
":class:`pyramid.interfaces.ICSRFStoragePolicy` configuration hook."
msgstr "セッションはもはや `` get_csrf_token``と `` new_csrf_token``を実装する必要はありません。 CSRFトークンのサポートは、pluggable：class： `pyramid.interfaces.ICSRFStoragePolicy`設定フックに移動しました。"

#: ../../docstring of pyramid.interfaces.ISession.created:1
msgid "Integer representing Epoch time when created."
msgstr "作成時のエポック時間を表す整数。"

#: ../../docstring of pyramid.interfaces.ISession.new:1
msgid "Boolean attribute.  If ``True``, the session is new."
msgstr "ブール属性。 `` True``の場合、セッションは新規です。"

#: ../../docstring of pyramid.interfaces.ISession.invalidate:1
msgid ""
"Invalidate the session.  The action caused by ``invalidate`` is "
"implementation-dependent, but it should have the effect of completely "
"dissociating any data stored in the session with the current request.  It"
" might set response values (such as one which clears a cookie), or it "
"might not."
msgstr "セッションを無効にします。 `` invalidate``によって引き起こされるアクションはインプリメンテーション依存ですが、セッションに格納されているすべてのデータを現在のリクエストと完全に分離するという効果があります。応答値（クッキーを消去する値など）を設定することもあれば、そうでないこともあります。"

#: ../../docstring of pyramid.interfaces.ISession.invalidate:7
msgid ""
"An invalidated session may be used after the call to ``invalidate`` with "
"the effect that a new session is created to store the data. This enables "
"workflows requiring an entirely new session, such as in the case of "
"changing privilege levels or preventing fixation attacks."
msgstr "データを格納するために新しいセッションが作成されるという効果を持つ `` invalidate``の呼び出しの後で、無効化されたセッションを使用することができます。これにより、権限レベルの変更や固定攻撃の防止など、まったく新しいセッションを必要とするワークフローが可能になります。"

#: ../../docstring of pyramid.interfaces.ISession.changed:1
msgid ""
"Mark the session as changed. A user of a session should call this method "
"after he or she mutates a mutable object that is *a value of the session*"
" (it should not be required after mutating the session itself).  For "
"example, if the user has stored a dictionary in the session under the key"
" ``foo``, and he or she does ``session['foo'] = {}``, ``changed()`` "
"needn't be called.  However, if subsequently he or she does "
"``session['foo']['a'] = 1``, ``changed()`` must be called for the "
"sessioning machinery to notice the mutation of the internal dictionary."
msgstr "セッションを変更済みとしてマークします。セッションのユーザーは、*セッションの値*である可変オブジェクトを変更した後にこのメソッドを呼び出す必要があります（セッション自体を変更した後には必要ありません）。例えば、ユーザがキーを `` foo``でセッションに保存していて、 `` session [&#39;foo&#39;] = {} ``、 `` changed（） `` needn &#39;呼び出される。しかし、後で `` session [&#39;foo&#39;] [&#39;a&#39;] = 1``を実行すると、セッション機械が内部辞書の突然変異に気づくために `` changed（） ``を呼び出さなければなりません。"

#: ../../docstring of pyramid.interfaces.ISession.flash:1
msgid ""
"Push a flash message onto the end of the flash queue represented by "
"``queue``.  An alternate flash message queue can used by passing an "
"optional ``queue``, which must be a string.  If ``allow_duplicate`` is "
"false, if the ``msg`` already exists in the queue, it will not be re-"
"added."
msgstr "`` queue``で表されるフラッシュキューの最後にフラッシュメッセージを押します。代わりのフラッシュメッセージキューはオプションの `` queue``を渡すことによって使用できます。これは文字列でなければなりません。 `` allow_duplicate``がfalseの場合、 `` msg``がすでにキューに存在する場合、それは再追加されません。"

#: ../../docstring of pyramid.interfaces.ISession.pop_flash:1
msgid ""
"Pop a queue from the flash storage.  The queue is removed from flash "
"storage after this message is called.  The queue is returned; it is a "
"list of flash messages added by :meth:`pyramid.interfaces.ISession.flash`"
msgstr "フラッシュストレージからキューをポップします。このメッセージが呼び出された後、キューはフラッシュストレージから削除されます。キューが返されます。それは：meth： `pyramid.interfaces.ISession.flash`によって追加されたフラッシュメッセージのリストです"

#: ../../docstring of pyramid.interfaces.ISession.peek_flash:1
msgid ""
"Peek at a queue in the flash storage.  The queue remains in flash storage"
" after this message is called.  The queue is returned; it is a list of "
"flash messages added by :meth:`pyramid.interfaces.ISession.flash`"
msgstr "フラッシュストレージ内の待ち行列を覗いてみてください。このメッセージが呼び出されると、キューはフラッシュストレージに残ります。キューが返されます。それは：meth： `pyramid.interfaces.ISession.flash`によって追加されたフラッシュメッセージのリストです"

#: of pyramid.interfaces.ISessionFactory:1
msgid ""
"An interface representing a factory which accepts a request object and "
"returns an ISession object"
msgstr "要求オブジェクトを受け取り、ISessionオブジェクトを返すファクトリを表すインターフェイス"

#: ../../docstring of pyramid.interfaces.ISessionFactory.__call__:1
msgid "Return an ISession object"
msgstr "ISessionオブジェクトを返す"

#: of pyramid.interfaces.IRendererInfo:1
msgid ""
"An object implementing this interface is passed to every :term:`renderer "
"factory` constructor as its only argument (conventionally named ``info``)"
msgstr "このインタフェースを実装するオブジェクトは、すべての：term： `renderer factory`コンストラクタに唯一の引数として渡されます（通常は` `info``という名前です）"

#: ../../docstring of pyramid.interfaces.IRendererInfo.name:1
msgid "The value passed by the user as the renderer name"
msgstr "ユーザーがレンダラー名として渡す値"

#: ../../docstring of pyramid.interfaces.IRendererInfo.package:1
msgid ""
"The \"current package\" when the renderer configuration statement was "
"found"
msgstr "レンダラー構成ステートメントが見つかったときの\ &quot;現在のパッケージ\&quot;"

#: ../../docstring of pyramid.interfaces.IRendererInfo.type:1
msgid "The renderer type name"
msgstr "レンダラーの型名"

#: ../../docstring of pyramid.interfaces.IRendererInfo.registry:1
msgid "The \"current\" application registry when the renderer was created"
msgstr "レンダラーが作成されたときの\ &quot;現在の\&quot;アプリケーションレジストリ"

#: ../../docstring of pyramid.interfaces.IRendererInfo.settings:1
#: pyramid.interfaces.IViewDeriverInfo.settings:1
msgid "The deployment settings dictionary related to the current application"
msgstr "現在のアプリケーションに関連する展開設定辞書"

#: ../../docstring of pyramid.interfaces.IRendererInfo.clone:1
msgid "Return a shallow copy that does not share any mutable state."
msgstr "可変状態を共有しない浅いコピーを返します。"

#: ../../docstring of pyramid.interfaces.IRendererFactory.__call__:1
msgid ""
"Return an object that implements :class:`pyramid.interfaces.IRenderer`. "
"``info`` is an object that implements "
":class:`pyramid.interfaces.IRendererInfo`."
msgstr "クラス： `pyramid.interfaces.IRenderer`を実装しているオブジェクトを返します。 `` info``は：class： `pyramid.interfaces.IRendererInfo`を実装するオブジェクトです。"

#: ../../docstring of pyramid.interfaces.IRenderer.__call__:1
msgid ""
"Call the renderer with the result of the view (``value``) passed in and "
"return a result (a string or unicode object useful as a response body).  "
"Values computed by the system are passed by the system in the ``system`` "
"parameter, which is a dictionary.  Keys in the dictionary include: "
"``view`` (the view callable that returned the value), ``renderer_name`` "
"(the template name or simple name of the renderer), ``context`` (the "
"context object passed to the view), and ``request`` (the request object "
"passed to the view)."
msgstr "ビューの結果（ `` value``）が渡されたレンダラーを呼び出し、結果（レスポンス本文として有用な文字列またはユニコードオブジェクト）を返します。システムによって計算された値は、辞書である `` system``パラメータでシステムによって渡されます。辞書のキーには、 `` view``（値を返す呼び出し可能ビュー）、 `` renderer_name``（テンプレート名またはレンダラーの単純な名前）、 `` context``（ビュー）、 `` request``（ビューに渡されたリクエストオブジェクト）の3つです。"

#: of pyramid.interfaces.IRequestFactory:1
msgid "A utility which generates a request"
msgstr "リクエストを生成するユーティリティ"

#: ../../docstring of pyramid.interfaces.IRequestFactory.__call__:1
msgid "Return an instance of ``pyramid.request.Request``"
msgstr "`` pyramid.request.Request``のインスタンスを返します。"

#: ../../docstring of pyramid.interfaces.IRequestFactory.blank:1
msgid "Return an empty request object (see :meth:`pyramid.request.Request.blank`)"
msgstr "空のリクエストオブジェクトを返します（：meth： `pyramid.request.Request.blank`を参照）。"

#: of pyramid.interfaces.IResponseFactory:1
msgid "A utility which generates a response"
msgstr "応答を生成するユーティリティ"

#: ../../docstring of pyramid.interfaces.IResponseFactory.__call__:1
msgid ""
"Return a response object implementing IResponse, e.g. "
":class:`pyramid.response.Response`). It should handle the case when "
"``request`` is ``None``."
msgstr "IResponseを実装するレスポンスオブジェクトを返します（例：class： `pyramid.response.Response`）。 `` request``が `` None``の場合に対応してください。"

#: of pyramid.interfaces.IRouter:1
msgid ""
"WSGI application which routes requests to 'view' code based on a view "
"registry."
msgstr "ビューレジストリに基づいて要求を「ビュー」コードにルーティングするWSGIアプリケーション。"

#: ../../docstring of pyramid.interfaces.IRouter.registry:1
msgid "Component architecture registry local to this application."
msgstr "このアプリケーションのローカルのコンポーネントアーキテクチャレジストリ。"

#: ../../docstring of pyramid.interfaces.IRouter.request_context:1
msgid "Create a new request context from a WSGI environ."
msgstr "WSGI環境から新しい要求コンテキストを作成します。"

#: ../../docstring of pyramid.interfaces.IRouter.request_context:3
msgid ""
"The request context is used to push/pop the threadlocals required when "
"processing the request. It also contains an initialized "
":class:`pyramid.interfaces.IRequest` instance using the registered "
":class:`pyramid.interfaces.IRequestFactory`. The context may be used as a"
" context manager to control the threadlocal lifecycle:"
msgstr "要求コンテキストは、要求を処理するときに必要なスレッド・ロックをプッシュ/ポップするために使用されます。また、登録された：class： `pyramid.interfaces.IRequestFactory`を使用して初期化された：class：` pyramid.interfaces.IRequest`インスタンスも含まれています。コンテキストは、スレッドローカルライフサイクルを制御するコンテキストマネージャとして使用できます。"

#: ../../docstring of pyramid.interfaces.IRouter.request_context:14
msgid ""
"Alternatively, the context may be used without the ``with`` statement by "
"manually invoking its ``begin()`` and ``end()`` methods."
msgstr "あるいは、 `` begin（） ``メソッドと `` end（） ``メソッドを手動で呼び出すことで、コンテキストを `` with``ステートメントなしで使用することもできます。"

#: ../../docstring of pyramid.interfaces.IRouter.invoke_request:1
msgid "Invoke the :app:`Pyramid` request pipeline."
msgstr "：app： `Pyramid`リクエストパイプラインを呼び出します。"

#: ../../docstring of pyramid.interfaces.IRouter.invoke_request:3
msgid "See :ref:`router_chapter` for information on the request pipeline."
msgstr "要求パイプラインに関する情報は：ref： `router_chapter`を参照してください。"

#: ../../docstring of pyramid.interfaces.IRouter.invoke_request:5
msgid ""
"The output should be a :class:`pyramid.interfaces.IResponse` object or a "
"raised exception."
msgstr "出力は：class： `pyramid.interfaces.IResponse`オブジェクトか、発生した例外でなければなりません。"

#: ../../docstring of pyramid.interfaces.IViewMapperFactory.__call__:1
msgid ""
"Return an object which implements "
":class:`pyramid.interfaces.IViewMapper`.  ``kw`` will be a dictionary "
"containing view-specific arguments, such as ``permission``, "
"``predicates``, ``attr``, ``renderer``, and other items.  An "
"IViewMapperFactory is used by "
":meth:`pyramid.config.Configurator.add_view` to provide a plugpoint to "
"extension developers who want to modify potential view callable "
"invocation signatures and response values."
msgstr "クラス： `pyramid.interfaces.IViewMapper`を実装しているオブジェクトを返します。 `` kw``は、 ``許可 ``、 ``述語 ``、 `` attr``、 ``レンダラー ``などのビュー固有の引数を含む辞書になります。 IViewMapperFactoryは：meth： `pyramid.config.Configurator.add_view`によって潜在的なビュー呼び出し可能な呼び出しシグネチャと応答値を変更したい拡張機能開発者に提供するために使用されます。"

#: ../../docstring of pyramid.interfaces.IViewMapper.__call__:1
msgid ""
"Provided with an arbitrary object (a function, class, or instance), "
"returns a callable with the call signature ``(context, request)``.  The "
"callable returned should itself return a Response object.  An IViewMapper"
" is returned by :class:`pyramid.interfaces.IViewMapperFactory`."
msgstr "任意のオブジェクト（関数、クラス、またはインスタンス）があれば、コールシグネチャ ``（context、request） ``でコール可能オブジェクトを返します。返される呼び出し可能オブジェクトは、それ自身がResponseオブジェクトを返す必要があります。 IViewMapperは：class： `pyramid.interfaces.IViewMapperFactory`によって返されます。"

#: ../../docstring of pyramid.interfaces.IDict.__contains__:1
msgid "Return ``True`` if key ``k`` exists in the dictionary."
msgstr "キー `` k``が辞書に存在すれば `` True``を返します。"

#: ../../docstring of pyramid.interfaces.IDict.__setitem__:1
msgid "Set a key/value pair into the dictionary"
msgstr "キー/値のペアを辞書に設定する"

#: ../../docstring of pyramid.interfaces.IDict.__delitem__:1
msgid ""
"Delete an item from the dictionary which is passed to the renderer as the"
" renderer globals dictionary."
msgstr "ディクショナリからレンダラーに渡されるアイテムをレンダラーのグローバルディクショナリとして削除します。"

#: ../../docstring of pyramid.interfaces.IDict.__getitem__:1
msgid ""
"Return the value for key ``k`` from the dictionary or raise a KeyError if"
" the key doesn't exist"
msgstr "辞書からキー `` k``の値を返し、キーが存在しなければKeyErrorを送出します"

#: ../../docstring of pyramid.interfaces.IDict.__iter__:1
msgid "Return an iterator over the keys of this dictionary"
msgstr "この辞書のキーのイテレータを返します。"

#: ../../docstring of pyramid.interfaces.IDict.get:1
msgid ""
"Return the value for key ``k`` from the renderer dictionary, or the "
"default if no such value exists."
msgstr "キー &quot;k&quot;の値をレンダラー辞書から返します。値が存在しない場合はデフォルトを返します。"

#: ../../docstring of pyramid.interfaces.IDict.items:1
msgid "Return a list of [(k,v)] pairs from the dictionary"
msgstr "辞書から[（k、v）]対のリストを返す"

#: ../../docstring of pyramid.interfaces.IDict.keys:1
msgid "Return a list of keys from the dictionary"
msgstr "辞書からキーのリストを返す"

#: ../../docstring of pyramid.interfaces.IDict.values:1
msgid "Return a list of values from the dictionary"
msgstr "辞書から値のリストを返す"

#: ../../docstring of pyramid.interfaces.IDict.pop:1
msgid ""
"Pop the key k from the dictionary and return its value.  If k doesn't "
"exist, and default is provided, return the default.  If k doesn't exist "
"and default is not provided, raise a KeyError."
msgstr "キーkを辞書からポップし、その値を返します。 kが存在せず、デフォルトが提供されている場合は、デフォルトを返します。 kが存在せず、デフォルトが提供されていない場合、KeyErrorを送出します。"

#: ../../docstring of pyramid.interfaces.IDict.popitem:1
msgid ""
"Pop the item with key k from the dictionary and return it as a two-tuple "
"(k, v).  If k doesn't exist, raise a KeyError."
msgstr "辞書からキーkで項目をポップし、2タプル（k、v）として返します。 kが存在しない場合は、KeyErrorを発生させます。"

#: ../../docstring of pyramid.interfaces.IDict.setdefault:1
msgid ""
"Return the existing value for key ``k`` in the dictionary.  If no value "
"with ``k`` exists in the dictionary, set the ``default`` value into the "
"dictionary under the k name passed.  If a value already existed in the "
"dictionary, return it.  If a value did not exist in the dictionary, "
"return the default"
msgstr "辞書にあるキー &quot;k&quot;の既存の値を返します。辞書に `` k``の値がない場合は、渡されたkの名前の辞書に `` default``の値を設定します。値がすでに辞書に存在する場合は、それを返します。値が辞書に存在しない場合は、デフォルト値"

#: ../../docstring of pyramid.interfaces.IDict.update:1
msgid "Update the renderer dictionary with another dictionary ``d``."
msgstr "レンダラー辞書を別の辞書 `` d``で更新してください。"

#: ../../docstring of pyramid.interfaces.IDict.clear:1
msgid "Clear all values from the dictionary"
msgstr "辞書からすべての値をクリアする"

#: of pyramid.interfaces.IMultiDict:1
msgid ""
"An ordered dictionary that can have multiple values for each key. A "
"multidict adds the methods ``getall``, ``getone``, ``mixed``, ``extend``,"
" ``add``, and ``dict_of_lists`` to the normal dictionary interface.  A "
"multidict data structure is used as ``request.POST``, ``request.GET``, "
"and ``request.params`` within an :app:`Pyramid` application."
msgstr "各キーに複数の値を持つことができる順序付き辞書。 multidictは、通常の辞書インタフェースに `` getall``、 `` getone``、 `` mixed``、 `` extend``、 `` add``、 `` dict_of_lists``メソッドを追加します。マルチダイレクトデータ構造は、：app： `Pyramid`アプリケーション内で` `request.POST``、` `request.GET``、` `request.params``として使用されます。"

#: ../../docstring of pyramid.interfaces.IMultiDict.add:1
msgid "Add the key and value, not overwriting any previous value."
msgstr "以前の値を上書きしないで、キーと値を追加します。"

#: ../../docstring of pyramid.interfaces.IMultiDict.dict_of_lists:1
msgid "Returns a dictionary where each key is associated with a list of values."
msgstr "各キーが値のリストに関連付けられている辞書を返します。"

#: ../../docstring of pyramid.interfaces.IMultiDict.extend:1
msgid ""
"Add a set of keys and values, not overwriting any previous values.  The "
"``other`` structure may be a list of two-tuples or a dictionary.  If "
"``**kwargs`` is passed, its value *will* overwrite existing values."
msgstr "以前の値を上書きしないで、キーと値のセットを追加します。 「他の」構造体は、2つのタプルまたは辞書のリストであってもよい。 `` ** kwargs``が渡された場合、その値*は既存の値を上書きします。"

#: ../../docstring of pyramid.interfaces.IMultiDict.getall:1
msgid "Return a list of all values matching the key (may be an empty list)"
msgstr "キーに一致するすべての値のリストを返します（空のリストかもしれません）"

#: ../../docstring of pyramid.interfaces.IMultiDict.getone:1
msgid ""
"Get one value matching the key, raising a KeyError if multiple values "
"were found."
msgstr "キーに一致する値を1つ取得し、複数の値が見つかった場合はKeyErrorを発生させます。"

#: ../../docstring of pyramid.interfaces.IMultiDict.mixed:1
msgid ""
"Returns a dictionary where the values are either single values, or a list"
" of values when a key/value appears more than once in this dictionary. "
"This is similar to the kind of dictionary often used to represent the "
"variables in a web request."
msgstr "値が単一値である辞書、またはキー/値がこの辞書に複数回現れるときの値のリストを返します。これは、Webリクエストで変数を表すためによく使われる辞書の種類と似ています。"

#: of pyramid.interfaces.IResponse:1
msgid ""
"Represents a WSGI response using the WebOb response interface. Some "
"attribute and method documentation of this interface references "
":rfc:`2616`."
msgstr "WebOb応答インタフェースを使用したWSGI応答を表します。このインタフェースの属性とメソッドのドキュメントの中には、rfc： `2616`を参照しているものがあります。"

#: of pyramid.interfaces.IResponse:5
msgid ""
"This interface is most famously implemented by "
":class:`pyramid.response.Response` and the HTTP exception classes in "
":mod:`pyramid.httpexceptions`."
msgstr "このインタフェースは、class： `pyramid.response.Response`と：mod：` pyramid.httpexceptions`のHTTP例外クラスによって最も有名に実装されています。"

#: ../../docstring of pyramid.interfaces.IResponse.RequestClass:1
msgid "Alias for :class:`pyramid.request.Request`"
msgstr "エイリアス：class： `pyramid.request.Request`"

#: ../../docstring of pyramid.interfaces.IResponse.__call__:1
msgid ""
":term:`WSGI` call interface, should call the start_response callback and "
"should return an iterable"
msgstr "：term： `WSGI`コールインタフェース。start_responseコールバックを呼び出す必要があり、iterableを返す必要があります"

#: ../../docstring of pyramid.interfaces.IResponse.accept_ranges:1
msgid ""
"Gets and sets and deletes the Accept-Ranges header. For more information "
"on Accept-Ranges see RFC 2616, section 14.5"
msgstr "Accept-Rangesヘッダーを取得、設定、削除します。 Accept-Rangeの詳細については、RFC 2616のセクション14.5を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.age:1
msgid ""
"Gets and sets and deletes the Age header. Converts using int. For more "
"information on Age see RFC 2616, section 14.6."
msgstr "Ageヘッダーを取得、設定、削除します。 intを使用して変換します。 Ageの詳細については、RFC 2616のセクション14.6を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.allow:1
msgid ""
"Gets and sets and deletes the Allow header. Converts using list. For more"
" information on Allow see RFC 2616, Section 14.7."
msgstr "Allowヘッダーを取得、設定、削除します。リストを使用して変換します。許可の詳細については、RFC 2616、第14.7項を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.app_iter:1
msgid "Returns the app_iter of the response."
msgstr "応答のapp_iterを返します。"

#: ../../docstring of pyramid.interfaces.IResponse.app_iter:3
msgid ""
"If body was set, this will create an app_iter from that body (a single-"
"item list)"
msgstr "bodyが設定されている場合、その本体からapp_iterが作成されます（単一項目のリスト）"

#: ../../docstring of pyramid.interfaces.IResponse.app_iter_range:1
msgid ""
"Return a new app_iter built from the response app_iter that serves up "
"only the given start:stop range."
msgstr "応答app_iterから構築された新しいapp_iterを返します。このapp_iterは、指定されたstart：stop範囲のみを処理します。"

#: ../../docstring of pyramid.interfaces.IResponse.body:1
msgid ""
"The body of the response, as a str. This will read in the entire app_iter"
" if necessary."
msgstr "レスポンスの本文は、strとして返されます。これは、必要に応じてapp_iter全体で読み取られます。"

#: ../../docstring of pyramid.interfaces.IResponse.body_file:1
msgid ""
"A file-like object that can be used to write to the body. If you passed "
"in a list app_iter, that app_iter will be modified by writes."
msgstr "本文に書き込むのに使用できるファイルのようなオブジェクト。 app_iterというリストを渡した場合、そのapp_iterは書き込みによって変更されます。"

#: ../../docstring of pyramid.interfaces.IResponse.cache_control:1
msgid "Get/set/modify the Cache-Control header (RFC 2616 section 14.9)"
msgstr "Cache-Controlヘッダを取得/設定/変更する（RFC 2616のセクション14.9）"

#: ../../docstring of pyramid.interfaces.IResponse.cache_expires:1
msgid ""
"Get/set the Cache-Control and Expires headers. This sets the response to "
"expire in the number of seconds passed when set."
msgstr "Cache-ControlヘッダーとExpiresヘッダーを取得/設定します。これは、設定されたときに経過した秒数で応答が期限切れになるように設定します。"

#: ../../docstring of pyramid.interfaces.IResponse.charset:1
msgid "Get/set the charset (in the Content-Type)"
msgstr "文字セットの取得/設定（Content-Type内）"

#: ../../docstring of pyramid.interfaces.IResponse.conditional_response_app:1
msgid "Like the normal __call__ interface, but checks conditional headers:"
msgstr "通常の__call__インタフェースと同様ですが、条件付きヘッダをチェックします："

#: ../../docstring of pyramid.interfaces.IResponse.conditional_response_app:4
msgid "If-Modified-Since (304 Not Modified; only on GET, HEAD)"
msgstr "If-Modified-Since（304は変更されず、GET、HEADのみ）"

#: ../../docstring of pyramid.interfaces.IResponse.conditional_response_app:6
msgid "If-None-Match (304 Not Modified; only on GET, HEAD)"
msgstr "一致しない場合（304は変更されず、GET、HEADの場合のみ）"

#: ../../docstring of pyramid.interfaces.IResponse.conditional_response_app:8
msgid "Range (406 Partial Content; only on GET, HEAD)"
msgstr "範囲（406の部分コンテンツ、GET、HEADのみ）"

#: ../../docstring of pyramid.interfaces.IResponse.content_disposition:1
msgid ""
"Gets and sets and deletes the Content-Disposition header. For more "
"information on Content-Disposition see RFC 2616 section 19.5.1."
msgstr "Content-Dispositionヘッダーを取得、設定、削除します。 Content-Dispositionの詳細については、RFC 2616のセクション19.5.1を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.content_encoding:1
msgid ""
"Gets and sets and deletes the Content-Encoding header.  For more "
"information about Content-Encoding see RFC 2616 section 14.11."
msgstr "Content-Encodingヘッダーを取得、設定、および削除します。 Content-Encodingの詳細については、RFC 2616のセクション14.11を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.content_language:1
msgid ""
"Gets and sets and deletes the Content-Language header. Converts using "
"list.  For more information about Content-Language see RFC 2616 section "
"14.12."
msgstr "Content-Languageヘッダーを取得、設定、および削除します。リストを使用して変換します。 Content-Languageの詳細については、RFC 2616のセクション14.12を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.content_length:1
msgid ""
"Gets and sets and deletes the Content-Length header. For more information"
" on Content-Length see RFC 2616 section 14.17. Converts using int."
msgstr "Content-Lengthヘッダーを取得、設定、削除します。 Content-Lengthの詳細については、RFC 2616のセクション14.17を参照してください。 intを使用して変換します。"

#: ../../docstring of pyramid.interfaces.IResponse.content_location:1
msgid ""
"Gets and sets and deletes the Content-Location header. For more "
"information on Content-Location see RFC 2616 section 14.14."
msgstr "Content-Locationヘッダーを取得、設定、および削除します。 Content-Locationの詳細については、RFC 2616の14.14節を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.content_md5:1
msgid ""
"Gets and sets and deletes the Content-MD5 header. For more information on"
" Content-MD5 see RFC 2616 section 14.14."
msgstr "Content-MD5ヘッダーを取得、設定、および削除します。 Content-MD5の詳細については、RFC 2616の14.14節を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.content_range:1
msgid ""
"Gets and sets and deletes the Content-Range header. For more information "
"on Content-Range see section 14.16. Converts using ContentRange object."
msgstr "Content-Rangeヘッダーを取得、設定、削除します。 Content-Rangeの詳細については、14.16節を参照してください。 ContentRangeオブジェクトを使用して変換します。"

#: ../../docstring of pyramid.interfaces.IResponse.content_type:1
msgid ""
"Get/set the Content-Type header (or None), without the charset or any "
"parameters. If you include parameters (or ; at all) when setting the "
"content_type, any existing parameters will be deleted; otherwise they "
"will be preserved."
msgstr "文字セットまたは任意のパラメータを使用せずに、Content-Typeヘッダ（またはNone）を取得または設定します。 content_typeの設定時にパラメータを含めると、既存のパラメータはすべて削除されます。さもなければそれらは保存されます。"

#: ../../docstring of pyramid.interfaces.IResponse.content_type_params:1
msgid ""
"A dictionary of all the parameters in the content type.  This is not a "
"view, set to change, modifications of the dict would not be applied "
"otherwise."
msgstr "コンテンツタイプのすべてのパラメータの辞書。これは変更されるビューではなく、ディクテーションの変更は適用されません。"

#: ../../docstring of pyramid.interfaces.IResponse.copy:1
msgid "Makes a copy of the response and returns the copy."
msgstr "応答のコピーを作成し、そのコピーを返します。"

#: ../../docstring of pyramid.interfaces.IResponse.date:1
msgid ""
"Gets and sets and deletes the Date header. For more information on Date "
"see RFC 2616 section 14.18. Converts using HTTP date."
msgstr "Dateヘッダーを取得、設定、削除します。 Dateの詳細については、RFC 2616のセクション14.18を参照してください。 HTTPの日付を使用して変換します。"

#: ../../docstring of pyramid.interfaces.IResponse.delete_cookie:1
msgid ""
"Delete a cookie from the client. Note that path and domain must match how"
" the cookie was originally set.  This sets the cookie to the empty "
"string, and max_age=0 so that it should expire immediately."
msgstr "クライアントからクッキーを削除します。パスとドメインは、Cookieの元の設定と一致する必要があります。これにより、クッキーが空の文字列に設定され、max_age = 0に設定され、すぐに期限切れになります。"

#: ../../docstring of pyramid.interfaces.IResponse.encode_content:1
msgid ""
"Encode the content with the given encoding (only gzip and identity are "
"supported)."
msgstr "指定されたエンコーディングでコンテンツをエンコードします（gzipとIDのみサポートされます）。"

#: ../../docstring of pyramid.interfaces.IResponse.environ:1
msgid "Get/set the request environ associated with this response, if any."
msgstr "この応答に関連付けられたリクエスト環境を取得/設定します（存在する場合）。"

#: ../../docstring of pyramid.interfaces.IResponse.etag:1
msgid ""
"Gets and sets and deletes the ETag header. For more information on ETag "
"see RFC 2616 section 14.19. Converts using Entity tag."
msgstr "ETagヘッダーを取得および設定し、削除します。 ETagの詳細については、RFC 2616のセクション14.19を参照してください。エンティティタグを使用して変換します。"

#: ../../docstring of pyramid.interfaces.IResponse.expires:1
msgid ""
"Gets and sets and deletes the Expires header. For more information on "
"Expires see RFC 2616 section 14.21. Converts using HTTP date."
msgstr "Expiresヘッダーを取得、設定、削除します。 Expiresの詳細については、RFC 2616のセクション14.21を参照してください。 HTTPの日付を使用して変換します。"

#: ../../docstring of pyramid.interfaces.IResponse.headerlist:1
msgid "The list of response headers."
msgstr "応答ヘッダーのリスト。"

#: ../../docstring of pyramid.interfaces.IResponse.headers:1
msgid "The headers in a dictionary-like object"
msgstr "辞書のようなオブジェクトのヘッダー"

#: ../../docstring of pyramid.interfaces.IResponse.last_modified:1
msgid ""
"Gets and sets and deletes the Last-Modified header. For more information "
"on Last-Modified see RFC 2616 section 14.29. Converts using HTTP date."
msgstr "Last-Modifiedヘッダーを取得、設定、削除します。 Last-Modifiedの詳細については、RFC 2616のセクション14.29を参照してください。 HTTPの日付を使用して変換します。"

#: ../../docstring of pyramid.interfaces.IResponse.location:1
msgid ""
"Gets and sets and deletes the Location header. For more information on "
"Location see RFC 2616 section 14.30."
msgstr "Locationヘッダーを取得、設定、削除します。場所の詳細については、RFC 2616セクション14.30を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.md5_etag:1
msgid ""
"Generate an etag for the response object using an MD5 hash of the body "
"(the body parameter, or self.body if not given).  Sets self.etag. If "
"set_content_md5 is True sets self.content_md5 as well"
msgstr "本文のMD5ハッシュ（bodyパラメータ、または与えられていない場合はself.body）を使用してレスポンスオブジェクトのetagを生成します。 self.etagを設定します。 set_content_md5がTrueの場合、self.content_md5も同様に設定されます。"

#: ../../docstring of pyramid.interfaces.IResponse.merge_cookies:1
msgid ""
"Merge the cookies that were set on this response with the given resp "
"object (which can be any WSGI application).  If the resp is a "
"webob.Response object, then the other object will be modified in-place."
msgstr "このレスポンスに設定されたCookieを、指定されたrespオブジェクト（任意のWSGIアプリケーション）にマージします。 respがwebob.Responseオブジェクトの場合、もう一方のオブジェクトはインプレースで変更されます。"

#: ../../docstring of pyramid.interfaces.IResponse.pragma:1
msgid ""
"Gets and sets and deletes the Pragma header. For more information on "
"Pragma see RFC 2616 section 14.32."
msgstr "プラグマヘッダーを取得、設定、削除します。プラグマの詳細については、RFC 2616のセクション14.32を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.request:1
msgid "Return the request associated with this response if any."
msgstr "この応答に関連付けられた要求があれば返します。"

#: ../../docstring of pyramid.interfaces.IResponse.retry_after:1
msgid ""
"Gets and sets and deletes the Retry-After header. For more information on"
" Retry-After see RFC 2616 section 14.37. Converts using HTTP date or "
"delta seconds."
msgstr "Retry-Afterヘッダーを取得、設定、および削除します。 Retry-Afterの詳細については、RFC 2616の14.37節を参照してください。 HTTPの日付またはデルタ秒を使用して変換します。"

#: ../../docstring of pyramid.interfaces.IResponse.server:1
msgid ""
"Gets and sets and deletes the Server header. For more information on "
"Server see RFC216 section 14.38."
msgstr "サーバーヘッダーを取得および設定し、削除します。サーバーの詳細については、RFC216の14.38節を参照してください。"

#: ../../docstring of pyramid.interfaces.IResponse.set_cookie:1
msgid "Set (add) a cookie for the response"
msgstr "レスポンスにクッキーを設定（追加）する"

#: ../../docstring of pyramid.interfaces.IResponse.status:1
msgid "The status string."
msgstr "ステータス文字列。"

#: ../../docstring of pyramid.interfaces.IResponse.status_int:1
msgid "The status as an integer"
msgstr "整数としての状態"

#: ../../docstring of pyramid.interfaces.IResponse.unicode_body:1
msgid ""
"Get/set the unicode value of the body (using the charset of the Content-"
"Type)"
msgstr "本文のユニコード値を取得/設定する（Content-Typeの文字セットを使用）"

#: ../../docstring of pyramid.interfaces.IResponse.unset_cookie:1
msgid "Unset a cookie with the given name (remove it from the response)."
msgstr "指定された名前のクッキーの設定を解除します（応答から削除します）。"

#: ../../docstring of pyramid.interfaces.IResponse.vary:1
msgid ""
"Gets and sets and deletes the Vary header. For more information on Vary "
"see section 14.44. Converts using list."
msgstr "Varyヘッダーを取得、設定、削除します。 Varyの詳細については、14.44節を参照してください。リストを使用して変換します。"

#: ../../docstring of pyramid.interfaces.IResponse.www_authenticate:1
msgid ""
"Gets and sets and deletes the WWW-Authenticate header. For more "
"information on WWW-Authenticate see RFC 2616 section 14.47. Converts "
"using 'parse_auth' and 'serialize_auth'."
msgstr "WWW-Authenticateヘッダーを取得、設定、削除します。 WWW-Authenticateの詳細については、RFC 2616の14.47節を参照してください。 &#39;parse_auth&#39;と &#39;serialize_auth&#39;を使って変換します。"

#: of pyramid.interfaces.IIntrospectable:1
msgid ""
"An introspectable object used for configuration introspection.  In "
"addition to the methods below, objects which implement this interface "
"must also implement all the methods of Python's "
"``collections.MutableMapping`` (the \"dictionary interface\"), and must "
"be hashable."
msgstr "構成イントロスペクションに使用されるイントロスペクティブなオブジェクト。以下のメソッドに加えて、このインタフェースを実装するオブジェクトは、Pythonの `` collections.MutableMapping``（\ &quot;辞書インタフェース\&quot;）のすべてのメソッドも実装しなければならず、ハッシュ可能でなければなりません。"

#: ../../docstring of pyramid.interfaces.IIntrospectable.title:1
msgid "Text title describing this introspectable"
msgstr "このイントロスペクタブルを説明するテキストタイトル"

#: ../../docstring of pyramid.interfaces.IIntrospectable.type_name:1
msgid "Text type name describing this introspectable"
msgstr "このイントロスペクティブを記述するテキストタイプ名"

#: ../../docstring of pyramid.interfaces.IIntrospectable.order:1
msgid ""
"integer order in which registered with introspector (managed by "
"introspector, usually)"
msgstr "introspectorに登録された整数の順序（通常、イントロスペクサーによって管理されます）"

#: ../../docstring of pyramid.interfaces.IIntrospectable.category_name:1
msgid "introspection category name"
msgstr "イントロスペクションカテゴリ名"

#: ../../docstring of pyramid.interfaces.IIntrospectable.discriminator:1
msgid "introspectable discriminator (within category) (must be hashable)"
msgstr "（カテゴリ内の）イントロスペクティブな識別子（ハッシュ可能でなければならない）"

#: ../../docstring of pyramid.interfaces.IIntrospectable.discriminator_hash:1
msgid "an integer hash of the discriminator"
msgstr "ディスクリミネータの整数ハッシュ"

#: ../../docstring of pyramid.interfaces.IIntrospectable.action_info:1
msgid ""
"An IActionInfo object representing the caller that invoked the creation "
"of this introspectable (usually a sentinel until updated during "
"self.register)"
msgstr "このイントロビュー可能オブジェクトの作成を呼び出した呼び出し元を表すIActionInfoオブジェクト（通常、self.register中に更新されるまでは、センチネル）"

#: ../../docstring of pyramid.interfaces.IIntrospectable.relate:1
msgid ""
"Indicate an intent to relate this IIntrospectable with another "
"IIntrospectable (the one associated with the ``category_name`` and "
"``discriminator``) during action execution."
msgstr "アクションの実行中に、このIIntrospectableと別のIIntrospectable（ `` category_name``と `` discriminator``に関連するもの）を関連付ける意図を示します。"

#: ../../docstring of pyramid.interfaces.IIntrospectable.unrelate:1
msgid ""
"Indicate an intent to break the relationship between this IIntrospectable"
" with another IIntrospectable (the one associated with the "
"``category_name`` and ``discriminator``) during action execution."
msgstr "アクションの実行中に、このIIntrospectableと他のIIntrospectable（ `` category_name``と `` discriminator``に関連するもの）との関係を壊す意図を示します。"

#: ../../docstring of pyramid.interfaces.IIntrospectable.register:1
msgid ""
"Register this IIntrospectable with an introspector.  This method is "
"invoked during action execution.  Adds the introspectable and its "
"relations to the introspector.  ``introspector`` should be an object "
"implementing IIntrospector.  ``action_info`` should be a object "
"implementing the interface :class:`pyramid.interfaces.IActionInfo` "
"representing the call that registered this introspectable. Pseudocode for"
" an implementation of this method:"
msgstr "このIIntrospectableをイントロスペクサーに登録します。このメソッドは、アクションの実行中に呼び出されます。 introspectorとその関係をintrospectorに追加します。 `` introspector``はIIntrospectorを実装するオブジェクトでなければなりません。 `` action_info``は、このイントロスペクタブルを登録した呼び出しを表すインタフェース：class： `pyramid.interfaces.IActionInfo`を実装するオブジェクトでなければなりません。このメソッドを実装するための擬似コード："

#: ../../docstring of pyramid.interfaces.IIntrospectable.__hash__:1
msgid ""
"Introspectables must be hashable.  The typical implementation of an "
"introsepectable's __hash__ is::"
msgstr "見込み客はハッシュ可能でなければならない。 introspectableの__hash__の典型的な実装は::"

#: ../../docstring of pyramid.interfaces.IIntrospector.get:1
msgid ""
"Get the IIntrospectable related to the category_name and the "
"discriminator (or discriminator hash) ``discriminator``.  If it does not "
"exist in the introspector, return the value of ``default``"
msgstr "category_nameとdiscriminator（またはdiscriminator hash）の `` discriminator``に関連するIIntrospectableを取得します。 introspectorに存在しない場合は、 `` default``の値を返します"

#: ../../docstring of pyramid.interfaces.IIntrospector.get_category:1
msgid ""
"Get a sequence of dictionaries in the form "
"``[{'introspectable':IIntrospectable, 'related':[sequence of related "
"IIntrospectables]}, ...]`` where each introspectable is part of the "
"category associated with ``category_name`` ."
msgstr "`` {{&#39;introspectable&#39;：IIntrospectable、 &#39;related&#39;：[関連するIIntrospectablesのシーケンス}}、...] ``形式で辞書のシーケンスを取得します。各イントロスペクタブルは `` category_name``に関連するカテゴリの一部です。 `。"

#: ../../docstring of pyramid.interfaces.IIntrospector.get_category:6
msgid ""
"If the category named ``category_name`` does not exist in the "
"introspector the value passed as ``default`` will be returned."
msgstr "introspectorに `` category_name``というカテゴリが存在しない場合、 `` default``として渡された値が返されます。"

#: ../../docstring of pyramid.interfaces.IIntrospector.get_category:9
msgid ""
"If ``sort_key`` is ``None``, the sequence will be returned in the order "
"the introspectables were added to the introspector.  Otherwise, sort_key "
"should be a function that accepts an IIntrospectable and returns a value "
"from it (ala the ``key`` function of Python's ``sorted`` callable)."
msgstr "`` sort_key``が `` None``の場合、イントロスペクターがイントロスペクターに追加された順序でシーケンスが返されます。それ以外の場合、sort_keyはIIntrospectableを受け取り、その値を返します（alaはPythonの `` sorted``呼び出し可能関数の `` key``関数です）。"

#: ../../docstring of pyramid.interfaces.IIntrospector.categories:1
msgid "Return a sorted sequence of category names known by this introspector"
msgstr "このIntrospectorが認識しているカテゴリ名のソートされたシーケンスを返します。"

#: ../../docstring of pyramid.interfaces.IIntrospector.categorized:1
msgid ""
"Get a sequence of tuples in the form ``[(category_name, "
"[{'introspectable':IIntrospectable, 'related':[sequence of related "
"IIntrospectables]}, ...])]`` representing all known introspectables.  If "
"``sort_key`` is ``None``, each introspectables sequence will be returned "
"in the order the introspectables were added to the introspector.  "
"Otherwise, sort_key should be a function that accepts an IIntrospectable "
"and returns a value from it (ala the ``key`` function of Python's "
"``sorted`` callable)."
msgstr "``（category_name、[{&#39;introspectable&#39;：IIntrospectable、 &#39;related&#39;：[関連するIIntrospectablesのシーケンス]}、...]） `` `形式のタプルのシーケンスを取得します。 `` sort_key``が `` None``の場合、各イントロスペクターブルシーケンスは、イントロスペクターがイントロスペクターに追加された順に返されます。それ以外の場合、sort_keyはIIntrospectableを受け取り、その値を返します（alaはPythonの `` sorted``呼び出し可能関数の `` key``関数です）。"

#: ../../docstring of pyramid.interfaces.IIntrospector.remove:1
msgid ""
"Remove the IIntrospectable related to ``category_name`` and "
"``discriminator`` from the introspector, and fix up any relations that "
"the introspectable participates in. This method will not raise an error "
"if an introspectable related to the category name and discriminator does "
"not exist."
msgstr "イントロスペクサから `` category_name``と `` discriminator``に関連するIIntrospectableを削除し、イントロスペクサブルが関与する関係を修正します。カテゴリ名とディスクリミネータに関連するイントロスペクタブルが存在する。"

#: ../../docstring of pyramid.interfaces.IIntrospector.related:1
msgid ""
"Return a sequence of IIntrospectables related to the IIntrospectable "
"``intr``. Return the empty sequence if no relations for exist."
msgstr "IIntrospectableの `` intr``に関連するIIntrospectablesのシーケンスを返します。関係が存在しない場合は、空のシーケンスを返します。"

#: ../../docstring of pyramid.interfaces.IIntrospector.add:1
msgid ""
"Add the IIntrospectable ``intr`` (use instead of "
":meth:`pyramid.interfaces.IIntrospector.add` when you have a custom "
"IIntrospectable). Replaces any existing introspectable registered using "
"the same category/discriminator."
msgstr "IIntrospectable `` intr``を追加します（カスタムIIntrospectableを持っているときは、：meth： `pyramid.interfaces.IIntrospector.add`の代わりに使用します）。同じカテゴリ/弁別子を使用して登録された既存のイントロスペクトなものを置き換えます。"

#: ../../docstring of pyramid.interfaces.IIntrospector.add:6
#: pyramid.interfaces.IIntrospector.relate:8
#: pyramid.interfaces.IIntrospector.unrelate:8
msgid ""
"This method is not typically called directly, instead it's called "
"indirectly by :meth:`pyramid.interfaces.IIntrospector.register`"
msgstr "このメソッドは通常、直接呼び出されるのではなく、meth： `pyramid.interfaces.IIntrospector.register`によって間接的に呼び出されます。"

#: ../../docstring of pyramid.interfaces.IIntrospector.relate:1
msgid ""
"Given any number of ``(category_name, discriminator)`` pairs passed as "
"positional arguments, relate the associated introspectables to each "
"other. The introspectable related to each pair must have already been "
"added via ``.add`` or ``.add_intr``; a :exc:`KeyError` will result if "
"this is not true.  An error will not be raised if any pair has already "
"been associated with another."
msgstr "任意の数の ``（category_name、discriminator）対が位置引数として渡された場合、関連するイントロスペクティブを互いに関連付ける。各ペアに関連するイントロスペクタブルは、 `` .add``または `.add_intr``を介して既に追加されていなければなりません。これが真でない場合、a：exc： `KeyError`が返されます。ペアがすでに別のペアに関連付けられている場合、エラーは発生しません。"

#: ../../docstring of pyramid.interfaces.IIntrospector.unrelate:1
msgid ""
"Given any number of ``(category_name, discriminator)`` pairs passed as "
"positional arguments, unrelate the associated introspectables from each "
"other. The introspectable related to each pair must have already been "
"added via ``.add`` or ``.add_intr``; a :exc:`KeyError` will result if "
"this is not true.  An error will not be raised if any pair is not already"
" related to another."
msgstr "任意の数の ``（category_name、discriminator）対が位置引数として渡された場合、関連するイントロスペクタブルを互いに関連付けることはありません。各ペアに関連するイントロスペクタブルは、 `` .add``または `.add_intr``を介して既に追加されていなければなりません。これが真でない場合、a：exc： `KeyError`が返されます。ペアがまだ別のペアと関連していない場合、エラーは発生しません。"

#: of pyramid.interfaces.IActionInfo:1
msgid ""
"Class which provides code introspection capability associated with an "
"action.  The ParserInfo class used by ZCML implements the same interface."
msgstr "アクションに関連付けられたコードイントロスペクション機能を提供するクラス。 ZCMLによって使用されるParserInfoクラスは、同じインタフェースを実装します。"

#: ../../docstring of pyramid.interfaces.IActionInfo.file:1
msgid "Filename of action-invoking code as a string"
msgstr "アクションを呼び出すコードのファイル名"

#: ../../docstring of pyramid.interfaces.IActionInfo.line:1
msgid ""
"Starting line number in file (as an integer) of action-invoking code.This"
" will be ``None`` if the value could not be determined."
msgstr "行番号をアクション呼び出しコードのファイルとして（整数で）開始します。値が決定できなかった場合、これは `` None``になります。"

#: ../../docstring of pyramid.interfaces.IActionInfo.__str__:1
msgid ""
"Return a representation of the action information (including source code "
"from file, if possible)"
msgstr "アクション情報の表現を返します（可能であれば、ファイルからのソースコードを含む）"

#: of pyramid.interfaces.IAssetDescriptor:1
msgid "Describes an :term:`asset`."
msgstr "：term： `asset`について説明します。"

#: ../../docstring of pyramid.interfaces.IAssetDescriptor.absspec:1
msgid ""
"Returns the absolute asset specification for this asset (e.g. "
"``mypackage:templates/foo.pt``)."
msgstr "このアセットの絶対アセット仕様を返します（例えば、 `` mypackage：templates / foo.pt``など）。"

#: ../../docstring of pyramid.interfaces.IAssetDescriptor.abspath:1
msgid "Returns an absolute path in the filesystem to the asset."
msgstr "ファイルシステム内のアセットへの絶対パスを返します。"

#: ../../docstring of pyramid.interfaces.IAssetDescriptor.stream:1
msgid ""
"Returns an input stream for reading asset contents.  Raises an exception "
"if the asset is a directory or does not exist."
msgstr "アセットコンテンツを読み込むための入力ストリームを返します。アセットがディレクトリであるか存在しない場合に例外を発生させます。"

#: ../../docstring of pyramid.interfaces.IAssetDescriptor.isdir:1
msgid "Returns True if the asset is a directory, otherwise returns False."
msgstr "アセットがディレクトリの場合はTrueを返し、そうでない場合はFalseを返します。"

#: ../../docstring of pyramid.interfaces.IAssetDescriptor.listdir:1
msgid ""
"Returns iterable of filenames of directory contents.  Raises an exception"
" if asset is not a directory."
msgstr "ディレクトリの内容のファイル名の繰り返しを返します。 assetがディレクトリでない場合は例外を発生させます。"

#: ../../docstring of pyramid.interfaces.IAssetDescriptor.exists:1
msgid "Returns True if asset exists, otherwise returns False."
msgstr "アセットが存在する場合はTrueを返し、それ以外の場合はFalseを返します。"

#: ../../docstring of pyramid.interfaces.IResourceURL.virtual_path:1
msgid "The virtual url path of the resource as a string."
msgstr "文字列としてのリソースの仮想URLパス。"

#: ../../docstring of pyramid.interfaces.IResourceURL.physical_path:1
msgid "The physical url path of the resource as a string."
msgstr "文字列としてのリソースの物理URLパス。"

#: ../../docstring of pyramid.interfaces.IResourceURL.virtual_path_tuple:1
msgid "The virtual url path of the resource as a tuple.  (New in 1.5)"
msgstr "タプルとしてのリソースの仮想URLパス。 （1.5の新機能）"

#: ../../docstring of pyramid.interfaces.IResourceURL.physical_path_tuple:1
msgid "The physical url path of the resource as a tuple. (New in 1.5)"
msgstr "タプルとしてのリソースの物理URLパス。 （1.5の新機能）"

#: of pyramid.interfaces.ICacheBuster:1
msgid ""
"A cache buster modifies the URL generation machinery for "
":meth:`~pyramid.request.Request.static_url`. See :ref:`cache_busting`."
msgstr "キャッシュバスターは：meth： `〜pyramid.request.Request.static_url`のURL生成機構を変更します。参照：ref： `cache_busting`を参照してください。"

#: ../../docstring of pyramid.interfaces.ICacheBuster.__call__:1
msgid ""
"Modifies a subpath and/or keyword arguments from which a static asset URL"
" will be computed during URL generation."
msgstr "URL生成中に静的アセットURLが計算されるサブパスまたはキーワード引数を変更します。"

#: ../../docstring of pyramid.interfaces.ICacheBuster.__call__:4
msgid ""
"The ``subpath`` argument is a path of ``/``-delimited segments that "
"represent the portion of the asset URL which is used to find the asset. "
"The ``kw`` argument is a dict of keywords that are to be passed "
"eventually to :meth:`~pyramid.request.Request.static_url` for URL "
"generation.  The return value should be a two-tuple of ``(subpath, kw)`` "
"where ``subpath`` is the relative URL from where the file is served and "
"``kw`` is the same input argument. The return value should be modified to"
" include the cache bust token in the generated URL."
msgstr "`` subpath``引数は、アセットを見つけるのに使われるアセットURLの部分を表す `` / ``で区切られたセグメントのパスです。 `` kw``引数は、URL生成のために最終的に：meth： `〜pyramid.request.Request.static_url`に渡されるキーワードの辞書です。戻り値は、 ``（subpath、kw） ``の2タプルでなければなりません。 `` subpath``は、ファイルが提供される相対URLであり、 `` kw``は同じ入力引数です。戻り値は、生成されたURLにキャッシュバストトークンを含めるように変更する必要があります。"

#: ../../docstring of pyramid.interfaces.ICacheBuster.__call__:14
msgid ""
"The ``kw`` dictionary contains extra arguments passed to "
":meth:`~pyramid.request.Request.static_url` as well as some extra items "
"that may be usful including:"
msgstr "`` kw``辞書には：meth： `〜pyramid.request.Request.static_url`に渡される余分な引数が含まれています。"

#: ../../docstring of pyramid.interfaces.ICacheBuster.__call__:18
msgid ""
"``pathspec`` is the path specification for the resource to be cache "
"busted."
msgstr "`` pathspec``は、キャッシュを破棄するリソースのパス指定です。"

#: ../../docstring of pyramid.interfaces.ICacheBuster.__call__:21
msgid ""
"``rawspec`` is the original location of the file, ignoring any calls to "
":meth:`pyramid.config.Configurator.override_asset`."
msgstr "`` rawspec``はファイルの元の場所です：meth： `pyramid.config.Configurator.override_asset`への呼び出しは無視されます。"

#: ../../docstring of pyramid.interfaces.ICacheBuster.__call__:24
msgid ""
"The ``pathspec`` and ``rawspec`` values are only different in cases where"
" an asset has been mounted into a virtual location using "
":meth:`pyramid.config.Configurator.override_asset`. For example, with a "
"call to ``request.static_url('myapp:static/foo.png'), the ``pathspec`` is"
" ``myapp:static/foo.png`` whereas the ``rawspec`` may be "
"``themepkg:bar.png``, assuming a call to "
"``config.override_asset('myapp:static/foo.png', 'themepkg:bar.png')``."
msgstr "`` pathspec``と `` rawspec``の値は、アセットが：meth： `pyramid.config.Configurator.override_asset`を使って仮想位置にマウントされている場合にのみ異なります。たとえば、 `` request.static_url（ &#39;myapp：static / foo.png&#39;）を呼び出すと、 `` pathspec``は `` myapp：static / foo.png``ですが、 `` rawspec``はconfig.override_asset（ &#39;myapp：static / foo.png&#39;、 &#39;themepkg：bar.png&#39;） ``を呼んでいると仮定して、 `` themepkg：bar.png``になります。"

#: ../../docstring of pyramid.interfaces.IViewDeriver.options:1
msgid ""
"A list of supported options to be passed to "
":meth:`pyramid.config.Configurator.add_view`. This attribute is optional."
msgstr "渡されるサポートされるオプションのリスト：meth： `pyramid.config.Configurator.add_view`。この属性はオプションです。"

#: ../../docstring of pyramid.interfaces.IViewDeriver.__call__:1
msgid "Derive a new view from the supplied view."
msgstr "提供されたビューから新しいビューを派生させます。"

#: ../../docstring of pyramid.interfaces.IViewDeriver.__call__:3
msgid ""
"View options, package information and registry are available on ``info``,"
" an instance of :class:`pyramid.interfaces.IViewDeriverInfo`."
msgstr "ビューオプション、パッケージ情報、レジストリは `` info``：class： `pyramid.interfaces.IViewDeriverInfo`のインスタンスで利用できます。"

#: ../../docstring of pyramid.interfaces.IViewDeriver.__call__:6
msgid "The ``view`` is a callable accepting ``(context, request)``."
msgstr "`` view``は ``（context、request） `&#39;を受け入れる呼び出し可能です。"

#: of pyramid.interfaces.IViewDeriverInfo:1
msgid ""
"An object implementing this interface is passed to every :term:`view "
"deriver` during configuration."
msgstr "このインタフェースを実装するオブジェクトは、コンフィグレーション時にterm： `view deriver &#39;に渡されます。"

#: ../../docstring of pyramid.interfaces.IViewDeriverInfo.registry:1
msgid "The \"current\" application registry where the view was created"
msgstr "ビューが作成された\ &quot;現在の\&quot;アプリケーションレジストリ"

#: ../../docstring of pyramid.interfaces.IViewDeriverInfo.package:1
msgid "The \"current package\" where the view configuration statement was found"
msgstr "ビュー構成ステートメントが見つかった\ &quot;現在のパッケージ\&quot;"

#: ../../docstring of pyramid.interfaces.IViewDeriverInfo.options:1
msgid ""
"The view options passed to the view, including any default values that "
"were not overriden"
msgstr "オーバーライドされなかったデフォルト値を含め、ビューに渡されるビューオプション"

#: ../../docstring of pyramid.interfaces.IViewDeriverInfo.predicates:1
msgid "The list of predicates active on the view"
msgstr "ビューでアクティブな述語のリスト"

#: ../../docstring of pyramid.interfaces.IViewDeriverInfo.original_view:1
msgid "The original view object being wrapped"
msgstr "ラップされている元のビューオブジェクト"

#: ../../docstring of pyramid.interfaces.IViewDeriverInfo.exception_only:1
msgid "The view will only be invoked for exceptions"
msgstr "ビューは例外に対してのみ呼び出されます"

