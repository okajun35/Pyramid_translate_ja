# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""

#: ../../api/registry.rst:4
msgid ":mod:`pyramid.registry`"
msgstr "(機械翻訳) :mod:`pyramid.registry`"

#: of pyramid.registry.Registry:1
msgid "A registry object is an :term:`application registry`."
msgstr "レジストリオブジェクトは：term： `アプリケーションレジストリ &#39;です。"

#: of pyramid.registry.Registry:3
msgid ""
"It is used by the framework itself to perform mappings of URLs to view "
"callables, as well as servicing other various framework duties. A "
"registry has its own internal API, but this API is rarely used by Pyramid"
" application developers (it's usually only used by developers of the "
"Pyramid framework and Pyramid addons).  But it has a number of attributes"
" that may be useful to application developers within application code, "
"such as ``settings``, which is a dictionary containing application "
"deployment settings."
msgstr "これはフレームワーク自体がURLのマッピングを実行して呼び出し可能ファイルを表示したり、その他のさまざまなフレームワークを処理するために使用されます。レジストリには独自の内部APIがありますが、このAPIはPyramidアプリケーション開発者によってほとんど使用されません（PyramidフレームワークとPyramidアドオンの開発者のみが使用します）。しかし、アプリケーションデプロイメント設定を含む辞書である `` settings``のように、アプリケーションコード内のアプリケーション開発者にとって有用ないくつかの属性があります。"

#: of pyramid.registry.Registry:12
msgid ""
"For information about the purpose and usage of the application registry, "
"see :ref:`zca_chapter`."
msgstr "アプリケーションレジストリの目的と使用法については、：ref： `zca_chapter`を参照してください。"

#: of pyramid.registry.Registry:15
msgid ""
"The registry may be used both as an :class:`pyramid.interfaces.IDict` and"
" as a Zope component registry. These two ways of storing configuration "
"are independent. Applications will tend to prefer to store information as"
" key-values whereas addons may prefer to use the component registry to "
"avoid naming conflicts and to provide more complex lookup mechanisms."
msgstr "レジストリは：class： `pyramid.interfaces.IDict`とZopeコンポーネントレジストリの両方として使用できます。構成を格納するこれらの2つの方法は独立しています。アプリケーションはキー値として情報を保存する傾向がありますが、アドオンはコンポーネントレジストリを使用して名前の競合を回避し、より複雑なルックアップメカニズムを提供する方が望ましい場合があります。"

#: of pyramid.registry.Registry:22
msgid ""
"The application registry is usually accessed as ``request.registry`` in "
"application code. By the time a registry is used to handle requests it "
"should be considered frozen and read-only. Any changes to its internal "
"state should be done with caution and concern for thread-safety."
msgstr "アプリケーションレジストリは、通常、アプリケーションコードの `` request.registry``としてアクセスされます。要求を処理するためにレジストリが使用されるときには、凍結され、読み取り専用と見なされるべきです。内部状態の変更は、スレッドセーフに関する注意と注意が必要です。"

#: ../../api/registry.rst:12
msgid ""
"The dictionary-like :term:`deployment settings` object.  See "
":ref:`deployment_settings` for information.  This object is often "
"accessed as ``request.registry.settings`` or ``config.registry.settings``"
" in a typical Pyramid application."
msgstr "dictionary-like：term： `deployment settings`オブジェクトです。詳細は：ref： `deployment_settings`を参照してください。このオブジェクトは、一般的なPyramidアプリケーションで `` request.registry.settings``または `` config.registry.settings``としてアクセスされることがよくあります。"

#: ../../api/registry.rst:21
msgid ""
"When a registry is set up (or created) by a :term:`Configurator`, this "
"attribute will be the shortcut for "
":attr:`pyramid.config.Configurator.package_name`."
msgstr "レジストリが：term： `Configurator`によってセットアップ（または作成）されると、この属性は：attr：` pyramid.config.Configurator.package_name`のショートカットになります。"

#: ../../api/registry.rst:25
msgid ""
"This attribute is often accessed as ``request.registry.package_name`` or "
"``config.registry.package_name`` or ``config.package_name`` in a typical "
"Pyramid application."
msgstr "この属性は、典型的なPyramidアプリケーションで `` request.registry.package_name``または `` config.registry.package_name``または `` config.package_name``としてアクセスされることがよくあります。"

#: ../../api/registry.rst:33
msgid ""
"When a registry is set up (or created) by a :term:`Configurator`, the "
"registry will be decorated with an instance named ``introspector`` "
"implementing the :class:`pyramid.interfaces.IIntrospector` interface."
msgstr "：term： `Configurator`によってレジストリが設定（または作成）されると、レジストリは：class：` pyramid.interfaces.IIntrospector`インタフェースを実装する `` introspector``というインスタンスで修飾されます。"

#: ../../api/registry.rst:39
msgid "See also :attr:`pyramid.config.Configurator.introspector`."
msgstr "attr： `pyramid.config.Configurator.introspector`も参照してください。"

#: ../../api/registry.rst:41
msgid ""
"When a registry is created \"by hand\", however, this attribute will not "
"exist until set up by a configurator."
msgstr "ただし、レジストリが\ &quot;手で\&quot;作成された場合、この属性はコンフィギュレータによってセットアップされるまで存在しません。"

#: ../../api/registry.rst:44
msgid ""
"This attribute is often accessed as ``request.registry.introspector`` in "
"a typical Pyramid application."
msgstr "この属性は、典型的なPyramidアプリケーションで `` request.registry.introspector``としてアクセスされることがよくあります。"

#: ../../api/registry.rst:49
msgid ""
"Fire one or more events. All event subscribers to the event(s) will be "
"notified. The subscribers will be called synchronously. This method is "
"often accessed as ``request.registry.notify`` in Pyramid applications to "
"fire custom events. See :ref:`custom_events` for more information."
msgstr "1つ以上のイベントを発生させる。イベントのすべてのイベント加入者に通知されます。加入者は同期して呼び出されます。このメソッドはPyramidアプリケーションで `` request.registry.notify``としてアクセスされ、カスタムイベントを起動します。詳細は：ref： `custom_events`を参照してください。"

#: ../../api/registry.rst:60
msgid ""
"The default implementation of the interface "
":class:`pyramid.interfaces.IIntrospectable` used by framework exenders. "
"An instance of this class is created when "
":attr:`pyramid.config.Configurator.introspectable` is called."
msgstr "フレームワークエキスパンダーによって使用されるインタフェースのデフォルトの実装：class： `pyramid.interfaces.IIntrospectable`。このクラスのインスタンスは、attr： `pyramid.config.Configurator.introspectable`が呼び出されたときに作成されます。"

#: of pyramid.registry.Deferred:1
msgid ""
"Can be used by a third-party configuration extender to wrap a "
":term:`discriminator` during configuration if an immediately hashable "
"discriminator cannot be computed because it relies on unresolved values. "
"The function should accept no arguments and should return a hashable "
"discriminator."
msgstr "未解決の値に依存しているため、即座にハッシュ可能な識別子を計算できない場合は、構成中に：term： `discriminator`をラップするために、サードパーティの構成拡張機能で使用できます。この関数は引数を受け入れないで、ハッシュ可能な識別子を返さなければなりません。"

#: of pyramid.registry.undefer:1
msgid ""
"Function which accepts an object and returns it unless it is a "
":class:`pyramid.registry.Deferred` instance.  If it is an instance of "
"that class, its ``resolve`` method is called, and the result of the "
"method is returned."
msgstr "オブジェクトを受け入れ、それが：class： `pyramid.registry.Deferred`インスタンスでない限り返す関数です。そのクラスのインスタンスであれば、 `` resolve``メソッドが呼び出され、そのメソッドの結果が返されます。"

#: of pyramid.registry.predvalseq:1
msgid "A subtype of tuple used to represent a sequence of predicate values"
msgstr "述語値のシーケンスを表すために使用されるタプルのサブタイプ"

