# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-28 18:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../api/security.rst:4
msgid ":mod:`pyramid.security`"
msgstr ""

#: ../../api/security.rst:9
msgid "Authentication API Functions"
msgstr ""

#: of pyramid.security.authenticated_userid:1
msgid ""
"A function that returns the value of the property "
":attr:`pyramid.request.Request.authenticated_userid`."
msgstr ""

#: of pyramid.security.authenticated_userid:4
msgid "Use :attr:`pyramid.request.Request.authenticated_userid` instead."
msgstr ""

#: of pyramid.security.unauthenticated_userid:1
msgid ""
"A function that returns the value of the property "
":attr:`pyramid.request.Request.unauthenticated_userid`."
msgstr ""

#: of pyramid.security.unauthenticated_userid:4
msgid "Use :attr:`pyramid.request.Request.unauthenticated_userid` instead."
msgstr ""

#: of pyramid.security.effective_principals:1
msgid ""
"A function that returns the value of the property "
":attr:`pyramid.request.Request.effective_principals`."
msgstr ""

#: of pyramid.security.effective_principals:4
msgid "Use :attr:`pyramid.request.Request.effective_principals` instead."
msgstr ""

#: of pyramid.security.forget:1
msgid ""
"Return a sequence of header tuples (e.g. ``[('Set-Cookie', 'foo=abc')]``)"
" suitable for 'forgetting' the set of credentials possessed by the "
"currently authenticated user.  A common usage might look like so within "
"the body of a view function (``response`` is assumed to be an "
":term:`WebOb` -style :term:`response` object computed previously by the "
"view code):"
msgstr ""

#: of pyramid.security.forget:15
msgid ""
"If no :term:`authentication policy` is in use, this function will always "
"return an empty sequence."
msgstr ""

#: of pyramid.security.remember:1
msgid ""
"Returns a sequence of header tuples (e.g. ``[('Set-Cookie', "
"'foo=abc')]``) on this request's response. These headers are suitable for"
" 'remembering' a set of credentials implied by the data passed as "
"``userid`` and ``*kw`` using the current :term:`authentication policy`.  "
"Common usage might look like so within the body of a view function "
"(``response`` is assumed to be a :term:`WebOb` -style :term:`response` "
"object computed previously by the view code):"
msgstr ""

#: of pyramid.security.remember:18
msgid ""
"If no :term:`authentication policy` is in use, this function will always "
"return an empty sequence. If used, the composition and meaning of "
"``**kw`` must be agreed upon by the calling code and the effective "
"authentication policy."
msgstr ""

#: of pyramid.security.remember:23
msgid "Renamed the ``principal`` argument to ``userid`` to clarify its purpose."
msgstr ""

#: ../../api/security.rst:22
msgid "Authorization API Functions"
msgstr ""

#: of pyramid.security.has_permission:1
msgid ""
"A function that calls :meth:`pyramid.request.Request.has_permission` and "
"returns its result."
msgstr ""

#: of pyramid.security.has_permission:4
msgid "Use :meth:`pyramid.request.Request.has_permission` instead."
msgstr ""

#: of pyramid.security.has_permission:7
msgid ""
"If context is None, then attempt to use the context attribute of self; if"
" not set, then the AttributeError is propagated."
msgstr ""

#: of pyramid.security.principals_allowed_by_permission:1
msgid ""
"Provided a ``context`` (a resource object), and a ``permission`` (a "
"string or unicode object), if a :term:`authorization policy` is in "
"effect, return a sequence of :term:`principal` ids that possess the "
"permission in the ``context``.  If no authorization policy is in effect, "
"this will return a sequence with the single value "
":mod:`pyramid.security.Everyone` (the special principal identifier "
"representing all principals)."
msgstr ""

#: of pyramid.security.principals_allowed_by_permission:11
msgid ""
"even if an :term:`authorization policy` is in effect, some (exotic) "
"authorization policies may not implement the required machinery for this "
"function; those will cause a :exc:`NotImplementedError` exception to be "
"raised when this function is invoked."
msgstr ""

#: of pyramid.security.view_execution_permitted:1
msgid ""
"If the view specified by ``context`` and ``name`` is protected by a "
":term:`permission`, check the permission associated with the view using "
"the effective authentication/authorization policies and the ``request``."
"  Return a boolean result.  If no :term:`authorization policy` is in "
"effect, or if the view is not protected by a permission, return ``True``."
" If no view can view found, an exception will be raised."
msgstr ""

#: of pyramid.security.view_execution_permitted:9
msgid "An exception is raised if no view is found."
msgstr ""

#: ../../api/security.rst:31
msgid "Constants"
msgstr ""

#: ../../api/security.rst:35
msgid ""
"The special principal id named 'Everyone'.  This principal id is granted "
"to all requests.  Its actual value is the string 'system.Everyone'."
msgstr ""

#: ../../api/security.rst:41
msgid ""
"The special principal id named 'Authenticated'.  This principal id is "
"granted to all requests which contain any other non-Everyone principal id"
" (according to the :term:`authentication policy`). Its actual value is "
"the string 'system.Authenticated'."
msgstr ""

#: ../../api/security.rst:48
msgid ""
"An object that can be used as the ``permission`` member of an ACE which "
"matches all permissions unconditionally.  For example, an ACE that uses "
"``ALL_PERMISSIONS`` might be composed like so: ``('Deny', "
"'system.Everyone', ALL_PERMISSIONS)``."
msgstr ""

#: ../../api/security.rst:55
msgid ""
"A convenience shorthand ACE that defines ``('Deny', 'system.Everyone', "
"ALL_PERMISSIONS)``.  This is often used as the last ACE in an ACL in "
"systems that use an \"inheriting\" security policy, representing the "
"concept \"don't inherit any other ACEs\"."
msgstr ""

#: ../../api/security.rst:62
msgid ""
"A special permission which indicates that the view should always be "
"executable by entirely anonymous users, regardless of the default "
"permission, bypassing any :term:`authorization policy` that may be in "
"effect.  Its actual value is the string '__no_permission_required__'."
msgstr ""

#: ../../api/security.rst:69
msgid "Return Values"
msgstr ""

#: ../../api/security.rst:73
msgid ""
"The ACE \"action\" (the first element in an ACE e.g. ``(Allow, Everyone, "
"'read')`` that means allow access.  A sequence of ACEs makes up an ACL.  "
"It is a string, and its actual value is \"Allow\"."
msgstr ""

#: ../../api/security.rst:79
msgid ""
"The ACE \"action\" (the first element in an ACE e.g. ``(Deny, 'george', "
"'read')`` that means deny access.  A sequence of ACEs makes up an ACL.  "
"It is a string, and its actual value is \"Deny\"."
msgstr ""

#: of pyramid.security.Denied:1
msgid ""
"An instance of ``Denied`` is returned when a security-related API or "
"other :app:`Pyramid` code denies an action unrelated to an ACL check.  It"
" evaluates equal to all boolean false types.  It has an attribute named "
"``msg`` describing the circumstances for the deny."
msgstr ""

#: of pyramid.security.ACLAllowed.__new__:1
#: pyramid.security.ACLDenied.__new__:1 pyramid.security.Allowed.__new__:1
#: pyramid.security.Denied.__new__:1
msgid "Create a new instance."
msgstr ""

#: of pyramid.security.ACLAllowed.__new__ pyramid.security.ACLDenied.__new__
#: pyramid.security.Allowed.__new__ pyramid.security.Denied.__new__
msgid "パラメータ"
msgstr ""

#: of pyramid.security.Allowed.__new__:3 pyramid.security.Denied.__new__:3
msgid "A format string explaining the reason for denial."
msgstr ""

#: of pyramid.security.Allowed.__new__:4 pyramid.security.Denied.__new__:4
msgid ""
"Arguments are stored and used with the format string to generate the "
"``msg``."
msgstr ""

#: of pyramid.security.ACLAllowed.msg:1 pyramid.security.ACLDenied.msg:1
#: pyramid.security.Allowed.msg:1 pyramid.security.Denied.msg:1
msgid "A string indicating why the result was generated."
msgstr ""

#: of pyramid.security.Allowed:1
msgid ""
"An instance of ``Allowed`` is returned when a security-related API or "
"other :app:`Pyramid` code allows an action unrelated to an ACL check.  It"
" evaluates equal to all boolean true types.  It has an attribute named "
"``msg`` describing the circumstances for the allow."
msgstr ""

#: of pyramid.security.ACLDenied:1
msgid ""
"An instance of ``ACLDenied`` is a specialization of "
":class:`pyramid.security.Denied` that represents that a security check "
"made explicitly against ACL was denied.  It evaluates equal to all "
"boolean false types.  It also has the following attributes: ``acl``, "
"``ace``, ``permission``, ``principals``, and ``context``.  These "
"attributes indicate the security values involved in the request.  Its "
"``__str__`` method prints a summary of these attributes for debugging "
"purposes. The same summary is available as the ``msg`` attribute."
msgstr ""

#: of pyramid.security.ACLAllowed.__new__:3
#: pyramid.security.ACLDenied.__new__:3
msgid "The :term:`ACE` that matched, triggering the result."
msgstr ""

#: of pyramid.security.ACLAllowed.__new__:4
#: pyramid.security.ACLDenied.__new__:4
msgid "The :term:`ACL` containing ``ace``."
msgstr ""

#: of pyramid.security.ACLAllowed.__new__:5
#: pyramid.security.ACLDenied.__new__:5
msgid "The required :term:`permission`."
msgstr ""

#: of pyramid.security.ACLAllowed.__new__:6
#: pyramid.security.ACLDenied.__new__:6
msgid "The list of :term:`principals <principal>` provided."
msgstr ""

#: of pyramid.security.ACLAllowed.__new__:7
#: pyramid.security.ACLDenied.__new__:7
msgid "The :term:`context` providing the :term:`lineage` searched."
msgstr ""

#: of pyramid.security.ACLAllowed:1
msgid ""
"An instance of ``ACLAllowed`` is a specialization of "
":class:`pyramid.security.Allowed` that represents that a security check "
"made explicitly against ACL was allowed.  It evaluates equal to all "
"boolean true types.  It also has the following attributes: ``acl``, "
"``ace``, ``permission``, ``principals``, and ``context``.  These "
"attributes indicate the security values involved in the request.  Its "
"``__str__`` method prints a summary of these attributes for debugging "
"purposes. The same summary is available as the ``msg`` attribute."
msgstr ""

