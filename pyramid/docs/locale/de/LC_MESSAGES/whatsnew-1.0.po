# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-28 18:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../whatsnew-1.0.rst:2
msgid "What's New in Pyramid 1.0"
msgstr ""

#: ../../whatsnew-1.0.rst:4
msgid ""
"This article explains the new features in Pyramid version 1.0 as compared"
" to its predecessor, :mod:`repoze.bfg` 1.3.  It also documents backwards "
"incompatibilities between the two versions and deprecations added to "
"Pyramid 1.0, as well as software dependency changes and notable "
"documentation additions."
msgstr ""

#: ../../whatsnew-1.0.rst:11
msgid "Major Feature Additions"
msgstr ""

#: ../../whatsnew-1.0.rst:13
msgid "The major feature additions in Pyramid 1.0 are:"
msgstr ""

#: ../../whatsnew-1.0.rst:15
msgid "New name and branding association with the Pylons Project."
msgstr ""

#: ../../whatsnew-1.0.rst:17
msgid "BFG conversion script"
msgstr ""

#: ../../whatsnew-1.0.rst:19
msgid "Scaffold improvements"
msgstr ""

#: ../../whatsnew-1.0.rst:21
msgid "Terminology changes"
msgstr ""

#: ../../whatsnew-1.0.rst:23
msgid "Better platform compatibility and support"
msgstr ""

#: ../../whatsnew-1.0.rst:25
msgid "Direct built-in support for the Mako templating language."
msgstr ""

#: ../../whatsnew-1.0.rst:27
msgid "Built-in support for sessions."
msgstr ""

#: ../../whatsnew-1.0.rst:29
msgid "Updated URL dispatch features"
msgstr ""

#: ../../whatsnew-1.0.rst:31
msgid "Better imperative extensibility"
msgstr ""

#: ../../whatsnew-1.0.rst:33
msgid "ZCML externalized"
msgstr ""

#: ../../whatsnew-1.0.rst:35
msgid "Better support for global template variables during rendering"
msgstr ""

#: ../../whatsnew-1.0.rst:37
msgid "View mappers"
msgstr ""

#: ../../whatsnew-1.0.rst:39
msgid "Testing system improvements"
msgstr ""

#: ../../whatsnew-1.0.rst:41
msgid "Authentication support improvements"
msgstr ""

#: ../../whatsnew-1.0.rst:43
msgid "Documentation improvements"
msgstr ""

#: ../../whatsnew-1.0.rst:46
msgid "New Name and Branding"
msgstr ""

#: ../../whatsnew-1.0.rst:48
msgid ""
"The name of ``repoze.bfg`` has been changed to Pyramid.  The project is "
"also now a subproject of a new entity, \"The Pylons Project\".  The "
"Pylons Project is the project name for a collection of web-framework-"
"related technologies. Pyramid was the first package in the Pylons "
"Project. Other packages to the collection have been added over time, such"
" as support packages useful for Pylons 1 users as well as ex-Zope users."
"  Pyramid is the successor to both :mod:`repoze.bfg` and :term:`Pylons` "
"version 1."
msgstr ""

#: ../../whatsnew-1.0.rst:56
msgid ""
"The Pyramid codebase is derived almost entirely from :mod:`repoze.bfg` "
"with some changes made for the sake of Pylons 1 compatibility."
msgstr ""

#: ../../whatsnew-1.0.rst:59
msgid ""
"Pyramid is technically backwards incompatible with :mod:`repoze.bfg`, as "
"it has a new package name, so older imports from the ``repoze.bfg`` "
"module will fail if you do nothing to your existing :mod:`repoze.bfg` "
"application. However, you won't have to do much to use your existing BFG "
"applications on Pyramid. There's automation which will change most of "
"your import statements and ZCML declarations. See "
"http://docs.pylonsproject.org/projects/pyramid/current/tutorials/bfg/index.html"
" for upgrade instructions."
msgstr ""

#: ../../whatsnew-1.0.rst:68
msgid ""
"Pylons 1 users will need to do more work to use Pyramid, as Pyramid "
"shares no \"DNA\" with Pylons.  It is hoped that over time documentation "
"and upgrade code will be developed to help Pylons 1 users transition to "
"Pyramid more easily."
msgstr ""

#: ../../whatsnew-1.0.rst:72
msgid ""
":mod:`repoze.bfg` version 1.3 will be its last major release. Minor "
"updates will be made for critical bug fixes.  Pylons version 1 will "
"continue to see maintenance releases, as well."
msgstr ""

#: ../../whatsnew-1.0.rst:76
msgid ""
"The Repoze project will continue to exist. Repoze will be able to regain "
"its original focus: bringing Zope technologies to WSGI. The popularity of"
" :mod:`repoze.bfg` as its own web framework hindered this goal."
msgstr ""

#: ../../whatsnew-1.0.rst:80
msgid ""
"We hope that people are attracted at first by the spirit of cooperation "
"demonstrated by the Pylons Project and the merging of development "
"communities. It takes humility to sacrifice a little sovereignty and work"
" together. The opposite, forking or splintering of projects, is much more"
" common in the open source world. We feel there is a limited amount of "
"oxygen in the space of \"top-tier\" Python web frameworks and we donâ€™t do"
" the Python community a service by over-crowding.  By merging the "
":mod:`repoze.bfg` and the philosophically-similar Pylons communities, "
"both gain an expanded audience and a stronger chance of future success."
msgstr ""

#: ../../whatsnew-1.0.rst:91
msgid "BFG Conversion Script"
msgstr ""

#: ../../whatsnew-1.0.rst:93
msgid ""
"The ``bfg2pyramid`` conversion script performs a mostly automated "
"conversion of an existing :mod:`repoze.bfg` application to Pyramid.  The "
"process is described in \"Converting a BFG Application to Pyramid\"."
msgstr ""

#: ../../whatsnew-1.0.rst:98
msgid "Scaffold Improvements"
msgstr ""

#: ../../whatsnew-1.0.rst:100
msgid "The scaffolds now have much nicer CSS and graphics."
msgstr ""

#: ../../whatsnew-1.0.rst:102
msgid ""
"The ``development.ini``, generated by all scaffolds, is now configured to"
" use the WebError interactive exception debugger by default."
msgstr ""

#: ../../whatsnew-1.0.rst:105
msgid ""
"All scaffolds have been normalized: each now uses the name ``main`` to "
"represent the function that returns a WSGI application, and each now has "
"roughly the same shape of development.ini style."
msgstr ""

#: ../../whatsnew-1.0.rst:109
msgid ""
"All preexisting scaffolds now use \"imperative\" configuration "
"(``starter``, ``routesalchemy``, ``alchemy``, ``zodb``) instead of ZCML "
"configuration."
msgstr ""

#: ../../whatsnew-1.0.rst:113
msgid ""
"The ``pyramid_zodb``, ``routesalchemy`` and ``pyramid_alchemy`` scaffolds"
" now use a default \"commit veto\" hook when configuring the "
"``repoze.tm2`` transaction manager in ``development.ini``.  This prevents"
" a transaction from being committed when the response status code is "
"within the 400 or 500 ranges."
msgstr ""

#: ../../whatsnew-1.0.rst:121
msgid "See also http://docs.repoze.org/tm2/#using-a-commit-veto."
msgstr ""

#: ../../whatsnew-1.0.rst:124
msgid "Terminology Changes"
msgstr ""

#: ../../whatsnew-1.0.rst:126
msgid ""
"The Pyramid concept previously known as \"model\" is now known as "
"\"resource\". As a result, the following API renames have been made.  "
"Backwards compatibility shims for the old names have been left in place "
"in all cases::"
msgstr ""

#: ../../whatsnew-1.0.rst:154
msgid ""
"All documentation which previously referred to \"model\" now refers to "
"\"resource\"."
msgstr ""

#: ../../whatsnew-1.0.rst:157
msgid ""
"The ``starter`` scaffold now has a ``resources.py`` module instead of a "
"``models.py`` module."
msgstr ""

#: ../../whatsnew-1.0.rst:160
msgid ""
"Positional argument names of various APIs have been changed from "
"``model`` to ``resource``."
msgstr ""

#: ../../whatsnew-1.0.rst:163
msgid ""
"The Pyramid concept previously known as \"resource\" is now known as "
"\"asset\". As a result, the following API changes were made.  Backwards "
"compatibility shims have been left in place as necessary::"
msgstr ""

#: ../../whatsnew-1.0.rst:174
msgid ""
"The (non-API) module previously known as ``pyramid.resource`` is now "
"known as ``pyramid.asset``."
msgstr ""

#: ../../whatsnew-1.0.rst:177
msgid ""
"All docs that previously referred to \"resource specification\" now refer"
" to \"asset specification\"."
msgstr ""

#: ../../whatsnew-1.0.rst:180
msgid ""
"The setting previously known as ``BFG_RELOAD_RESOURCES`` (envvar) or "
"``reload_resources`` (config file) is now known, respectively, as "
"``PYRAMID_RELOAD_ASSETS`` and ``reload_assets``."
msgstr ""

#: ../../whatsnew-1.0.rst:185
msgid "Better Platform Compatibility and Support"
msgstr ""

#: ../../whatsnew-1.0.rst:187
msgid ""
"We've made Pyramid's test suite pass on both Jython and PyPy.  However, "
"Chameleon doesn't work on either, so you'll need to use Mako or Jinja2 "
"templates on these platforms."
msgstr ""

#: ../../whatsnew-1.0.rst:192
msgid "Sessions"
msgstr ""

#: ../../whatsnew-1.0.rst:194
msgid ""
"Pyramid now has built-in sessioning support, documented in "
":ref:`sessions_chapter`.  The sessioning implementation is pluggable.  It"
" also provides flash messaging and cross-site-scripting prevention "
"features."
msgstr ""

#: ../../whatsnew-1.0.rst:198
msgid ""
"Using ``request.session`` now returns a (dictionary-like) session object "
"if a :term:`session factory` has been configured."
msgstr ""

#: ../../whatsnew-1.0.rst:201
msgid ""
"A new argument to the Configurator constructor exists: "
"``session_factory`` and a new method on the configurator exists: "
":meth:`pyramid.config.Configurator.set_session_factory`."
msgstr ""

#: ../../whatsnew-1.0.rst:206
msgid "Mako"
msgstr ""

#: ../../whatsnew-1.0.rst:208
msgid ""
"In addition to Chameleon templating, Pyramid now also provides built-in "
"support for :term:`Mako` templating.  See "
":ref:`available_template_system_bindings` for more information."
msgstr ""

#: ../../whatsnew-1.0.rst:213
msgid "URL Dispatch"
msgstr ""

#: ../../whatsnew-1.0.rst:215
msgid ""
"URL Dispatch now allows for replacement markers to be located anywhere in"
" the pattern, instead of immediately following a ``/``."
msgstr ""

#: ../../whatsnew-1.0.rst:218
msgid ""
"URL Dispatch now uses the form ``{marker}`` to denote a replace marker in"
" the route pattern instead of ``:marker``. The old colon-style marker "
"syntax is still accepted for backwards compatibility. The new format "
"allows a regular expression for that marker location to be used instead "
"of the default ``[^/]+``, for example ``{marker:\\d+}`` is now valid to "
"require the marker to be digits."
msgstr ""

#: ../../whatsnew-1.0.rst:225
msgid ""
"Addded a new API :func:`pyramid.url.current_route_url`, which computes a "
"URL based on the \"current\" route (if any) and its matchdict values."
msgstr ""

#: ../../whatsnew-1.0.rst:228
msgid ""
"Added a ``paster proute`` command which displays a summary of the routing"
" table.  See the narrative documentation section entitled "
":ref:`displaying_application_routes`."
msgstr ""

#: ../../whatsnew-1.0.rst:232
msgid ""
"Added ``debug_routematch`` configuration setting (settable in your "
"``.ini`` file) that logs matched routes including the matchdict and "
"predicates."
msgstr ""

#: ../../whatsnew-1.0.rst:235
msgid ""
"Add a :func:`pyramid.url.route_path` API, allowing folks to generate "
"relative URLs.  Calling ``route_path`` is the same as calling "
":func:`pyramid.url.route_url` with the argument ``_app_url`` equal to the"
" empty string."
msgstr ""

#: ../../whatsnew-1.0.rst:240
msgid ""
"Add a :meth:`pyramid.request.Request.route_path` API.  This is a "
"convenience method of the request which calls "
":func:`pyramid.url.route_url`."
msgstr ""

#: ../../whatsnew-1.0.rst:244
msgid ""
"Added class vars ``matchdict`` and ``matched_route`` to "
":class:`pyramid.request.Request`.  Each is set to ``None`` when a route "
"isn't matched during a request."
msgstr ""

#: ../../whatsnew-1.0.rst:249
msgid "ZCML Externalized"
msgstr ""

#: ../../whatsnew-1.0.rst:251
msgid ""
"The ``load_zcml`` method of a Configurator has been removed from the "
"Pyramid core.  Loading ZCML is now a feature of the :term:`pyramid_zcml` "
"package, which can be downloaded from PyPI.  Documentation for the "
"package should be available via "
"http://docs.pylonsproject.org/projects/pyramid_zcml/en/latest/, which "
"describes how to add a configuration statement to your ``main`` block to "
"reobtain this method.  You will also need to add an ``install_requires`` "
"dependency upon the ``pyramid_zcml`` distribution to your ``setup.py`` "
"file."
msgstr ""

#: ../../whatsnew-1.0.rst:260
msgid ""
"The \"Declarative Configuration\" narrative chapter has been removed (it "
"was moved to the ``pyramid_zcml`` package)."
msgstr ""

#: ../../whatsnew-1.0.rst:263
msgid ""
"Most references to ZCML in narrative chapters have been removed or "
"redirected to ``pyramid_zcml`` locations."
msgstr ""

#: ../../whatsnew-1.0.rst:266
msgid ""
"The ``starter_zcml`` paster scaffold has been moved to the "
"``pyramid_zcml`` package."
msgstr ""

#: ../../whatsnew-1.0.rst:270
msgid "Imperative Two-Phase Configuration"
msgstr ""

#: ../../whatsnew-1.0.rst:272
msgid ""
"To support application extensibility, the :app:`Pyramid` "
":term:`Configurator`, by default, now detects configuration conflicts and"
" allows you to include configuration imperatively from other packages or "
"modules.  It also, by default, performs configuration in two separate "
"phases. This allows you to ignore relative configuration statement "
"ordering in some circumstances.  See :ref:`advconfig_narr` for more "
"information."
msgstr ""

#: ../../whatsnew-1.0.rst:279
msgid ""
"The :meth:`pyramid.config.Configurator.add_directive` allows framework "
"extenders to add methods to the configurator, which allows extenders to "
"avoid subclassing a Configurator just to add methods.  See "
":ref:`add_directive` for more info."
msgstr ""

#: ../../whatsnew-1.0.rst:284
msgid ""
"Surrounding application configuration with ``config.begin()`` and "
"``config.end()`` is no longer necessary.  All scaffolds have been changed"
" to no longer call these functions."
msgstr ""

#: ../../whatsnew-1.0.rst:289
msgid "Better Support for Global Template Variables During Rendering"
msgstr ""

#: ../../whatsnew-1.0.rst:291
msgid ""
"A new event type named :class:`pyramid.interfaces.IBeforeRender` is now "
"sent as an event before a renderer is invoked.  Applications may now "
"subscribe to the ``IBeforeRender`` event type in order to introspect the "
"and modify the set of renderer globals before they are passed to a "
"renderer.  The event object iself has a dictionary-like interface that "
"can be used for this purpose.  For example::"
msgstr ""

#: ../../whatsnew-1.0.rst:306
msgid "View Mappers"
msgstr ""

#: ../../whatsnew-1.0.rst:308
msgid ""
"A \"view mapper\" subsystem has been extracted, which allows framework "
"extenders to control how view callables are constructed and called.  This"
" feature is not useful for \"civilians\", only for extension writers.  "
"See :ref:`using_a_view_mapper` for more information."
msgstr ""

#: ../../whatsnew-1.0.rst:314
msgid "Testing Support Improvements"
msgstr ""

#: ../../whatsnew-1.0.rst:316
msgid ""
"The :func:`pyramid.testing.setUp` and :func:`pyramid.testing.tearDown` "
"APIs have been undeprecated.  They are now the canonical setup and "
"teardown APIs for test configuration, replacing \"direct\" creation of a "
"Configurator.  This is a change designed to provide a facade that will "
"protect against any future Configurator deprecations."
msgstr ""

#: ../../whatsnew-1.0.rst:323
msgid "Authentication Support Improvements"
msgstr ""

#: ../../whatsnew-1.0.rst:325
msgid ""
"The :class:`pyramid.interfaces.IAuthenticationPolicy` interface now "
"specifies an ``unauthenticated_userid`` method.  This method supports an "
"important optimization required by people who are using persistent "
"storages which do not support object caching and whom want to create a "
"\"user object\" as a request attribute."
msgstr ""

#: ../../whatsnew-1.0.rst:331
msgid ""
"A new API has been added to the :mod:`pyramid.security` module named "
"``unauthenticated_userid``.  This API function calls the "
"``unauthenticated_userid`` method of the effective security policy."
msgstr ""

#: ../../whatsnew-1.0.rst:335
msgid ""
"The class :class:`pyramid.authentication.AuthTktCookieHelper` is now an "
"API.  This class can be used by third-party authentication policy "
"developers to help in the mechanics of authentication cookie-setting."
msgstr ""

#: ../../whatsnew-1.0.rst:339
msgid ""
"The :class:`pyramid.authentication.AuthTktAuthenticationPolicy` now "
"accepts a ``tokens`` parameter via :func:`pyramid.security.remember`.  "
"The value must be a sequence of strings.  Tokens are placed into the "
"auth_tkt \"tokens\" field and returned in the auth_tkt cookie."
msgstr ""

#: ../../whatsnew-1.0.rst:344
msgid ""
"Added a ``wild_domain`` argument to "
":class:`pyramid.authentication.AuthTktAuthenticationPolicy`, which "
"defaults to ``True``.  If it is set to ``False``, the feature of the "
"policy which sets a cookie with a wilcard domain will be turned off."
msgstr ""

#: ../../whatsnew-1.0.rst:350
msgid "Documentation Improvements"
msgstr ""

#: ../../whatsnew-1.0.rst:352
msgid ""
"Casey Duncan, a good friend, and an excellent technical writer has given "
"us the gift of professionally editing the entire Pyramid documentation "
"set. Any faults in the documentation are the development team's, and all "
"improvements are his."
msgstr ""

#: ../../whatsnew-1.0.rst:357
msgid ""
"The \"Resource Location and View Lookup\" chapter has been replaced with "
"a variant of Rob Miller's \"Much Ado About Traversal\" (originally "
"published at http://blog.nonsequitarian.org/2010/much-ado-about-"
"traversal/)."
msgstr ""

#: ../../whatsnew-1.0.rst:361
msgid ""
"Many users have contributed documentation fixes and improvements "
"including Ben Bangert, Blaise Laflamme, Rob Miller, Mike Orr, Carlos de "
"la Guardia, Paul Everitt, Tres Seaver, John Shipman, Marius Gedminas, "
"Chris Rossi, Joachim Krebs, Xavier Spriet, Reed O'Brien, William "
"Chambers, Charlie Choiniere, and Jamaludin Ahmad."
msgstr ""

#: ../../whatsnew-1.0.rst:368
msgid "Minor Feature Additions"
msgstr ""

#: ../../whatsnew-1.0.rst:370
msgid ""
"The ``settings`` dictionary passed to the Configurator is now available "
"as ``config.registry.settings`` in configuration code and "
"``request.registry.settings`` in view code)."
msgstr ""

#: ../../whatsnew-1.0.rst:374
msgid ""
":meth:`pyramid.config.Configurator.add_view` now accepts a ``decorator`` "
"keyword argument, a callable which will decorate the view callable before"
" it is added to the registry."
msgstr ""

#: ../../whatsnew-1.0.rst:378
msgid ""
"Allow static renderer provided during view registration to be overridden "
"at request time via a request attribute named ``override_renderer``, "
"which should be the name of a previously registered renderer.  Useful to "
"provide \"omnipresent\" RPC using existing rendered views."
msgstr ""

#: ../../whatsnew-1.0.rst:383
msgid ""
"If a resource implements a ``__resource_url__`` method, it will be called"
" as the result of invoking the :func:`pyramid.url.resource_url` function "
"to generate a URL, overriding the default logic.  See "
":ref:`generating_the_url_of_a_resource` for more information."
msgstr ""

#: ../../whatsnew-1.0.rst:388
msgid ""
"The name ``registry`` is now available in a ``pshell`` environment by "
"default.  It is the application registry object."
msgstr ""

#: ../../whatsnew-1.0.rst:391
msgid ""
"Added support for json on Google App Engine by catching "
":exc:`NotImplementedError` and importing ``simplejson`` from "
"``django.utils``."
msgstr ""

#: ../../whatsnew-1.0.rst:395
msgid ""
"Added the :mod:`pyramid.httpexceptions` module, which is a facade for the"
" ``webob.exc`` module."
msgstr ""

#: ../../whatsnew-1.0.rst:398
msgid ""
"New class: :class:`pyramid.response.Response`.  This is a pure facade for"
" ``webob.Response`` (old code need not change to use this facade, it's "
"existence is mostly for vanity and documentation-generation purposes)."
msgstr ""

#: ../../whatsnew-1.0.rst:402
msgid ""
"The request now has a new attribute: ``tmpl_context`` for benefit of "
"Pylons users."
msgstr ""

#: ../../whatsnew-1.0.rst:405
msgid ""
"New API methods for :class:`pyramid.request.Request`: ``model_url``, "
"``route_url``, and ``static_url``.  These are simple passthroughs for "
"their respective functions in :mod:`pyramid.url`."
msgstr ""

#: ../../whatsnew-1.0.rst:410
msgid "Backwards Incompatibilities"
msgstr ""

#: ../../whatsnew-1.0.rst:412
msgid ""
"When a :class:`pyramid.exceptions.Forbidden` error is raised, its status "
"code now ``403 Forbidden``.  It was previously ``401 Unauthorized``, for "
"backwards compatibility purposes with :mod:`repoze.bfg`.  This change "
"will cause problems for users of Pyramid with :mod:`repoze.who`, which "
"intercepts ``401 Unauthorized`` by default, but allows ``403 Forbidden`` "
"to pass through.  Those deployments will need to configure "
":mod:`repoze.who` to also react to ``403 Forbidden``.  To do so, use a "
"repoze.who ``challenge_decider`` that looks like this::"
msgstr ""

#: ../../whatsnew-1.0.rst:428
msgid "The ``paster bfgshell`` command is now known as ``paster pshell``."
msgstr ""

#: ../../whatsnew-1.0.rst:430
msgid ""
"There is no longer an ``IDebugLogger`` object registered as a named "
"utility with the name ``repoze.bfg.debug``."
msgstr ""

#: ../../whatsnew-1.0.rst:433
msgid ""
"These deprecated APIs have been removed: "
"``pyramid.testing.registerViewPermission``, "
"``pyramid.testing.registerRoutesMapper``, "
"``pyramid.request.get_request``, ``pyramid.security.Unauthorized``, "
"``pyramid.view.view_execution_permitted``, ``pyramid.view.NotFound``"
msgstr ""

#: ../../whatsnew-1.0.rst:439
msgid ""
"The Venusian \"category\" for all built-in Venusian decorators (e.g. "
"``subscriber`` and ``view_config``/``bfg_view``) is now ``pyramid`` "
"instead of ``bfg``."
msgstr ""

#: ../../whatsnew-1.0.rst:443
msgid ""
"The ``pyramid.renderers.rendered_response`` function removed; use "
":func:`pyramid.renderers.render_to_response` instead."
msgstr ""

#: ../../whatsnew-1.0.rst:446
msgid ""
"Renderer factories now accept a *renderer info object* rather than an "
"absolute resource specification or an absolute path.  The object has the "
"following attributes: ``name`` (the ``renderer=`` value), ``package`` "
"(the 'current package' when the renderer configuration statement was "
"found), ``type``: the renderer type, ``registry``: the current registry, "
"and ``settings``: the deployment settings dictionary.  Third-party "
"``repoze.bfg`` renderer implementations that must be ported to Pyramid "
"will need to account for this.  This change was made primarily to support"
" more flexible Mako template rendering."
msgstr ""

#: ../../whatsnew-1.0.rst:456
msgid ""
"The presence of the key ``repoze.bfg.message`` in the WSGI environment "
"when an exception occurs is now deprecated.  Instead, code which relies "
"on this environ value should use the ``exception`` attribute of the "
"request (e.g. ``request.exception[0]``) to retrieve the message."
msgstr ""

#: ../../whatsnew-1.0.rst:461
msgid ""
"The values ``bfg_localizer`` and ``bfg_locale_name`` kept on the request "
"during internationalization for caching purposes were never APIs.  These "
"however have changed to ``localizer`` and ``locale_name``, respectively."
msgstr ""

#: ../../whatsnew-1.0.rst:465
msgid ""
"The default ``cookie_name`` value of the "
":class:`pyramid.authentication.AuthTktAuthenticationPolicy` now defaults "
"to ``auth_tkt`` (it used to default to ``repoze.bfg.auth_tkt``)."
msgstr ""

#: ../../whatsnew-1.0.rst:469
msgid ""
"The :func:`pyramid.testing.zcml_configure` API has been removed.  It had "
"been advertised as removed since :mod:`repoze.bfg` 1.2a1, but hadn't "
"actually been."
msgstr ""

#: ../../whatsnew-1.0.rst:473
msgid ""
"All environment variables which used to be prefixed with ``BFG_`` are now"
" prefixed with ``PYRAMID_`` (e.g. ``BFG_DEBUG_NOTFOUND`` is now "
"``PYRAMID_DEBUG_NOTFOUND``)"
msgstr ""

#: ../../whatsnew-1.0.rst:477
msgid ""
"Since the :class:`pyramid.interfaces.IAuthenticationPolicy` interface now"
" specifies that a policy implementation must implement an "
"``unauthenticated_userid`` method, all third-party custom authentication "
"policies now must implement this method.  It, however, will only be "
"called when the global function named "
":func:`pyramid.security.unauthenticated_userid` is invoked, so if you're "
"not invoking that, you will not notice any issues."
msgstr ""

#: ../../whatsnew-1.0.rst:485
msgid ""
"The ``configure_zcml`` setting within the deployment settings (within "
"``**settings`` passed to a Pyramid ``main`` function) has ceased to have "
"any meaning."
msgstr ""

#: ../../whatsnew-1.0.rst:489
msgid ""
"The ``make_app`` function has been removed from the :mod:`pyramid.router`"
" module.  It continues life within the ``pyramid_zcml`` package.  This "
"leaves the :mod:`pyramid.router` module without any API functions."
msgstr ""

#: ../../whatsnew-1.0.rst:494
msgid "Deprecations and Behavior Differences"
msgstr ""

#: ../../whatsnew-1.0.rst:496
msgid ""
":class:`pyramid.configuration.Configurator` is now deprecated.  Use "
":class:`pyramid.config.Configurator`, passing its constructor "
"``autocommit=True`` instead.  The "
":class:`pyramid.configuration.Configurator` alias will live for a long "
"time, as every application uses it, but its import now issues a "
"deprecation warning.  The :class:`pyramid.config.Configurator` class has "
"the same API as the :class:`pyramid.configuration.Configurator` class, "
"which it means to replace, except by default it is a *non-autocommitting*"
" configurator. The now-deprecated ``pyramid.configuration.Configurator`` "
"will autocommit every time a configuration method is called.  The "
":mod:`pyramid.configuration` module remains, but it is deprecated.  Use "
":mod:`pyramid.config` instead."
msgstr ""

#: ../../whatsnew-1.0.rst:508
msgid ""
"The :func:`pyramid.settings.get_settings` API is now deprecated.  Use "
"``pyramid.threadlocals.get_current_registry().settings`` instead or use "
"the ``settings`` attribute of the registry available from the request "
"(``request.registry.settings``)."
msgstr ""

#: ../../whatsnew-1.0.rst:513
msgid ""
"The decorator previously known as ``pyramid.view.bfg_view`` is now known "
"most formally as :class:`pyramid.view.view_config` in docs and scaffolds."
msgstr ""

#: ../../whatsnew-1.0.rst:516
msgid ""
"Obtaining the ``settings`` object via "
"``registry.{get|query}Utility(ISettings)`` is now deprecated.  Instead, "
"obtain the ``settings`` object via the ``registry.settings`` attribute.  "
"A backwards compatibility shim was added to the registry object to "
"register the settings object as an ISettings utility when "
"``setattr(registry, 'settings', foo)`` is called, but it will be removed "
"in a later release."
msgstr ""

#: ../../whatsnew-1.0.rst:523
msgid ""
"Obtaining the ``settings`` object via "
":func:`pyramid.settings.get_settings` is now deprecated.  Obtain it "
"instead as the ``settings`` attribute of the registry now (obtain the "
"registry via :func:`pyramid.threadlocal.get_registry` or as "
"``request.registry``)."
msgstr ""

#: ../../whatsnew-1.0.rst:529
msgid "Dependency Changes"
msgstr ""

#: ../../whatsnew-1.0.rst:531
msgid "Depend on Venusian >= 0.5 (for scanning conflict exception decoration)."
msgstr ""

#: ../../whatsnew-1.0.rst:534
msgid "Documentation Enhancements"
msgstr ""

#: ../../whatsnew-1.0.rst:536
msgid "Added a :mod:`pyramid.httpexceptions` API documentation chapter."
msgstr ""

#: ../../whatsnew-1.0.rst:538
msgid "Added a :mod:`pyramid.session` API documentation chapter."
msgstr ""

#: ../../whatsnew-1.0.rst:540
msgid "Added an API chapter for the :mod:`pyramid.response` module."
msgstr ""

#: ../../whatsnew-1.0.rst:542
msgid "Added a :ref:`sessions_chapter` narrative documentation chapter."
msgstr ""

#: ../../whatsnew-1.0.rst:544
msgid ""
"All documentation which previously referred to ``webob.Response`` now "
"uses :class:`pyramid.response.Response` instead."
msgstr ""

#: ../../whatsnew-1.0.rst:547
msgid ""
"The documentation has been overhauled to use imperative configuration, "
"moving declarative configuration (ZCML) explanations to an external "
"package, :term:`pyramid_zcml`."
msgstr ""

#: ../../whatsnew-1.0.rst:551
msgid ""
"Removed ``zodbsessions`` tutorial chapter.  It's still useful, but we now"
" have a SessionFactory abstraction which competes with it, and "
"maintaining documentation on both ways to do it is a distraction."
msgstr ""

#: ../../whatsnew-1.0.rst:555
msgid ""
"Added an example of ``WebTest`` functional testing to the testing "
"narrative chapter at :ref:`functional_tests`."
msgstr ""

#: ../../whatsnew-1.0.rst:558
msgid ""
"Extended the Resources chapter with examples of calls to resource-related"
" APIs."
msgstr ""

#: ../../whatsnew-1.0.rst:561
msgid ""
"Add \"Pyramid Provides More Than One Way to Do It\" to Design Defense "
"documentation."
msgstr ""

#: ../../whatsnew-1.0.rst:564
msgid ""
"The (weak) \"Converting a CMF Application to Pyramid\" tutorial has been "
"removed from the tutorials section.  It was moved to the "
"``pyramid_tutorials`` Github repository at "
"http://docs.pylonsproject.org/projects/pyramid_tutorials/dev/."
msgstr ""

#: ../../whatsnew-1.0.rst:569
msgid ""
"Moved \"Using ZODB With ZEO\" and \"Using repoze.catalog Within Pyramid\""
" tutorials out of core documentation and into the Pyramid Tutorials site "
"(http://docs.pylonsproject.org/projects/pyramid_tutorials/dev/)."
msgstr ""

#: ../../whatsnew-1.0.rst:573
msgid ""
"Removed API documentation for deprecated ``pyramid.testing`` APIs named "
"``registerDummySecurityPolicy``, ``registerResources``, "
"``registerModels``, ``registerEventListener``, "
"``registerTemplateRenderer``, ``registerDummyRenderer``, "
"``registerView``, ``registerUtility``, ``registerAdapter``, "
"``registerSubscriber``, ``registerRoute``, and ``registerSettings``."
msgstr ""

