# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-02 00:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../quick_tutorial/hello_world.rst:5
msgid "01: Single-File Web Applications"
msgstr "01：シングルファイルWebアプリケーション(01: Single-File Web Applications)"

#: ../../quick_tutorial/hello_world.rst:7
msgid ""
"What's the simplest way to get started in Pyramid? A single-file module. "
"No Python packages, no ``pip install -e .``, no other machinery."
msgstr ""
"ピラミッドを始めるにあたって最も簡単な方法は何ですか？"
"単一ファイルのモジュールです。"
"``pip install -e .`` は不要で、Pythonのパッケージはいりません。ほかの仕組みも不要です"

#: ../../quick_tutorial/hello_world.rst:12
msgid "Background"
msgstr "バッググラウンド(Background)"

#: ../../quick_tutorial/hello_world.rst:14
msgid ""
"Microframeworks were all the rage, until the next shiny thing came along."
" \"Microframework\" is a marketing term, not a technical one. They have a"
" low mental overhead: they do so little, the only things you have to "
"worry about are *your things*."
msgstr ""
"マイクロフレームワークは次のキラキラなものがでるまで大流行していました。"
"「マイクロフレームワーク」はマーケティング用語であり、技術的なものではありません。"
"彼らは精神的なオーバーヘッドが低くて少ししか持っていないので、"
"心配する必要があるのはあなたのものだけです。"

#: ../../quick_tutorial/hello_world.rst:18
msgid ""
"Pyramid is special because it can act as a single-file module "
"microframework. You can have a single Python file that can be executed "
"directly by Python. But Pyramid also provides facilities to scale to the "
"largest of applications."
msgstr ""
"Pyramidは単一ファイルモジュールのマイクロフレームワークとして機能できるため特別です。"
"単一のPythonファイルをPythonで直接実行できます。しかし、Pyramidは"
"大規模アプリケーションに対応するための機能も備えています。"

#: ../../quick_tutorial/hello_world.rst:22
msgid ""
"Python has a standard called :term:`WSGI` that defines how Python web "
"applications plug into standard servers, getting passed incoming "
"requests, and returning responses. Most modern Python web frameworks obey"
" an \"MVC\" (model-view-controller) application pattern, where the data "
"in the model has a view that mediates interaction with outside systems."
msgstr ""
"Pythonには、PythonのWebアプリケーションを標準サーバーに組み込む方法、"
"渡されたリクエストを取得する方法、レスポンスを返す方法を定義する :term:`WSGI` "
"という標準があります。最近のPythonのwebフレームワークのほとんどは、"
"モデル内のデータに外部システムとの対話を媒介するビューがある「MVC」"
"（モデルビューコントローラ）アプリケーションパターンに従います。"

#: ../../quick_tutorial/hello_world.rst:28
msgid ""
"In this step we'll see a brief glimpse of WSGI servers, WSGI "
"applications, requests, responses, and views."
msgstr ""
"このステップでは、WSGIサーバー、WSGIアプリケーション、リクエスト、"
"レスポンス、およびビューについて簡単に見ていきます。"

#: ../../quick_tutorial/hello_world.rst:33
msgid "Objectives"
msgstr "目標(Objectives)"

#: ../../quick_tutorial/hello_world.rst:35
msgid "Get a running Pyramid web application, as simply as possible."
msgstr "できるだけ簡単に、実行中のPyramid Webアプリケーションを入手してください。"

#: ../../quick_tutorial/hello_world.rst:37
msgid "Use that as a well-understood base for adding each unit of complexity."
msgstr "これを複雑なユニットを追加するために、よく考えられたベースとして使用してください。"

#: ../../quick_tutorial/hello_world.rst:39
msgid "Initial exposure to WSGI apps, requests, views, and responses."
msgstr "WSGIのアプリ、リクエスト、ビュー、およびレスポンスに対する最初の公開。"

#: ../../quick_tutorial/hello_world.rst:43
msgid "Steps"
msgstr "手順(Steps)"

#: ../../quick_tutorial/hello_world.rst:45
msgid "Make sure you have followed the steps in :doc:`requirements`."
msgstr ":doc:`requirements` の手順に従っていることを確認してください。"

#: ../../quick_tutorial/hello_world.rst:47
msgid ""
"Starting from your workspace directory (``~/projects/quick_tutorial``), "
"create a directory for this step:"
msgstr ""
"ワークスペースディレクトリ (``~/projects/quick_tutorial``)から、"
"今回の手順のディレクトリを作成します。"

#: ../../quick_tutorial/hello_world.rst:54
msgid "Copy the following into ``hello_world/app.py``:"
msgstr "以下をコピーして  ``hello_world/app.py`` に含めてください："

#: ../../quick_tutorial/hello_world.rst:59
msgid "Run the application:"
msgstr "アプリケーションを実行します:"

#: ../../quick_tutorial/hello_world.rst:65
msgid "Open http://localhost:6543/ in your browser."
msgstr "ブラウザで http://localhost:6543/ を開きます"

#: ../../quick_tutorial/hello_world.rst:69
msgid "Analysis"
msgstr "分析(Analysis)"

#: ../../quick_tutorial/hello_world.rst:71
msgid ""
"New to Python web programming? If so, some lines in the module merit "
"explanation:"
msgstr ""
"Python Webプログラミングは初めて？ そうであれば、モジュール内のいくつかの行に説明があります："

#: ../../quick_tutorial/hello_world.rst:74
msgid ""
"*Line 11*. The ``if __name__ == '__main__':`` is Python's way of saying, "
"\"Start here when running from the command line\", rather than when this "
"module is imported."
msgstr ""
"*11行目* ``if __name__ == '__main__':`` はモジュールとしてインポートの時ではなく、"
"「コマンドラインから実行するときにここからスタート」、というのがPythonの方法です。':"

#: ../../quick_tutorial/hello_world.rst:78
msgid ""
"*Lines 12-14*. Use Pyramid's :term:`configurator` in a :term:`context "
"manager` to connect :term:`view` code to a particular URL :term:`route`."
msgstr ""
"*12-14行目* コ :term:`context manager` でPyramidの :term:`configurator` を使用し"
"て、 :term:`view` コードを特定のURL :term:`route` に接続します。"

#: ../../quick_tutorial/hello_world.rst:81
msgid "*Lines 6-8*. Implement the view code that generates the :term:`response`."
msgstr "*6-8行目*　 :term:`response` を生成するビューコードを実装します。"

#: ../../quick_tutorial/hello_world.rst:83
msgid "*Lines 15-17*. Publish a :term:`WSGI` app using an HTTP server."
msgstr "*15-17行目*。HTTPサーバーを使用して :term:`WSGI` アプリケーションを公開します。"

#: ../../quick_tutorial/hello_world.rst:85
msgid ""
"As shown in this example, the :term:`configurator` plays a central role "
"in Pyramid development. Building an application from loosely-coupled "
"parts via :ref:`configuration_narr` is a central idea in Pyramid, one "
"that we will revisit regularly in this *Quick Tutorial*."
msgstr ""
"この例に示すように、 :term:`configurator` はPyramidの開発において"
"中心的な役割を果たします。 :ref:`configuration_narr` で疎結合のパーツ"
"からアプリケーションをビルドする ことはPyramidの中心的なアイデアです。"
"この *クイックチュートリアル* では定期的に再考します。"

#: ../../quick_tutorial/hello_world.rst:92
msgid "Extra credit"
msgstr "エクストラクレジット(Extra credit)"

#: ../../quick_tutorial/hello_world.rst:94
msgid "Why do we do this:"
msgstr "どうしてこれを行うのでしょうか:"

#: ../../quick_tutorial/hello_world.rst:100
msgid "...instead of:"
msgstr "以下の代わりに:"

#: ../../quick_tutorial/hello_world.rst:106
msgid "What happens if you return a string of HTML? A sequence of integers?"
msgstr "HTMLの文字列を返すとどうなりますか？整数のシーケンスでは？"

#: ../../quick_tutorial/hello_world.rst:108
msgid ""
"Put something invalid, such as ``print xyz``, in the view function. Kill "
"your ``python app.py`` with ``ctrl-C`` and restart, then reload your "
"browser. See the exception in the console?"
msgstr ""
" ``print xyz`` のような view関数を加えた場合は。 ``ctrl-C`` でKillを行い、"
" ``python app.py`` で再起動してから、ブラウザをリロードしてください。"
"コンソールの例外を参照してください。"

#: ../../quick_tutorial/hello_world.rst:112
msgid ""
"The ``GI`` in ``WSGI`` stands for \"Gateway Interface\". What web "
"standard is this modelled after?"
msgstr ""
" ``WSGI`` 内の ``GI`` は「ゲートウェイインターフェイス」の略です。どのWeb標準がモデル化されましたか？"
