# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-02 00:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../quick_tutorial/ini.rst:5
msgid "03: Application Configuration with ``.ini`` Files"
msgstr "03：.iniファイルを使ったアプリケーションの設定(03: Application Configuration with ``.ini`` Files)"

#: ../../quick_tutorial/ini.rst:7
msgid ""
"Use Pyramid's ``pserve`` command with a ``.ini`` configuration file for "
"simpler, better application running."
msgstr ""
"Pyramidの「pserve」コマンドを「.ini」設定ファイルとともに使用すると"
"より簡単でより優れたアプリケーションの実行が可能になります。"

#: ../../quick_tutorial/ini.rst:12
msgid "Background"
msgstr "背景(Background)"

#: ../../quick_tutorial/ini.rst:14
msgid ""
"Pyramid has a first-class concept of :ref:`configuration "
"<configuration_narr>` distinct from code. This approach is optional, but "
"its presence makes it distinct from other Python web frameworks. It taps "
"into Python's ``setuptools`` library, which establishes conventions for "
"installing and providing \"entry points\" for Python projects. Pyramid "
"uses an entry point to let a Pyramid application know where to find the "
"WSGI app."
msgstr ""
"Pyramidには コードとは異なる構成のファーストクラスの"
" :ref:`configuration <configuration_narr>` があります。"
"このアプローチはオプションですが、その存在は他のPython Webフレームワークとは差別かされます。"
"これは「setuptools」 、Pythonプロジェクトの「エントリーポイント」をインストールして規則を定める"
"Pythonのライブラリーを利用します。Pyramidはエントリポイントを使用して、"
"PyramidアプリケーションにWSGIアプリケーションの検索場所を知らせます。"

#: ../../quick_tutorial/ini.rst:23
msgid "Objectives"
msgstr "目標(Objectives)"

#: ../../quick_tutorial/ini.rst:25
msgid ""
"Modify our ``setup.py`` to have an entry point telling Pyramid the "
"location of the WSGI app."
msgstr "「setup.py」を修正してPyramidにWSGIアプリケーションの場所を知らせるエントリポイントを持つようにしてください。"

#: ../../quick_tutorial/ini.rst:28
msgid "Create an application driven by an ``.ini`` file."
msgstr "「.ini」ファイルによって駆動されるアプリケーションを作成します。"

#: ../../quick_tutorial/ini.rst:30
msgid "Start the application with Pyramid's ``pserve`` command."
msgstr "Pyramidの「pserve」コマンドでアプリケーションを起動します。"

#: ../../quick_tutorial/ini.rst:32
msgid "Move code into the package's ``__init__.py``."
msgstr "コードをパッケージの「__init__.py」に移動します。"

#: ../../quick_tutorial/ini.rst:36
msgid "Steps"
msgstr "手順(Steps)"

#: ../../quick_tutorial/ini.rst:38
msgid "First we copy the results of the previous step:"
msgstr "最初に、前の手順の結果をコピーします:"

#: ../../quick_tutorial/ini.rst:44
msgid ""
"Our ``ini/setup.py`` needs a setuptools \"entry point\" in the "
"``setup()`` function:"
msgstr ""
"「ini/setup.py」は setup() 関数内でsetuptoolsの「エントリポイント」で必要です："

#: ../../quick_tutorial/ini.rst:50
msgid ""
"We can now install our project, thus generating (or re-generating) an "
"\"egg\" at ``ini/tutorial.egg-info``:"
msgstr ""
"プロジェクトをインストールするできて、こうして「egg」"
"(ini/tutorial.egg-info)を生成（または再生成）できます:"


#: ../../quick_tutorial/ini.rst:57
msgid "Let's make a file ``ini/development.ini`` for our configuration:"
msgstr "設定用の「ini/development.ini」ファイルを作ってみましょう："

#: ../../quick_tutorial/ini.rst:63
msgid ""
"We can refactor our startup code from the previous step's ``app.py`` into"
" ````:"
msgstr "前のステップのからスタートアップコード（「app.py」）を"
"「ini/tutorial/__init__.py」にリファクタリングできます:"

#: ../../quick_tutorial/ini.rst:69
msgid "Now that ``ini/tutorial/app.py`` isn't used, let's remove it:"
msgstr "「ini/tutorial/app.py」は使われていないので削除しましょう："


#: ../../quick_tutorial/ini.rst:75
msgid "Run your Pyramid application with:"
msgstr "Pyramidアプリケーションを以下のように実行します:"

#: ../../quick_tutorial/ini.rst:81
msgid "Open http://localhost:6543/."
msgstr "http://localhost:6543/ を開きます。"

#: ../../quick_tutorial/ini.rst:84
msgid "Analysis"
msgstr "分析(Analysis)"

#: ../../quick_tutorial/ini.rst:86
msgid ""
"Our ``development.ini`` file is read by ``pserve`` and serves to "
"bootstrap our application. Processing then proceeds as described in the "
"Pyramid chapter on :ref:`application startup <startup_chapter>`:"
msgstr ""
"「development.ini」ファイルは「pserve」によってアプリケーションを読み込み"
"ブートストラップします。処理に関しては、Pyramidの章の"
" :ref:`application startup <startup_chapter>` で説明があるように進行します。"

#: ../../quick_tutorial/ini.rst:90
msgid "``pserve`` looks for ``[app:main]`` and finds ``use = egg:tutorial``."
msgstr "「pserve」は ``[app:main]`` を探して 「use = egg:tutorial」を見つけます。"

#: ../../quick_tutorial/ini.rst:92
msgid ""
"The projects's ``setup.py`` has defined an \"entry point\" (lines 10-13) "
"for the project's \"main\" entry point of ``tutorial:main``."
msgstr ""
"プロジェクト「setup.py」は、プロジェクトの「main」のtutorial:mainでのエント"
"リーポイントの「entry point」（10〜13行目）を定義しています。"


#: ../../quick_tutorial/ini.rst:95
msgid "The ``tutorial`` package's ``__init__`` has a ``main`` function."
msgstr "「tutorial」パッケージの「__init__」は「main」関数を持っています。"

#: ../../quick_tutorial/ini.rst:97
msgid ""
"This function is invoked, with the values from certain ``.ini`` sections "
"passed in."
msgstr "この関数は、特定の「.ini」セクションに値が渡されると呼び出されます。"

#: ../../quick_tutorial/ini.rst:100
msgid "The ``.ini`` file is also used for two other functions:"
msgstr "「.ini」ファイルは2つの他の関数にも使用されます:"

#: ../../quick_tutorial/ini.rst:102
msgid ""
"*Configuring the WSGI server*. ``[server:main]`` wires up the choice of "
"which WSGI *server* for your WSGI *application*. In this case, we are "
"using ``waitress`` which we specified in ``tutorial/setup.py`` and was "
"installed in the :doc:`requirements` step at the start of this tutorial."
"  It also wires up the *port number*: ``listen = localhost:6543`` tells "
"``waitress`` to listen on host ``localhost`` at port ``6543``."
msgstr ""
"*WSGIサーバーを設定します。* 「[server:main]」はどのWSGIサーバーをWSGIア"
"プリケーション用に選択するかが決まります。今回はチュートリアルの始めに、"
"この例では、「tutorial/setup.py」で指定した「waitress」を使用しています。"
"このチュートリアルの最初で :doc:`requirements` ステップにインストールされています。。"
"「listen = localhost：6543」は、ホストがlocalhostでポートは6543で待機する"
"ようにwaitressに指示します。"

#: ../../quick_tutorial/ini.rst:109
msgid ""
"Running the command ``$VENV/bin/pip install -e .`` will check for "
"previously installed packages in our virtual environment that are "
"specified in our package's ``setup.py`` file, then install our package in"
" editable mode, installing any requirements that were not previously "
"installed.  If a requirement was manually installed previously on the "
"command line or otherwise, in this case Waitress, then ``$VENV/bin/pip "
"install -e .`` will merely check that it is installed and move on."
msgstr ""
"「$VENV/bin/pip install -e .」コマンドを実行すると、パッケージの"
"ファイルで指定されている仮想環境内の以前にインストールされた 「setup.py」"
"パッ"ケージがチェックされます。パッケージが編集可能なモードでインストールされ、"
"以前にインストールされていなかったrequirementがインストールされます。"
"requirementが以前にコマンドライン「 $VENV/bin/pip install -e 」などで"
"手動でインストールされていた場合（この場合はWaitress）、"
"インストールされていることを確認するのみです。"

#: ../../quick_tutorial/ini.rst:111
msgid ""
"*Configuring Python logging*. Pyramid uses Python standard logging, which"
" needs a number of configuration values. The ``.ini`` serves this "
"function. This provides the console log output that you see on startup "
"and each request."
msgstr ""
"*Pythonロギングの設定*。PyramidはPythonの標準のロギングを使用しています。"
"これにはいくつかの値の設定が必要です。"
"「.ini」でこの機能を提供しています。"
"これにより、起動時および各リクエスト実行時に表示されるコンソールログ出力が提供されます。"

#: ../../quick_tutorial/ini.rst:116
msgid ""
"We moved our startup code from ``app.py`` to the package's "
"``tutorial/__init__.py``. This isn't necessary, but it is a common style "
"in Pyramid to take the WSGI app bootstrapping out of your module's code "
"and put it in the package's ``__init__.py``."
msgstr ""
"スタートアップコードを「app.py」からパッケージ「tutorial/__init__.py」に移行しました。"
"これは必ずしも必要ではありませんが、PyramidではモジュールのコードからWSGI"
"アプリのブートストラップを取り出して「__init__.py」パッケージに入れるのが一般的なスタイルです。"

#: ../../quick_tutorial/ini.rst:121
msgid ""
"The ``pserve`` application runner has a number of command-line arguments "
"and options. We are using ``--reload`` which tells ``pserve`` to watch "
"the filesystem for changes to relevant code (Python files, the INI file, "
"etc.) and, when something changes, restart the application. Very handy "
"during development."
msgstr ""
"「pserve」アプリケーションのランナーは、いくつかのコマンドライン引数と"
"オプションを持っています。「--reload」これはpserveで関連するコード"
"(Pythonファイル、INIファイルなど)の変更をファイルシステムで監視する"
"よう指示するものに使用しています。変更があった場合はアプリケーション"
"を再起動します。開発中に非常に便利です。"


#: ../../quick_tutorial/ini.rst:128
msgid "Extra credit"
msgstr "エクストラクレジット(Extra credit)"

#: ../../quick_tutorial/ini.rst:130
msgid ""
"If you don't like configuration and/or ``.ini`` files, could you do this "
"yourself in Python code?"
msgstr ""
"設定や「.ini」ファイルが気に入らない場合は、Pythonコードでこれを実行できますか？"

#: ../../quick_tutorial/ini.rst:133
msgid ""
"Can we have multiple ``.ini`` configuration files for a project? Why "
"might you want to do that?"
msgstr ""
"プロジェクトに複数の「.ini」設定ファイルを持たせられますか？"
"なぜあなたはそれをしたいのですか？"

#: ../../quick_tutorial/ini.rst:136
msgid ""
"The entry point in ``setup.py`` didn't mention ``__init__.py`` when it "
"declared ``tutorial:main`` function. Why not?"
msgstr ""
"「__init__.py」のエントリポイントは、「tutorial:main」関数を宣言した"
"ときsetup.pyは言及しなかった。なぜでしょうか？"

#: ../../quick_tutorial/ini.rst:139
msgid "What is the purpose of ``**settings``? What does the ``**`` signify?"
msgstr "「``**settings``」の目的は何ですか？ 「``**``」の意味は何ですか？""

#: ../../quick_tutorial/ini.rst:142
msgid ""
":ref:`project_narr`, :ref:`cookiecutters`, "
":ref:`what_is_this_pserve_thing`, :ref:`environment_chapter`, "
":ref:`paste_chapter`"
msgstr ""

