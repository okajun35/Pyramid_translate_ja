# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-02 00:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../api/url.rst:4
msgid ":mod:`pyramid.url`"
msgstr ""

#: of pyramid.url:1
msgid "Utility functions for dealing with URLs in pyramid"
msgstr ""

#: of pyramid.url.current_route_path:1 pyramid.url.current_route_url:1
#: pyramid.url.resource_url:1 pyramid.url.route_path:1 pyramid.url.route_url:1
#: pyramid.url.static_path:1 pyramid.url.static_url:1
msgid ""
"This is a backwards compatibility function.  Its result is the same as "
"calling::"
msgstr ""

#: of pyramid.url.resource_url:6
msgid "See :meth:`pyramid.request.Request.resource_url` for more information."
msgstr ""

#: of pyramid.url.route_url:6
msgid "See :meth:`pyramid.request.Request.route_url` for more information."
msgstr ""

#: of pyramid.url.current_route_url:6
msgid ""
"See :meth:`pyramid.request.Request.current_route_url` for more "
"information."
msgstr ""

#: of pyramid.url.route_path:6
msgid "See :meth:`pyramid.request.Request.route_path` for more information."
msgstr ""

#: of pyramid.url.current_route_path:6
msgid ""
"See :meth:`pyramid.request.Request.current_route_path` for more "
"information."
msgstr ""

#: of pyramid.url.static_url:6
msgid "See :meth:`pyramid.request.Request.static_url` for more information."
msgstr ""

#: of pyramid.url.static_path:6
msgid "See :meth:`pyramid.request.Request.static_path` for more information."
msgstr ""

#: of pyramid.url.urlencode:1
msgid ""
"An alternate implementation of Python's stdlib "
":func:`urllib.parse.urlencode` function which accepts unicode keys and "
"values within the ``query`` dict/sequence; all Unicode keys and values "
"are first converted to UTF-8 before being used to compose the query "
"string."
msgstr ""

#: of pyramid.url.urlencode:6
msgid ""
"The value of ``query`` must be a sequence of two-tuples representing "
"key/value pairs *or* an object (often a dictionary) with an ``.items()`` "
"method that returns a sequence of two-tuples representing key/value "
"pairs."
msgstr ""

#: of pyramid.url.urlencode:11
msgid ""
"For minimal calling convention backwards compatibility, this version of "
"urlencode accepts *but ignores* a second argument conventionally named "
"``doseq``.  The Python stdlib version behaves differently when ``doseq`` "
"is False and when a sequence is presented as one of the values.  This "
"version always behaves in the ``doseq=True`` mode, no matter what the "
"value of the second argument."
msgstr ""

#: of pyramid.url.urlencode:19
#, python-format
msgid ""
"Both the key and value are encoded using the ``quote_via`` function which"
" by default is using a similar algorithm to "
":func:`urllib.parse.quote_plus` which converts spaces into '+' characters"
" and '/' into '%2F'."
msgstr ""

#: of pyramid.url.urlencode:23
msgid ""
"In a key/value pair, if the value is ``None`` then it will be dropped "
"from the resulting output."
msgstr ""

#: of pyramid.url.urlencode:27
msgid ""
"Added the ``quote_via`` argument to allow alternate quoting algorithms to"
" be used."
msgstr ""

