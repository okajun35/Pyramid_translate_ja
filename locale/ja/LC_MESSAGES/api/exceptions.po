# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Agendaless Consulting
# This file is distributed under the same license as the The Pyramid Web
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The Pyramid Web Framework 1.9.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-02 00:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../api/exceptions.rst:4
msgid ":mod:`pyramid.exceptions`"
msgstr ""

#: of pyramid.exceptions.BadCSRFOrigin:1
msgid ""
"This exception indicates the request has failed cross-site request "
"forgery origin validation."
msgstr ""

#: of pyramid.exceptions.BadCSRFToken:1
msgid ""
"This exception indicates the request has failed cross-site request "
"forgery token validation."
msgstr ""

#: of pyramid.exceptions.PredicateMismatch:1
msgid ""
"This exception is raised by multiviews when no view matches all given "
"predicates."
msgstr ""

#: of pyramid.exceptions.PredicateMismatch:4
msgid ""
"This exception subclasses the :class:`HTTPNotFound` exception for a "
"specific reason: if it reaches the main exception handler, it should be "
"treated as :class:`HTTPNotFound`` by any exception view registrations. "
"Thus, typically, this exception will not be seen publicly."
msgstr ""

#: of pyramid.exceptions.PredicateMismatch:10
msgid ""
"However, this exception will be raised if the predicates of all views "
"configured to handle another exception context cannot be successfully "
"matched.  For instance, if a view is configured to handle a context of "
"``HTTPForbidden`` and the configured with additional predicates, then "
":class:`PredicateMismatch` will be raised if:"
msgstr ""

#: of pyramid.exceptions.PredicateMismatch:17
msgid ""
"An original view callable has raised :class:`HTTPForbidden` (thus "
"invoking an exception view); and"
msgstr ""

#: of pyramid.exceptions.PredicateMismatch:19
msgid ""
"The given request fails to match all predicates for said exception view "
"associated with :class:`HTTPForbidden`."
msgstr ""

#: of pyramid.exceptions.PredicateMismatch:22
msgid ""
"The same applies to any type of exception being handled by an exception "
"view."
msgstr ""

#: of pyramid.exceptions.ConfigurationError:1
msgid ""
"Raised when inappropriate input values are supplied to an API method of a"
" :term:`Configurator`"
msgstr ""

#: of pyramid.exceptions.URLDecodeError:1
msgid ""
"This exception is raised when :app:`Pyramid` cannot successfully decode a"
" URL or a URL path segment.  This exception behaves just like the Python "
"builtin :exc:`UnicodeDecodeError`. It is a subclass of the builtin "
":exc:`UnicodeDecodeError` exception only for identity purposes, mostly so"
" an exception view can be registered when a URL cannot be decoded."
msgstr ""

